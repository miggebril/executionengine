<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TTUSAPI</name>
    </assembly>
    <members>
        <member name="F:TTUSAPI.frmHiddenDispatcher.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:TTUSAPI.frmHiddenDispatcher.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:TTUSAPI.frmHiddenDispatcher.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.MarginLimit">
            <summary>Represents a credit limit for an account group for a single TT Gateway</summary>
            <remarks>Margin limits allow you to configure credit limits per account group that apply to individual TT Gateways. Because P&amp;L per account can span all exchanges,
            account-based margin limits ignore P&amp;L. Additionally, margin limits apply, even if product limits are not applied. Therefore, you can create margin limits
            without creating product limits.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimit.GatewayID">
            <summary>Gets the ID of the gateway associated with this margin limit</summary>
            <value>Integer identifying the gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimit.Currency">
            <summary>Gets the currency used to calculate risk</summary>
            <remarks>Guardian manages the supported currencies.</remarks>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.MarginLimit.Currency">Currency</see> object identifying the currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimit.Limit">
            <summary>Gets the maximum credit allowed for the gateway associated with this margin limit</summary>
            <remarks>The margin limit represents the maximum credit for the currency specified in the <see cref="P:TTUSAPI.DataObjects.MarginLimit.Currency">MarginLimit.Currency</see> property.</remarks>
            <value>Double value representing the credit limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimit.IsEnabled">
            <summary>Gets whether this margin limit is active</summary>
            <value>
            	<strong>true</strong> if the limit is enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.MarginLimitProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.MarginLimit">MarginLimit</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.MarginLimitProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.MarginLimitProfile.#ctor(TTUSAPI.DataObjects.MarginLimit)">
            <summary>Instantiates a new MarginLimitProfile from an existing <see cref="T:TTUSAPI.DataObjects.MarginLimit">MarginLimit</see> object</summary>
            <param name="marginLimit">Existing <see cref="T:TTUSAPI.DataObjects.MarginLimit">MarginLimit</see> object you want to modify</param>
            <remarks>You use this constructor when you want to modify an existing margin limit.</remarks>
            <returns>New <see cref="T:TTUSAPI.DataObjects.MarginLimitProfile">MarginLimitProfile</see> prepopulated with the existing information</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimitProfile.GatewayID">
            <summary>Gets or sets the ID of the gateway associated with this margin limit</summary>
            <value>Integer identifying the gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimitProfile.Currency">
            <summary>Gets or sets the currency used to calculate risk</summary>
            <remarks>Guardian manages the supported currencies.</remarks>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency">Currency</see> object identifying the currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimitProfile.IsEnabled">
            <summary>Gets or sets whether this margin limit is active</summary>
            <value>
            	<strong>true</strong> to enable the limit; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarginLimitProfile.Limit">
            <summary>Gets or sets the maximum credit allowed for the gateway associated with this margin limit</summary>
            <remarks>The margin limit represents the maximum credit for the currency specified in the <see cref="P:TTUSAPI.DataObjects.MarginLimitProfile.Currency">MarginLimit.Currency</see> property.</remarks>
            <value>Double value representing the credit limit</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ContractLimit">
            <summary>Represents the credit limit for a single contract.</summary>
            <remarks>When configuring risk at the account level, you can also configure risk per contract. Product limits can be set up or changed for specific contracts per account or Account Group; if an account belongs to an Account Group, only the group settings are used.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.ContractLimitID">
            <summary>Gets the unique ID for this contract limit</summary>
            <value>ID for this contract limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.ContractProductLimitID">
            <summary>Specifies the ID of the account group product limit associated with this contract limit</summary>
            <value>Integer representing the unique ID for the product limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.Contract">
            <summary>Specifies the contract associated with this contract limit</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.ContractLimit.Contract">Contract</see> object identifying the contract associated with this limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.TradingAllowed">
            <summary>Specifies whether this contract for a product can be traded</summary>
            <remarks>
            	<para>This property allows you to allow or disallow trading for a specific contract. Note the following:</para>
            	<list type="bullet">
            		<item>You can enable this property even if trading is not allowed at the product level (<see cref="P:TTUSAPI.DataObjects.AccountGroup.TradingAllowed">AccountGroup.TradingAllowed</see>
                property).</item>
            		<item>When a contract is configured with product limits, those limits apply to related spreads even if trading is disallowed for the product. A trader can be
                allowed to trade a spread while being prohibited from trading the contract directly.</item>
            	</list>
            </remarks>
            <value>
            	<strong>true</strong> to allow trading; <strong>false</strong>, otherwise</value>
            <seealso cref="T:TTUSAPI.DataObjects.AccountGroup"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.ContractLimitProfile"></seealso>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.MaxOrderQty">
            <summary>Specifies a limit on the maximum individual order size that can be entered for the contract</summary>
            <value>Integer representing the maximum quantity</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.MaxPosition">
            <summary>Specifies a position limit for the contract</summary>
            <value>Integer representing the maximum allowable position for the contract</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.PriceReasonability">
            <summary>Specifies how far from the market price a user may enter an order (in ticks) for the contract</summary>
            <remarks>
            	<para>This value affects the prices for outrights and for user-defined spreads that include the associated contract.</para>
            	<para>Contracts always use the product-level “Away from Market” setting.</para>
            </remarks>
            <value>Number of ticks away from the market</value>
            <seealso cref="T:TTUSAPI.DataObjects.AccountGroupProductLimit"></seealso>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.LastUpdatedTime">
            <summary>Gets the timestamp indicating when the limit was last modified</summary>
            <value>String containing the timestamp</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimit.CreatedTime">
            <summary>Gets the timestamp indicating when the limit was created</summary>
            <value>String containing the timestamp</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ContractLimitProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.ContractLimit">ContractLimit</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ContractLimitProfile.#ctor">
            <summary>Creates an instance for a new contract limit</summary>
            <returns>New ContractLimitProfile instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.ContractLimitProfile.#ctor(TTUSAPI.DataObjects.ContractLimit)">
            <summary>Creates an instance of a contract limit profile based on an existing contract limit</summary>
            <param name="contractLimit">
            	<see cref="T:TTUSAPI.DataObjects.ContractLimit">ContractLimit</see> object containing the contract limits</param>
            <remarks>You use this constructor when you want to modify an existing contract limit or to create a new contract limit based on an existing one.</remarks>
            <returns>New ContractLimitProfile object</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.Contract">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.Contract" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.TradingAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.TradingAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.MaxOrderQty">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.MaxOrderQty" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.MaxPosition">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.MaxPosition" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.PriceReasonability">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.PriceReasonability" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.LastUpdatedTime">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.LastUpdatedTime" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContractLimitProfile.CreatedTime">
            <contentfrom cref="P:TTUSAPI.DataObjects.ContractLimit.CreatedTime" filter=""/>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroupProductLimit">
            <summary>Class for setting product limits for an account group</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.ContractLimits">
            <summary>Specifies the contracts that override the product risk limits</summary>
            <value>Dictionary of</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.AllowTradingOutrights">
            <summary>Specifies whether members of this account group can trade the product as an outright contract</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.AllowTradingSpreads">
            <summary>Specifies whether members of this account group can trade spreads or strategies for this product</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.ApplyOutrightsPriceReasonabilityIntoMarket">
            <summary>Specifies whether to enforce the price reasonability for outrights</summary>
            <value>
            	<strong>true</strong> to enforce the limit; <strong>false</strong> to ignore the limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.ApplySpreadsPriceReasonabilityIntoMarket">
            <summary>Specifies whether to enforce the price reasonability for spreads or strategies using this product</summary>
            <value>
            	<strong>true</strong> to enforce the limit; <strong>false</strong> to ignore the limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxOutrightsOrderQty">
            <summary>Specifies maximum individual order size for an outright contract for this product</summary>
            <value>Unsigned integer specifying the maximum quantity</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxSpreadsOrderQty">
            <summary>Specifies maximum individual order size for spreads or strategies using this product</summary>
            <value>Unsigned integer specifying the maximum quantity</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxProductPosition">
            <summary>Specifies the position limit for this product</summary>
            <remarks>Maximum position can have various meanings depending on whether it's related to a Future, Option, Spread, or Strategy. To set the maximum position to
            unlimited, enter 0.</remarks>
            <value>Unsigned integer representing the maximum position (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxPositionPerContract">
            <summary>Specifies the position limit of outright contracts for this product</summary>
            <remarks>Maximum position can have various meanings depending on whether it's related to a Future, Option, Spread, or Strategy. To set the maximum position to
            unlimited, enter 0.</remarks>
            <value>Unsigned integer representing the maximum position (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxProductLongShort">
            <summary>the worst case total of long or short contracts for this product</summary>
            <value>Integer identifying the maximum number (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.OutrightsPriceReasonability">
            <summary>Specifies the number of ticks away from the market the user can trade this product in an outright contract</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.SpreadsPriceReasonability">
            <summary>Specifies the number of ticks away from the market the user can trade spreads or strategies for this product</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.TradeoutDays">
            <summary>Specifies number of before a contract expires to prevent trading</summary>
            <remarks>A value of zero (0) prohibits trading a contract for this product on its expiration day.</remarks>
            <value>Integer representing the number of days</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.OutrightsMarginPercentage">
            <summary>Specifies a percentage above or below the margin that a trader must have to trade an outright contract</summary>
            <value>Double value representing the percentage</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimit.SpreadsMarginPercentage">
            <summary>Specifies a percentage above or below the margin that a trader must have to spreads or strategies for this product</summary>
            <value>Double value representing the percentage</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroupProductLimitProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.AccountGroupProductLimitProfile">AccountGroupProductLimitProfile</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.AddContractLimit(TTUSAPI.DataObjects.ContractLimitProfile)">
            <summary>Adds contract-level limits that override the product-level limits for a specific contract associated with the product</summary>
            <param name="contractLimitProfile">
            	<see cref="T:TTUSAPI.DataObjects.ContractLimitProfile">ContractLimitProfile</see> object containing the limits</param>
            <remarks>
            	<para>When configuring risk at the account level, you can also configure risk per contract. Product limits can be set up or changed for specific contracts per
            account or Account Group; if an account belongs to an Account Group, only the group settings are used. Contract-level overrides for accounts and Account Groups
            requires TT Gateways 7.17 and later.</para>
            	<para>When configuring contract-level risk limits for an account or Account Group you can:</para>
            	<list type="bullet">
            		<item>Determine which contracts are tradeable</item>
            		<item>Specify various limits on maximum order size and position per contract</item>
            		<item>Configure price reasonability</item>
            	</list>
            </remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.ClearContractLimits">
            <summary>Removes all contract-level limits for the product for this account group</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.DeleteContractLimit(TTUSAPI.DataObjects.ContractLimitProfile)">
            <summary>Deletes a single contract limit from the product for this account group</summary>
            <param name="contractLimitProfile">
            	<see cref="T:TTUSAPI.DataObjects.ContractLimitProfile">ContractLimitProfile</see> object identifying the contract limits to delete</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.#ctor(TTUSAPI.DataObjects.AccountGroupProductLimit)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.AccountGroupProductLimitProfile">AccountGroupProductLimitProfile</see> object</summary>
            <param name="accountGroupProductLimit"><see cref="T:TTUSAPI.DataObjects.AccountGroupProductLimit">AccountGroupProductLimit</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.GatewayID">
            <summary>Gets or sets the ID of the gateway that offers this product</summary>
            <remarks>Integer representing the TT gateway</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.Product">
            <summary>Gets or sets the name of the product associated with this limit</summary>
            <remarks>
            	<para>This property identifies the product (e.g. FGBL ODAX, etc.) to which the limits apply. An asterisk (*) indicates that the limit applies to all products of
            the specified product type, unless an additional product limit exists with a specific product.</para>
            	<para>For example, assume you have two product limits configured for the CME-A Gateway: for one limit the product is * (all products) with a maximum position of
            10, and for the other limit the product is ES with a maximum position of 5. When trading ES, the account is limited to a maximum position of 5, and when
            trading all other products on the CME-A Gateway, the maximum position limit is 10.</para>
            </remarks>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.ProductTypeID">
            <summary>Gets or sets the type of product (option, future, spread, etc.) to which this product limit applies</summary>
            <value>Integer corresponding to the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.AllowTradingOutrights">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.AllowTradingOutrights" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.AllowTradingSpreads">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.AllowTradingSpreads" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.ApplyOutrightsPriceReasonabilityIntoMarket">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.ApplyOutrightsPriceReasonabilityIntoMarket" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.ApplySpreadsPriceReasonabilityIntoMarket">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.ApplySpreadsPriceReasonabilityIntoMarket" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.MaxOutrightsOrderQty">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxOutrightsOrderQty" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.MaxSpreadsOrderQty">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxSpreadsOrderQty" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.MaxProductPosition">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxProductPosition" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.MaxPositionPerContract">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxPositionPerContract" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.MaxProductLongShort">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.MaxProductLongShort" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.OutrightsPriceReasonability">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.OutrightsPriceReasonability" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.SpreadsPriceReasonability">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.SpreadsPriceReasonability" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.TradeoutDays">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.TradeoutDays" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.OutrightsMarginPercentage">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.OutrightsMarginPercentage" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProductLimitProfile.SpreadsMarginPercentage">
            <contentfrom cref="P:TTUSAPI.DataObjects.AccountGroupProductLimit.SpreadsMarginPercentage" filter=""/>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroup">
            <summary>Represents an existing group of accounts that share an aggregated set of risk limits</summary>
            <remarks>Account groups allow TT User Setup administrators to configure combined risk limits for all of the accounts assigned to an account group. New orders that are
            submitted with an account in a given account group are checked against the limits of the account group, based on the combined positions and working orders of
            each account in the group.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.AccountGroupID">
            <summary>
                 Gets the identifier for the account group
             </summary>
            <value>Integer representing the ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.Name">
             <summary>
                 Gets the name of the account group
             </summary>
            
             <value> String containing the account group name </value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.Description">
            <summary>Gets the description associated with the account group</summary>
            <value> String containing the group description </value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.CompanyID">
            <summary>Gets the ID of the company that owns this account group</summary>
            <value>Integer identifying the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.IsAutoAssigned">
            <summary>Gets whether this account group was created and assigned automatically to an account</summary>
            <value>
            	<strong>true</strong> if the group was assigned automatically; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.IsRiskEnabled">
            <summary>Gets whether account group-level risk check is enabled</summary>
            <value>
            	<strong>true</strong> if enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.IsWholesaleTradesRiskEnabled">
            <summary>Gets whether risk check for wholesale trades at a account group-level is enabled</summary>
            <value>
            	<strong>true</strong> if enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.TradingAllowed">
             <summary>
                 Gets whether to reject trades submitted by accounts within this account group
             </summary>
            
             <value>
                 <b>true</b> if accounts in this group can submit orders; <b>false</b>, otherwise
             </value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.AccountIDs">
            <summary>
                 Gets the account IDs associated with this account group
             </summary>
            <remarks>This property value corresponds to the <b>Associated Accounts</b> section in the <b>New Account Group</b> or <b>Edit Account Group</b> window.</remarks>
            <value>HashSet containing the account IDs </value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.AccountGroupPermissions">
            <summary>Gets the permissions associated with this account group</summary>
            <value>Dictionary of user group ID and AccountGroupPermission object pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.MarginLimits">
            <summary>
                 Gets the collection of margin limits associated with this account group
             </summary>
            <remarks>This property value corresponds to the <b>Margin Limits</b> section in the <b>New Account Group</b> or <b>Edit Account Group</b> window.</remarks>
            <value>
            	Dictionary of <see cref="T:TTUSAPI.DataObjects.MarginLimit"/> objects</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroup.ProductLimits">
            <summary>
                  Gets the collection of product limits associated with this account group
             </summary>
            <remarks>This property value corresponds to the <b>Product Limits</b> section in the <b>New Account Group</b> or <b>Edit Account Group</b> window.</remarks>
            <value>
            	<see cref="T:System.Collections.Generic.Dictionary">Dictionary</see> of <see cref="T:TTUSAPI.DataObjects.AccountGroupProductLimit"/> objects </value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroupProfile">
            <summary>Represents a new group of accounts that share an aggregated set of risk limits</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.#ctor">
            <summary>Creates an empty AccoungGroupProfile object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.#ctor(TTUSAPI.DataObjects.AccountGroup)">
            <summary>Instantiates a new AccountGroupProfile from an existing <see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see> object</summary>
            <param name="userGroup">Existing <see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see> object you want to modify</param>
            <remarks>You use this constructor when you want to modify an existing account group.</remarks>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile</see> prepopulated with the existing information</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.AddAccountGroupPermission(TTUSAPI.DataObjects.AccountGroupPermission)">
             <summary>Allows a user group to access this account group</summary>
            
             <param name="accountGroupPermission">
             <see cref="T:TTUSAPI.DataObjects.AccountGroupPermission">AccountGroupPermission</see> containing the user group you want to add
             </param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.DeleteAccountGroupPermission(TTUSAPI.DataObjects.AccountGroupPermission)">
             <summary>Removes a user group's permssion to access this account group</summary>
            
             <param name="accountGroupPermission">
             <see cref="T:TTUSAPI.DataObjects.AccountGroupPermission">AccountGroupPermission</see> containing the user group you want to remove
             </param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.AddProductLimit(TTUSAPI.DataObjects.AccountGroupProductLimitProfile)">
            <summary>Adds a product limit to this account group</summary>
            <param name="productLimit">TTUSAPI.DataObjects.AccountGroupProductLimitProfile</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.ClearProductLimits">
            <summary>Deletes all product limits associated with this account group</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.AddMarginLimit(TTUSAPI.DataObjects.MarginLimitProfile)">
            <summary>Adds a margin limit to this account group</summary>
            <param name="marginLimit">
            	<see cref="T:TTUSAPI.DataObjects.MarginLimit">MarginLimit</see> object containing the margin limits to add</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupProfile.ClearMarginLimits">
            <summary>Deletes all margin limits associated with this account group</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProfile.Name">
            <summary>Gets or sets the name of the account group</summary>
            <value>String containing the account group name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProfile.Description">
            <summary>Gets or sets the description associated with the account group</summary>
            <value>String containing the group description</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProfile.IsRiskEnabled">
            <summary>Gets or sets whether account group-level risk check is enabled</summary>
            <value>
            	<strong>true</strong> if enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProfile.IsWholesaleTradesRiskEnabled">
            <summary>Gets or sets whether account group-level risk check is enabled</summary>
            <value>
            	<strong>true</strong> if enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupProfile.TradingAllowed">
            <summary>Gets or sets whether to reject trades submitted by accounts within this account group</summary>
            <value>
            	<strong>true</strong> if accounts in this group can submit orders; <b>false</b>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroupPermission">
            <summary>Represents the collection of accounts and user groups permissioned for an account group</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupPermission.AccountIDs">
            <summary>Gets the account IDs associated with this account group permission</summary>
            <value>HashSet of IDs for each account in the group</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupPermission.UserGroupID">
            <summary>Gets the ID of the user group associated with this account group</summary>
            <value>Integer identifying the user group ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountGroupPermissionProfile">
            <summary>Class for creating or modifying an AccountGroupPermission</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupPermissionProfile.#ctor">
            <summary>Instantiates an empty <see cref="T:TTUSAPI.DataObjects.AccountGroupPermissionProfile">AccountGroupPermissionProfile</see></summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountGroupPermissionProfile">AccountGroupPermissionProfile</see> object</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountGroupPermissionProfile.#ctor(TTUSAPI.DataObjects.AccountGroupPermission)">
            <summary>Instantiates an <see cref="T:TTUSAPI.DataObjects.AccountGroupPermissionProfile">AccountGroupPermissionProfile</see> from an existing <see cref="T:TTUSAPI.DataObjects.AccountGroupPermission">AccountGroupPermission</see> object</summary>
            <param name="accountGroupPermission">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroupPermission">AccountGroupPermission</see> object to modify</param>
            <remarks>You use this constructor when you want to modify an existing account group permission object.</remarks>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountGroupPermissionProfile">AccountGroupPermissionProfile</see> object</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountGroupPermissionProfile.UserGroupID">
            <summary>Gets or sets the ID of the user group associated with this account group</summary>
            <value>Integer identifying the user group ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountPermission">
            <summary>Represents the users permitted to use this account</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountPermission.UserNames">
            <summary>Gets the universal login IDs with permssion to access this account</summary>
            <value>Collection of strings identifying the usernames</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountPermission.UserGroupID">
            <summary>Gets the ID of the user group that permission to access this account</summary>
            <value>Integer identifying the user group ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountPermissionProfile">
            <summary>Class for creating or modifying an <see cref="T:TTUSAPI.DataObjects.AccountPermission">AccountPermssion</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountPermissionProfile.#ctor">
            <summary>Instantiates an empty <see cref="T:TTUSAPI.DataObjects.AccountPermissionProfile">AccountPermissionProfile</see> object</summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountPermissionProfile">AccountPermissionProfile</see> object</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountPermissionProfile.#ctor(TTUSAPI.DataObjects.AccountPermission)">
            <summary>Instantiates a <see cref="T:TTUSAPI.DataObjects.AccountPermissionProfile">AccountPermissionProfile</see> object based on an existing <see cref="T:TTUSAPI.DataObjects.AccountPermission">AccountPermission</see> object</summary>
            <param name="accountPermission">
            	<see cref="T:TTUSAPI.DataObjects.AccountPermission">AccountPermission</see> object to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountPermissionProfile">AccountPermissionProfile</see> prepopulated with the existing information</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountPermissionProfile.UserGroupID">
            <summary>Gets the ID of the user group that permission to access this account</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountInfo">
            <summary>Represents a TT User Setup account</summary>
            <remarks>This class provides read-only access to an account.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.AccountID">
            <summary>Gets the unique ID for this account</summary>
            <remarks>TT User Setup generates and assigns this unique ID when it creates an account. The ID is used by customer default records and when incorporating risk.</remarks>
            <value>String containing the accound ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.Account">
            <summary>Gets the name of this account</summary>
            <value>String containing the account name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.AccountDescription">
            <summary>Gets the user-defined description for this account</summary>
            <value>String containing the account description</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.CompanyID">
            <summary>Gets the ID of the company that owns this account</summary>
            <value>Integer identifying the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.AccountGroupID">
            <summary>Gets the ID of the account group associated with this account</summary>
            <value>Integer representing the account group ID</value>
            <seealso cref="T:TTUSAPI.DataObjects.AccountGroup"></seealso>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.IsAutoStartOfDayManaged">
            <summary>Gets whether gateways automatically generate start-of-day (SOD) records for this account</summary>
            <value>
            	<strong>true</strong> if SOD generation is enabled; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.AccountPermissions">
            <value>Dictionary of user group ID and AccountPermission object pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.UserNames">
            <summary>Gets the universal logins associated with this account</summary>
            <value>Collection of strings representing the login names</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfo.GatewayLoginNames">
            <summary>Gets the list of gateways accessible through this account</summary>
            <value>Collection of strings representing the gateway names</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountInfoProfile">
            <summary>Represents an editable TT User Setup account</summary>
            <remarks>You can use this object to create or modify an <see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see> object.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.#ctor">
            <summary>Instantiates an empty <see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object</summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.#ctor(TTUSAPI.DataObjects.AccountInfo)">
            <summary>Instantiates a <see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object based on an existing <see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see> object</summary>
            <param name="accountInfo">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see> object to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> prepopulated with the existing information</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.AddAccountPermission(TTUSAPI.DataObjects.AccountPermission)">
            <summary>Permissions this account for specified users</summary>
            <param name="accountPermission">
            	<see cref="T:TTUSAPI.DataObjects.AccountPermission">AccountPermission</see> object containing the users allowed to use this account</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.DeleteAccountPermission(TTUSAPI.DataObjects.AccountPermission)">
            <summary>Removes permission for specified users to use this account</summary>
            <param name="accountPermission">
            	<see cref="T:TTUSAPI.DataObjects.AccountPermission">AccountPermission</see> object containing the users to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.AddGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Assigns this account to a gateway login.</summary>
            <param name="gatewayLogin"><see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object identifying the gateway login</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccountInfoProfile.DeleteGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Removes this account from a gateway login</summary>
            <param name="gatewayLogin"><see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object identifying the gateway login</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfoProfile.Account">
            <summary>Gets or sets the name of this account</summary>
            <value>String containing the account name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfoProfile.AccountDescription">
            <summary>Gets or sets the user-defined description for this account</summary>
            <value>String containing the account description</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfoProfile.AccountGroupID">
            <summary>Gets or sets the ID of the account group associated with this account</summary>
            <remarks>If you do not set this value when creating a new account, the server automatically creates a special <see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see>, with
            its <see cref="P:AccountGroup.IsAutoAssigned">IsAutoAssigned</see> property set to true, and sets the value of the <see cref="P:AccountInfo.AccountGroupID">AccountGroupID</see> property with the ID of the
            automatically-created group. If you later associated this AccountInfo with an existing <see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see>, the API automatically deletes the special
            group it created.</remarks>
            <value>Integer representing the account group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountInfoProfile.IsAutoStartOfDayManaged">
            <summary>Gets or sets whether gateways automatically generate start-of-day (SOD) records for this account</summary>
            <value>
            	<strong>true</strong> to enable SOD generation; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayCredential">
            <summary>Represents a set of TT gateway credentials for a gateway login</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.GatewayCredentialKey">
            <summary>Gets the unique key for this gateway crendentials</summary>
            <value>String containing the concatenation of the Name and GatewayID properties</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.GatewayID">
            <summary>Gets the ID corresponding to this gateway</summary>
            <value>Integer ID associated with this gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.Member">
            <summary>Gets the Member ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.Group">
            <summary>Gets the Group ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.Trader">
            <summary>Gets the Trader ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Trader ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredential.Name">
            <summary>Gets the MGT for this gateway credential</summary>
            <value>String containing the space-separated concatentation of the Member, Group, and Trader IDs</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayCredentialProfile">
            <summary>Represents a set of TT gateway credentials for a gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayCredentialProfile.#ctor(TTUSAPI.DataObjects.Gateway)">
            <summary>Instantiates an instance of the GatewayCredentialProfile class for a gateway</summary>
            <param name="gateway">
            	<see cref="T:TTUSAPI.DataObjects.Gateway"/> object identifying the gateway</param>
            <remarks>Use this constructor to create a new <see cref="T:TTUSAPI.DataObjects.GatewayCredential"/>.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayCredentialProfile.#ctor(TTUSAPI.DataObjects.GatewayCredential)">
            <summary>Instantiates a instance of a GatewayCredentialProfile class from an exisiting GatewayCredential</summary>
            <param name="gatewayCredential">
            	<see cref="T:TTUSAPI.DataObjects.GatewayCredential"/> object to modify</param>
            <remarks>Use this constructor to modify an existing <see cref="T:TTUSAPI.DataObjects.GatewayCredential"/>.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredentialProfile.GatewayID">
            <summary>Gets or sets the ID corresponding to this gateway</summary>
            <value>Integer ID associated with this gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredentialProfile.Member">
            <summary>Gets or sets the Member ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredentialProfile.Group">
            <summary>Gets or sets the Group ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayCredentialProfile.Trader">
            <summary>Gets or sets the Trader ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Trader ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGatewayCredential">
            <summary>Represents the users access to the gateway</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredential.Accessibility">
            <summary>Gets the rule for the user's access to the gateway login</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredential.FixAvailability">
            <summary>Gets whether a FIX Client has access to a given gateway login after performing a universal login</summary>
            <value>
            	<strong>true</strong> if a FIX client can access the gateway; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredential.OperatorID">
            <summary>Gets the Operator ID that identifies the trader or operator to the exchange</summary>
            <value>String containing the ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGatewayCredential.AccessibilityMode">
            <summary>Rules for defining how a user logs into a gateway</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserGatewayCredential.AccessibilityMode.NotAvailable">
            <summary>Indicates the user cannot access a gateway</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserGatewayCredential.AccessibilityMode.Available">
            <summary>Indicates whether a user has access to a gateway login after performing a universal login</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserGatewayCredential.AccessibilityMode.AutoLogin">
            <summary>Specifies that a user will automatically be logged into a gateway after logging into TT applications.</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserGatewayCredential.AccessibilityMode.MandatoryLogin">
            <summary>Indicates whether the user must log onto this Gateway when logging into TT applications. You can use this value to prevent users from bypassing risk
            limits by not logging into a specific Gateway.</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGatewayCredentialProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.UserGatewayCredential">UserGatewayCredential</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGatewayCredentialProfile.#ctor(TTUSAPI.DataObjects.UserGatewayCredential)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserGatewayCredential">UserGatewayCredential</see> object</summary>
            <param name="userGatewayCredential"><see cref="T:TTUSAPI.DataObjects.UserGatewayCredential">UserGatewayCredential</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredentialProfile.Accessibility">
            <summary>Gets or sets the rule for the user's access to the gateway login</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredentialProfile.FixAvailability">
            <summary>Gets or sets whether a FIX Client has access to a given gateway login after performing a universal login</summary>
            <value>
            	<strong>true</strong> if a FIX client can access the gateway; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGatewayCredentialProfile.OperatorID">
            <summary>Gets or sets the Operator ID that identifies the trader or operator to the exchange</summary>
            <value>String containing the ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGatewayLogin">
            <summary>Represents a Member/Group/Trader ID for a TT gateway</summary>
            <remarks>Gateway logins are the <em>MemberGroupTrader</em> IDs used to log into TT Gateways. You can assign unique account numbers and risk limits to each gateway
            login, and you can assign multiple gateway logins to a single user.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGatewayLoginProfile.#ctor(TTUSAPI.DataObjects.UserGatewayLogin)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserGatewayLogin">UserGatewayLogin</see> object</summary>
            <param name="userGatewayLogin"><see cref="T:TTUSAPI.DataObjects.UserGatewayLogin">UserGatewayLogin</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGatewayLoginProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGatewayLoginProfile.UpdateGateway(TTUSAPI.DataObjects.UserGatewayCredentialProfile)">
             <summary>Updates the settings for a gateway login associated with the user.</summary>
            
             <param name="userGatewayCredential"><see cref="T:TTUSAPI.DataObjects.UserGatewayCredentialProfile">UserGatewayCredentialProfile</see> object containing the updated settings</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.GatewayID">
            <summary>Gets the ID of the gateway that offers this product</summary>
            <value>Integer representing the TT gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.Product">
            <summary>Gets the name of the product associated with this limit</summary>
            <remarks>
            	<para>This property identifies the product (e.g. FGBL ODAX, etc.) to which the limits apply. An asterisk (*) indicates that the limit applies to all products of
            the specified product type, unless an additional product limit exists with a specific product.</para>
            	<para>For example, assume you have two product limits configured for the CME-A Gateway: for one limit the product is * (all products) with a maximum position of
            10, and for the other limit the product is ES with a maximum position of 5. When trading ES, the account is limited to a maximum position of 5, and when
            trading all other products on the CME-A Gateway, the maximum position limit is 10.</para>
            </remarks>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.ProductTypeID">
            <summary>Gets the type of product (option, future, spread, etc.) to which this product limit applies</summary>
            <value>Integer corresponding to the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.AdditionalMarginPercent">
            <summary>Gets a percentage above or below the margin that a trader must have to trade the contract</summary>
            <remarks>This property indicates the percentage above or below the margin that a trader must have to trade the contract. In other words, additional margin increases or
            decreases the margin requirement when calculating risk limits.</remarks>
            <value>Double value representing the percentage</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.MaxOrderQty">
            <summary>Gets the a limit on the maximum individual order size that can be entered for the associated product</summary>
            <value>Unsigned integer specifying the maximum quantity</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.MaxPosition">
            <summary>
            Gets the position limit for a given product
            </summary>
            <remarks>
            Maximum position can have various meanings depending on whether it's related to a Future, Option, Spread, or Strategy.
            </remarks>
            <value>Unsigned integer representing the maximum position (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.MaxLongShort">
            <summary>Gets the worst case total of long or short contracts per product</summary>
            <value>Integer identifying the maximum number (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.AllowTradeOut">
            <summary>Gets whether the trader can exceed maximum order quantity or available credit limits to reduce risk for the specified contract</summary>
            <remarks>Note: Valid only for Gateway Login product limits.</remarks>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.TradingAllowed">
            <summary>Gets whether the product in the product field can be traded</summary>
            <remarks>Note: Valid only for Account Group product limits.</remarks>
            <value>
            	<strong>true</strong> to allow trading; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.EnforceOrderOffsetLimit">
            <summary>Gets whether to enforce the specified order offset limt</summary>
            <remarks>This property determines whether to enforce the rate specified in the <see cref="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.OrderOffsetLimit"/> property. You can use these two properties to prevent "fat-finger"
            mistakes, such as accidentally submitting an order far away from the market.</remarks>
            <value>true to enforce the limit; false to ignore the limit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.OrderOffsetLimit">
            <summary>Gets the number of ticks away from the market the user can trade</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimit.IsPositiveOffsetOnly">
            <summary>Gets whether to limit the order offset to away from the market</summary>
            <value>true to allow orders only away from the market; false to allow orders in either direction</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile">GatewayLoginProductLimitProfile</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.#ctor(TTUSAPI.DataObjects.GatewayLoginProductLimit)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile">GatewayLoginProductLimitProfile</see> object</summary>
            <param name="gatewayLoginProductLimit"><see cref="T:TTUSAPI.DataObjects.GatewayLoginProductLimit">GatewayLoginProductLimit</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.GatewayID">
            <summary>Gets or sets the ID of the gateway that offers this product</summary>
            <remarks>Integer representing the TT gateway</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.Product">
            <summary>Gets or sets the name of the product associated with this limit</summary>
            <remarks>
            	<para>This property identifies the product (e.g. FGBL ODAX, etc.) to which the limits apply. An asterisk (*) indicates that the limit applies to all products of
            the specified product type, unless an additional product limit exists with a specific product.</para>
            	<para>For example, assume you have two product limits configured for the CME-A Gateway: for one limit the product is * (all products) with a maximum position of
            10, and for the other limit the product is ES with a maximum position of 5. When trading ES, the account is limited to a maximum position of 5, and when
            trading all other products on the CME-A Gateway, the maximum position limit is 10.</para>
            </remarks>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.ProductTypeID">
            <summary>Gets or sets the type of product (option, future, spread, etc.) to which this product limit applies</summary>
            <value>Integer corresponding to the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.AdditionalMarginPercent">
            <summary>Gets or sets a percentage above or below the margin that a trader must have to trade the contract</summary>
            <remarks>This property indicates the percentage above or below the margin that a trader must have to trade the contract. In other words, additional margin increases or
            decreases the margin requirement when calculating risk limits.</remarks>
            <value>Double value representing the percentage</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.MaxOrderQty">
            <summary>Gets or sets the a limit on the maximum individual order size that can be entered for the associated product</summary>
            <value>Unsigned integer specifying the maximum quantity</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.MaxPosition">
            <summary>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Gets or sets the position limit for a given product</span>
            </summary>
            <remarks>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Maximum position can have various meanings depending on whether it's related to a Future, Option, Spread, or Strategy. <span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            To set the maximum position to unlimited, enter 0.</span></span>
            </remarks>
            <value>Unsigned integer representing the maximum position (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.MaxLongShort">
            <summary>Gets or sets <span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">the
            worst case total of long or short contracts per product</span></summary>
            <value>Integer identifying the maximum number (0 for unlimited)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile.AllowTradeOut">
            <summary>Gets or sets whether the trader can exceed maximum order quantity or available credit limits to reduce risk for the specified contract</summary>
            <remarks>Note: Valid only for Gateway Login product limits.</remarks>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroupPermission.FixServerNames">
            <summary>Gets the FIX Servers associated with this user group</summary>
            <value>Hash set of FIX Server names</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroupPermission.UserNames">
            <summary>Gets the users associated with this group</summary>
            <value>Hash set of user names</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroupPermission.UserGroupID">
            <value>Integer representing the group ID</value>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGroupPermissionProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGroupPermissionProfile.#ctor(TTUSAPI.DataObjects.UserGroupPermission)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserGroupPermission">UserGroupPermission</see> object</summary>
            <param name="userGroupPermission"><see cref="T:TTUSAPI.DataObjects.UserGroupPermission">UserGroupPermission</see> object to modify</param>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayLoginRiskSettings">
            <summary>Represents the gateway-level risk settings</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.RiskSettings">
            <summary>Base class for common user and gateway risk settings</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.RiskSettings.TradingAllowed">
            <summary>Gets whether the user is allowed to submit orders</summary>
            <value>true if trading allowed, false otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.RiskSettings.Credit">
            <summary>Gets the amount of money available at the start of a trading session</summary>
            <value>Integer representing an credit amount in the user's currency; 0 or null indicates unlimited credit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.RiskSettings.Currency">
            <summary>Gets the currency for the Credit property</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object identifying the credit currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.RiskSettings.UseSimulationCredit">
            <summary>Gets whether to use the simulation credit for TT SIM trading</summary>
            <value>
            	<strong>true</strong> to use the value in the <see cref="P:TTUSAPI.DataObjects.RiskSettings.SimulationCredit"/> property; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.RiskSettings.SimulationCredit">
            <summary>Gets the credit limit for the user when using TT SIM</summary>
            <value>Integer representing an credit amount in the user's currency; 0 or null indicates unlimited credit</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginRiskSettings.IgnorePnl">
            <summary>Gets P&amp;L whether is used in available credit calculations</summary>
            <value>
            	<strong>true</strong> if P&amp;L is used for risk calculations; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginRiskSettings.IsRiskEnabled">
            <summary>Gets whether Guardian risk checks orders sent with this gateway login.</summary>
            <value>
            	<strong>true</strong> if Guardian checks risk for orders sent with this gateway login; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginRiskSettings.EnableSODs">
            <summary>Gets whether the gateways assigned to this gateway login can generate start-of-day records</summary>
            <value>
            	<strong>true</strong> if the gateways can generate SODs; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayLoginRiskSettingsProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.GatewayLoginRiskSettings">GatewayLoginRiskSettings</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginRiskSettingsProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginRiskSettingsProfile.#ctor(TTUSAPI.DataObjects.GatewayLoginRiskSettings)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.GatewayLoginRiskSettings">GatewayLoginRiskSettings</see> object</summary>
            <param name="riskSettings"><see cref="T:TTUSAPI.DataObjects.GatewayLoginRiskSettings">GatewayLoginRiskSettings</see> object to modify</param>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayLogin">
            <summary>Represents a Member/Group/Trader ID for a TT gateway</summary>
            <remarks>
            	<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Gateway logins are the</span>
            	<i style="LINE-HEIGHT: normal; WIDOWS: 2; TEXT-TRANSFORM: none; FONT-VARIANT: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT-FAMILY: Arial; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); FONT-SIZE: 13px; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">MemberGroupTrader</i>
            	<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            IDs used to log into TT</span>%%<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Gateways.
            You can assign unique account numbers and risk limits to each gateway login, and you can assign multiple gateway logins to a single user.</span></remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.Name">
            <summary>Gets the MGT for this gateway login</summary>
            <value>String containing the space-separated concatentation of the Member, Group, and Trader IDs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.GatewayLoginID">
            <summary>Gets the unique ID for the gateway login</summary>
            <value>
            	<see cref="T:System.Int32"/> identifying the gateway login</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.Member">
            <summary>Gets the Member ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.Group">
            <summary>Gets the Group ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.Trader">
            <summary>Gets the Trader ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Trader ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.Alias">
            <summary>Gets the alias associated with this gateway login</summary>
            <remarks>The alias is typically the proper name of the user assigned to the gateway login.</remarks>
            <value>String containing the alias or an empty string ("") if no alias exists</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.GatewayLoginRiskSettings">
            <summary>Gets the risk settings associated with a gateway login</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.GatewayLogin.GatewayLoginRiskSettings">GatewayLoginRiskSettings</see> object containing the risk settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.HasPassword">
            <summary>Gets whether this login has a password associated with it</summary>
            <value>
            	<strong>true</strong> if the login uses a password; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.IsAdmin">
            <summary>Gets whether this login has administrator rights</summary>
            <value>
            	<strong>true</strong> for administrator logins; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.IsExchangeCredential">
            <summary>Gets whether this login represents an exchange trader ID</summary>
            <value>
            	<strong>true</strong> for exchange trader IDs; <strong>false</strong> for TTORD IDs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.UserGroupPermissions">
            <value>
            	<see cref="T:System.Collections.Generic.Dictionary"/> of UserGroupID and UserGroupPermission pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.GatewayCredentials">
            <summary>Gets the collection of gateway credentials associated with this gateway login</summary>
            <value>
            	<see cref="T:System.Collections.Generic.Dictionary"/> of GatewayGredentialKey and GatewayCredential pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.ProductLimits">
            <summary>Returns the collection of product limits assigned to the gateway login</summary>
            <value>
            	<see cref="T:System.Collections.Generic.Dictionary"/> of ProductKey and ProductLimit pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.AccountIDs">
            <summary>Gets the collection of account numbers associated with this gateway login</summary>
            <value>
            	HashSet of integers representing the trader's account numbers</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.UserNames">
            <summary>Gets the collection of users to which the gateway login is assigned</summary>
            <value>
            	<see cref="T:System.Collections.Generic.HashSet"/> of usernames</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLogin.FixServerNames">
            <summary>Gets the names of the FIX Adapter servers accessible through the gateway long</summary>
            <value>
            	<see cref="T:System.Collections.Generic.HashSet"/> of FIX Adapter server names</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayLoginProfile">
            <summary>Represents a Member/Group/Trader ID for a TT gateway</summary>
            <remarks>
            	<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Gateway logins are the</span>
            	<i style="LINE-HEIGHT: normal; WIDOWS: 2; TEXT-TRANSFORM: none; FONT-VARIANT: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT-FAMILY: Arial; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); FONT-SIZE: 13px; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">MemberGroupTrader</i>
            	<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            IDs used to log into TT</span>%%<span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Gateways.
            You can assign unique account numbers and risk limits to each gateway login, and you can assign multiple gateway logins to a single user.</span></remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.#ctor(TTUSAPI.DataObjects.GatewayLogin)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin</see> object</summary>
            <param name="gatewayLogin"><see cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddUserGroupPermission(TTUSAPI.DataObjects.UserGroupPermission)">
            <summary>Adds user group permissions to the gateway login</summary>
            <param name="userGroupPermission">
            	<see cref="T:TTUSAPI.DataObjects.UserGroupPermission"/> object representing the group permissions</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteUserGroupPermission(TTUSAPI.DataObjects.UserGroupPermission)">
            <summary>Removes the specified user group permission from the gateway login</summary>
            <param name="userGroupPermission">
            	<see cref="T:TTUSAPI.DataObjects.UserGroupPermission"/> object identifying the permissions to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddGatewayCredential(TTUSAPI.DataObjects.GatewayCredentialProfile)">
            <summary>Adds a gateway to the gateway login</summary>
            <param name="gatewayCredential">
            	<see cref="T:TTUSAPI.DataObjects.GatewayCredentialProfile"/> object containing the gateway information</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddProductLimit(TTUSAPI.DataObjects.GatewayLoginProductLimitProfile)">
            <summary>Adds a product limit entry to the gateway login</summary>
            <param name="productLimit">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile"/> object containing the product limit details</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddAccount(TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Adds an account to the gateway login</summary>
            <param name="account">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile"/> object containing the account information</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddUser(TTUSAPI.DataObjects.UserProfile)">
            <summary>Adds a user to the gateway login</summary>
            <param name="user">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile"/> object identifying the user</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.AddFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Adds a FIX Adapter server to gateway login</summary>
            <param name="fixServer">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile"/> object containing information about the FIX Adapter</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearUserGroupPermissions">
            <summary>Removes all user group permissions from the gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearAccounts">
            <summary>Removes all accounts fromthe gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearProductLimits">
            <summary>Removes all product limit entries from the gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearGatewayCredentials">
            <summary>Removes all gateways from the gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearUsers">
            <summary>Removes all users from the gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.ClearFixServers">
            <summary>Removes all FIX Adpater servers from the gateway login</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteGatewayCredential(TTUSAPI.DataObjects.GatewayCredential)">
            <summary>Removes the specified gateway from the gateway login</summary>
            <param name="gatewayCredential">
            	<see cref="T:TTUSAPI.DataObjects.GatewayCredential"/> object identifying the gateway to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteProductLimit(TTUSAPI.DataObjects.GatewayLoginProductLimitProfile)">
            <summary>Removes the specified product limit entry from the gateway login</summary>
            <param name="productLimit">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProductLimitProfile"/> object identifying the product limit entry to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteAccount(TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Removes the specified account from the gateway login</summary>
            <param name="account">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile"/> object identifying the account to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteUser(TTUSAPI.DataObjects.UserProfile)">
            <summary>Removes the specified user from the gateway login</summary>
            <param name="user">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile"/> object identifying the user to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayLoginProfile.DeleteFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Removes the specified FIX Adapter server from the gateway login</summary>
            <param name="fixServer">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile"/> object identifying the FIX Adapter to remove</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.Member">
            <summary>Gets or sets the Member ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.Group">
            <summary>Gets or sets the Group ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.Trader">
            <summary>Gets or sets the Trader ID portion of the TT MGT credentials for this gateway</summary>
            <value>String containing the Trader ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.Alias">
            <summary>Gets or sets the alias associated with this gateway login</summary>
            <remarks>The alias is typically the proper name of the user assigned to the gateway login.</remarks>
            <value>String containing the alias or an empty string ("") if no alias exists</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.Password">
            <summary>Gets or sets the password required for a gateway login</summary>
            <remarks>Currently, passwords are needed only for Exchange Trader Logins is some markets.</remarks>
            <value>String containing the password</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayLoginProfile.GatewayLoginRiskSettings">
            <summary>Gets or sets the risk settings associated with a gateway login</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.GatewayLoginProfile.GatewayLoginRiskSettings">GatewayLoginRiskSettings</see> object containing the risk settings</value>
            <seealso cref="P:TTUSAPI.DataObjects.GatewayLoginProfile.GatewayLoginRiskSettings"></seealso>
        </member>
        <member name="T:TTUSAPI.DataObjects.StateProvince">
            <summary>Represents a state or province withn in a country</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.StateProvince.StateProvinceID">
            <summary>Gets the unique ID or this state or province</summary>
            <value>Integer identifying the country associated with this state or province</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.StateProvince.CountryID">
            <summary>Gets the unique ID associated with the country</summary>
            <value>Integer identifying the country associated with this state or province</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.StateProvince.Abbreviation">
            <summary>Gets the abbreviation for the state or province</summary>
            <value>String containing the abbreviation, such as "TX" for the state of Texas in the United States</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.StateProvince.FullName">
            <summary>Gets the full name of the state or province</summary>
            <value>String containing the name, such as "Ontario" in Canada</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.Country">
            <summary>Represents a country</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Country.CountryID">
            <summary>Gets the unique ID for the country</summary>
            <value>Integer presenting the country ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Country.CountryCode">
            <summary>Gets the ISO-standard code for the country</summary>
            <value>String containing the ISO country code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Country.CountryName">
            <summary>Gets the name of the country</summary>
            <value>String containing the country name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Country.CommonCountry">
            <summary>Gets whether the country is part of the common group of countries </summary>
            <value>true if the country is part of the common group of countries</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Country.States">
            <summary>Gets the states or provinces associated with this country</summary>
            <value>Dictionary of country ID and <see cref="T:TTUSAPI.DataObjects.StateProvince">StateProvince</see> object pairs, if available</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XTraderMode">
            <summary>Represents the X_TRADER mode setting for X_TRADER users</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.XTraderMode.XTraderModeID">
            <summary>Gets the ID for this mode</summary>
            <value>Integer representing the mode</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XTraderMode.XTraderModeName">
            <summary>Gets the name for this X_TRADER mode</summary>
            <remarks>The value corresonds to the name displayed in the <strong>X_TRADER/X_RISK</strong> tab of the <strong>New User</strong> and <strong>Edit User</strong> windows
            in TT User Setup.</remarks>
            <value>
            	<see cref="T:System.String"/> containing the mode name, such as "X_TRADER" or "X_TRADER Pro"</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.TTApplication">
            <summary>Represents a TT client application</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.TTApplication.ApplicationID">
            <summary>Gets the unique ID for the TT application</summary>
            <value>Integer identifying the application</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.TTApplication.DisplayName">
            <summary>Gets the name of the TT client application</summary>
            <value>String containing the application name, such as "X_TRADER"</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.TTApplication.IsVersionRuleAllowed">
            <summary>Gets whether you can create version rules for this application</summary>
            <remarks>TT does not allow version rule checking for some of its applications. When you request a list of TT applications, the server returns all TT client
            applications. If your application supplies a list of applications for creating version rules, you can use this property value to hide these TT applications
            from the list.</remarks>
            <value>
            	<strong>true</strong> if you can create a version rule; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.Market">
            <summary>Represents an exchange that offers tradable products</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Market.MarketID">
            <summary>Gets the ID of the market</summary>
            <value>
            	<see cref="T:System.Int32"/> representing the market ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Market.MarketName">
            <summary>Gets the name of the market</summary>
            <value>
            	<see cref="T:System.String"/> containing the market name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Market.IsSynthetic">
            <summary>Gets whether the market is a synthetic market</summary>
            <value>true if the market is an Autospreader SE, Algo SE, or Synthetic SE market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Market.MarketType">
            <summary>Gets the type of market represented by this market</summary>
            <value>
            	<see cref="T:TTUSAPI.MarketType"/> enum identifying the market type</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.Gateway">
            <summary>Represents a TT Gateway</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.MarketID">
            <summary>Gets the ID of the market associated with the gateway</summary>
            <value>
            	<see cref="T:System.Int32"/> representing the market ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.GatewayID">
            <summary>Gets the ID that uniquely identifies the gateway</summary>
            <value>
            	<see cref="T:System.Int32"/> identifying the gateway</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.GatewayName">
            <summary>Gets the name of the gateway</summary>
            <value>
            	<see cref="T:System.String"/> containing the gateway name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.IsSynthetic">
            <summary>Gets whether the gateway is a synthetic gateway</summary>
            <value>true if the gateway is part of a synthetic market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.MarketType">
            <summary>Gets the type of market associated with the gateway</summary>
            <value>
            	<see cref="T:TTUSAPI.MarketType"/> enum identifying the market type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.IsLocked">
            <summary>Gets whether the gateway is a locked for assigning to gateway logins</summary>
            <value>true if the gateway is locked and cannot be assigned</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Gateway.IsActive">
            <summary>Gets whether the gateway is active in the environment having had a heartbeat recently</summary>
            <value>true if the gateway is active and can be used for auto-generating gatewayl login credentials</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayProfile">
            <summary>Class for modifying gateway</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.GatewayProfile.#ctor(TTUSAPI.DataObjects.Gateway)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.Gateway">Gateway</see> object</summary>
            <param name="gateway"><see cref="T:TTUSAPI.DataObjects.Gateway">ContactInfo</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayProfile.IsLocked">
            <summary>Gets or sets the ID of the locked state of the Gateway obeject</summary>
            <value>Integer representing the locked state</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ProductType">
            <summary>Represents a supported product type</summary>
            <remarks>
            	<para>This class represents a product type an Exchange allows traders to trade for a product. Product types include:</para>
            	<list type="bullet">
            		<item>Future</item>
            		<item>Spread</item>
            		<item>Option</item>
            		<item>Strategy</item>
            		<item>Stock</item>
            		<item>Bond</item>
            		<item>Swap</item>
            		<item>Energy</item>
            		<item>FOREX</item>
            		<item>NDF</item>
            		<item>Warrant</item>
            	</list>
            </remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductType.ProductTypeID">
            <summary>Gets the ID of this product type</summary>
            <value>
            	<see cref="T:System.Int32"/>
            </value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductType.ProductTypeName">
            <summary>Gets the name of the product type</summary>
            <remarks>You can use this property to display the name of the product type, such as "Future" or "Strategy".</remarks>
            <value>
            	<see cref="T:System.String"/> containing the product type name</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccountType">
            <summary>Represents a type of trading account</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountType.AccountTypeID">
            <summary>Gets the ID associated with an account type</summary>
            <value>
            	<see cref="T:System.Int32"/> value identifying the account type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccountType.AccountTypeName">
            <summary>Gets the name associated with an account type</summary>
            <remarks>
            	<para>This property returns one of the following string values:</para>
            	<list type="bullet">
            		<item>"A1" for first agent accounts, such as a broker account</item>
            		<item>"A2" - "A9" for second through ninth agent accounts</item>
            		<item>"G1" for a pre-designated give-up trade</item>
            		<item>"G2" for a designated give-up trade</item>
            		<item>"G3" for a second give-up trade</item>
            		<item>"M1" for a first market maker account</item>
            		<item>"M2" for a second market-maker account</item>
            		<item>"M3" for a third market-maker account</item>
            		<item>"P1" for a first principal account, such as a proprietary trader account</item>
            		<item>"P2" for a second principal account</item>
            		<item>"P3" for a third principal account</item>
            		<item>"U1" - "U3" for unallocated accounts related to orders that have not been allocated to a customer</item>
            	</list>
            </remarks>
            <value>
            	<see cref="T:System.String"/> containing the account type name</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.MarketProductGroup">
            <summary>Represents a product group defined by an exchange</summary>
            <remarks>Some markets have specifically defined product groups. ICE for example, has product groups such as OTC Gas, OTC Power, and US Futures. Instead of allowing a
            user to subscribe to all products in a market, you can allow or block each available product group, per user. If a product group is blocked, a user logging
            into a TT application will not have access to any of the products in that group.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarketProductGroup.ProductGroupID">
            <summary>Gets the ID for the product group</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarketProductGroup.Market">
            <summary>Gets the market that defines the product group</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.MarketProductGroup.Market"/> object identifying the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarketProductGroup.ProductGroupName">
            <summary>Gets the name of the product group</summary>
            <value>String containing the group name (such as "CA Futures")</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup">
            <summary>Represent a product group to exclude for a trader</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ExcludedMarketProductGroup.CompanyID">
            <summary>Gets the ID of the company</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ExcludedMarketProductGroup.ExcludedProductGroupKey">
            <summary>Gets the ID for the product group to exclude</summary>
            <value>
            	<see cref="T:System.String"/> containg the ProductGroupID of the <see cref="T:TTUSAPI.DataObjects.MarketProductGroup"/> to exclude</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ExcludedMarketProductGroupProfile">
            <summary>Instantiates an ExcludedMarketProductGroupProfile object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ExcludedMarketProductGroupProfile.#ctor(TTUSAPI.DataObjects.ExcludedMarketProductGroup)">
            <summary>Instantiates an instance of the ExcludedMarketProductGroupProfile class to update a ExcludedMarketProductGroup%</summary>
            <param name="excludedProductGroup">
            	<see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/> object to update</param>
            <remarks>Use this constructor to update an existing <see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/>.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.ExcludedMarketProductGroupProfile.#ctor(TTUSAPI.DataObjects.MarketProductGroup,System.Int32)">
            <summary>Instantiates an instance of the ExcludedMarketProductGroupProfile class for a specified MarketProductGroup</summary>
            <param name="excludedProductGroup">
            	<see cref="T:TTUSAPI.DataObjects.MarketProductGroup"/> to exclude</param>
            <param name="companyID">Integer representing the unique company ID</param>
            <remarks>Use this constructor to create a new <see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/>.</remarks>
        </member>
        <member name="T:TTUSAPI.DataObjects.Currency">
            <summary>Represents the currency used for credit calculations</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Currency.Name">
            <summary>Gets the name of the currency</summary>
            <remarks>The list of supported currencies is maintained by Guardian.</remarks>
            <value>
            	<see cref="T:System.String"/> containing the three-character currency code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Currency.IsPrimaryCurrency">
            <summary>Gets whether this currency is the user's primary currency</summary>
            <value>
            	<strong>true</strong> for primary; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CurrencyProfile">
            <summary>Represents a new trading currency</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CurrencyProfile.#ctor">
            <summary>Instantiates an instance of the CurrencyProfile class</summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.CurrencyProfile"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.CurrencyProfile.#ctor(System.String)">
            <summary>Instantiates an instance of the CurrencyProfile class based on a Currency object with the specified name</summary>
            <param name="currencyName">
            	<see cref="T:System.String"/> containing the name of the currency</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.CurrencyProfile"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.CurrencyProfile.#ctor(TTUSAPI.DataObjects.Currency)">
            <summary>Instantiates an instance of the CurrencyProfile class based on an existing Currency object</summary>
            <param name="currency">
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object reprenting the currency to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.CurrencyProfile"/> instance</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyProfile.Name">
            <summary>Gets the name of the currency</summary>
            <remarks>By default, the property combines the values of its currencies: <see cref="P:BaseCurrency.Name"/> and <see cref="P:TermCurrency.Name"/> properties. For example, if this object
            represents the exchange rate between US dollars and Euros, the <see cref="P:TTUSAPI.DataObjects.CurrencyExchangeRate.Name"/> property returns <strong>USD_EUR</strong>.</remarks>
            <value>
            	<see cref="T:System.String"/> containing the name for the rate</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyProfile.IsPrimaryCurrency">
            <summary>Gets or sets whether this currency is the user's primary currency</summary>
            <value>
            	<strong>true</strong> for primary; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CurrencyExchangeRate">
            <summary>Represents the rate of exchange between two currencies</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRate.Name">
            <summary>Gets the name of the exchange rate</summary>
            <value>String containing the name</value>
            <remarks>The name takes the form, <i>BaseCurrency_TermCurrency</i>.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRate.ExchangeRate">
            <summary>Gets the exchange rate between the base and term currencies</summary>
            <value>
            	Double value representing the exchange rate</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRate.BaseCurrency">
            <summary>Gets the "from" currency for the calculation</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object representing the base currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRate.TermCurrency">
            <summary>Gets the "to" currency for the calculation</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object representing the term currency</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CurrencyExchangeRateProfile">
            <summary>Provides properties and methods for creating or modifying a currency exchange rate</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CurrencyExchangeRateProfile.#ctor">
            <summary>Instantiates a new instance of the CurrencyExchangeRateProfile class</summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRateProfile"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.CurrencyExchangeRateProfile.#ctor(TTUSAPI.DataObjects.CurrencyExchangeRate)">
            <summary>Instantiates a CurrencyExchangeRateProfile class based on an existing CurrencyExchangeRate object</summary>
            <param name="currencyExchangeRate">
            	<see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate"/> object to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRateProfile"/> instance prepopulated with the data from the specified <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate"/> object</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRateProfile.BaseCurrency">
            <summary>Gets or sets the "from" currency for the calculation</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object representing the base currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRateProfile.TermCurrency">
            <summary>Gets the "to" currency for the calculation</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object representing the term currency</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CurrencyExchangeRateProfile.ExchangeRate">
            <summary>Gets or sets the exchange rate between the base and term currencies</summary>
            <value>
            	Double value representing the exchange rate</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGroup">
            <summary>Represents a group of users that share characteristics</summary>
            <remarks>A user group allows you to create group of users that similar characteristics. For example, you might create user groups based on locations, such as Chicago or
            London, that can be managed by different group administrators.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroup.UserGroupID">
            <summary>Gets the ID of this user group</summary>
            <remarks>The API generates this ID when you construct a <see cref="T:TTUSAPI.DataObjects.UserGroupProfile"/> object.</remarks>
            <value>
            	<see cref="T:System.Int32"/> value associated with the user group</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroup.Name">
            <summary>Gets the name of this user group</summary>
            <value>
            	<see cref="T:System.String"/> containing the group name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroup.CompanyID">
            <summary>Gets the ID of the company that owns the user group</summary>
            <value>
            	<see cref="T:System.Int32"/> value associated with the company</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserGroupProfile">
            <summary>Provides properties for creating a <see cref="T:TTUSAPI.DataObjects.UserGroupProfile">UserGroupProfile</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGroupProfile.#ctor">
            <summary>Creates a new UserGroupProfile instance</summary>
            <remarks>Use this constructor to create a new <see cref="T:TTUSAPI.DataObjects.UserGroup"/>.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserGroupProfile.#ctor(TTUSAPI.DataObjects.UserGroup)">
            <summary>Creates a new UserGroupProfile instance based on an existing UserGroup</summary>
            <param name="userGroup">
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object representing the group to modify</param>
            <remarks>Use this constructor to update an existing <see cref="T:TTUSAPI.DataObjects.UserGroup"/>.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroupProfile.Name">
            <summary>Gets or sets the name of this user group</summary>
            <value>
            	<see cref="T:System.String"/> containing the group name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserGroupProfile.CompanyID">
            <summary>Gets or sets the ID of the company that owns the user group</summary>
            <value>
            	<see cref="T:System.Int32"/> value associated with the company</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CompanyInfo">
            <summary>Represent a buy-side or sell-side company in the TT NET environment</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.CompanyID">
            <summary>Gets the internal ID for the company</summary>
            <value>Unique ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.Name">
            <summary>Gets the company name</summary>
            <value>String containing the name of the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.IsBroker">
            <summary>Gets whether this company is a brokerage firm</summary>
            <value>
            	<strong>true</strong> for a brokerage firm; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.Abbreviation">
            <summary>Gets the company's abbreviation, if defined</summary>
            <remarks>If the company has no abbreviation, this property returns an empty string.</remarks>
            <value>String containing the abbreviation for the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.Logo">
            <summary>Gets the company logo</summary>
            <value>Image object containg the logo graphic</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfo.PermissionedCompanyIDs">
             <summary>Gets the companies that have a relationship with this company</summary>
            
             <value>HashSet of IDs for the related CompanyInfo objects</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CompanyInfoProfile">
            <summary>Represents a company within the TT NET environment</summary>
            <remarks><b>Note:</b> Only administrators within TT NET can create companies.</remarks>
            <seealso cref="T:TTUSAPI.DataObjects.CompanyInfo"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.CompanyInfoProfile.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfoProfile.Name">
            <summary>Gets or sets the company name</summary>
            <value>String containing the name of the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfoProfile.IsBroker">
            <summary>Gets or sets whether this company is a brokerage firm</summary>
            <value>
            	<strong>true</strong> for a brokerage firm; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfoProfile.Abbreviation">
            <summary>Gets or sets the company's abbreviation</summary>
            <value>String containing the abbreviation for the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CompanyInfoProfile.Logo">
            <summary>Gets or sets the company logo</summary>
            <value>Image object containg the logo graphic</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ProductMargin">
            <summary>Represents the margin for a tradable product</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductMargin.CompanyID">
            <summary>Gets the company ID associated with the margin</summary>
            <remarks>For non-MultiBroker environments, this property always returns 0.</remarks>
            <value>Integer representing the unique ID for the company</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductMargin.Margin">
            <summary>Gets the margin required for trading this product</summary>
            <value>Double value representing the required collateral</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ProductMarginProfile">
            <summary>Class for creating or modifying an existing product margin</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ProductMarginProfile.#ctor(TTUSAPI.DataObjects.ProductMargin)">
            <summary>Instantiates an instance of the <see cref="T:TTUSAPI.DataObjects.ProductMarginProfile"/> class from an existing <see cref="T:TTUSAPI.DataObjects.ProductMargin"/> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ProductMarginProfile.#ctor">
            <summary>Instantiates an empty instance of the <see cref="T:TTUSAPI.DataObjects.ProductMarginProfile"/> class</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductMarginProfile.Margin">
            <summary>Gets or sets the margin required for trading this product</summary>
            <value>Double value representing the required collateral</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.Contract">
            <summary>Represents the margin for a tradable product</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Contract.ContractName">
            <summary>Gets the name of the contract</summary>
            <value>String containing the contract name (e.g. "ES" or "ZB")</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Contract.SeriesKey">
            <summary>Gets the unique TT ID for the contract</summary>
            <value>String containing the series key ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Contract.Expiry">
            <summary>Gets the contract's expiry</summary>
            <value>String containing the expiry (e.g. "Sep14")</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.Product">
            <summary>Represents margin information for a tradable product</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.MarketID">
            <summary>Gets the ID of the market on which the product trades</summary>
            <value>Unique ID for the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.ProductTypeID">
            <summary>Gets the ID for the associated product type</summary>
            <value>Integer identifying the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.Name">
            <summary>Gets the name of the product</summary>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.Currency">
            <summary>Gets the currency associated with the product margin</summary>
            <value>String containing the three-character ISO currency symbol</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.ProductMargins">
            <summary>Gets the collection of margins for products in a market</summary>
            <value>Dictionary of company ID and <see cref="T:TTUSAPI.DataObjects.ProductMargin"/> object pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.Product.Contracts">
            <summary>Gets the contracts available for this product</summary>
            <value>Dictionary of</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ProductProfile">
            <summary>Class for modifying an existing product</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ProductProfile.#ctor(TTUSAPI.DataObjects.Product)">
            <summary>Instantiates an instance of the <see cref="T:TTUSAPI.DataObjects.ProductProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.Product"/> object</summary>
            <param name="productInfo">
            	<see cref="T:TTUSAPI.DataObjects.Product"/> object identifying the product to update</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ProductProfile.UpdateProductMargin(TTUSAPI.DataObjects.ProductMarginProfile)">
            <summary>Updates the margin for the product</summary>
            <param name="productMargin">
            	<see cref="T:TTUSAPI.DataObjects.ProductMargin"/> object containing the collateral required for trading the product</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ProductProfile.DeleteProductMargin(TTUSAPI.DataObjects.ProductMarginProfile)">
            <summary>Removes a product margin from a product</summary>
            <param name="productMargin">
            	<see cref="T:TTUSAPI.DataObjects.ProductMargin"/> object representing the margin to delete</param>
        </member>
        <member name="T:TTUSAPI.DataObjects.ProductCatalog">
            <summary>Represents the collection of products for a product type</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductCatalog.ProductType">
            <summary>Gets the product type associated with this product catalog</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.ProductCatalog.ProductType">TTUSAPI.DataObjects.ProductType</see> object representing the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ProductCatalog.Products">
            <summary>Gets the collection of products in the catalog</summary>
            <value>Dictionary of product name and <see cref="T:TTUSAPI.DataObjects.Product">TTUSAPI.Product</see> object pairs</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.GatewayProductCatalog">
            <summary>Represents a market's available gateway products</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayProductCatalog.Gateway">
            <summary>Gets the gateway associated with this catalog</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.GatewayProductCatalog.ProductCatalogs">
            <value>Dictionary of product type ID and <see cref="T:TTUSAPI.DataObjects.ProductCatalog"/> pairs</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.MarketProductCatalog">
            <summary>Represents the available markets and their associated gateway products</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.MarketProductCatalog.UpdateProduct(TTUSAPI.DataObjects.MarketProductCatalog,TTUSAPI.UpdateType)">
            <summary>Synchronizes product updates on the server with a product catalog</summary>
            <param name="marketProductCatalog">
            	<see cref="T:TTUSAPI.DataObjects.MarketProductCatalog"/> object containing the updated products</param>
            <param name="updateType">
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarketProductCatalog.Market">
            <summary>Gets the market associated with this catalog</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.MarketProductCatalog.GatewayProductCatalogs">
            <summary>Gets the gateway product catalogs associated with a market</summary>
            <value>Dictionary of gateway ID and <see cref="T:TTUSAPI.DataObjects.GatewayProductCatalog"/> pairs</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ServerInfo">
            <summary>Represents the TT User Setup application</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.ProcessID">
            <summary>Gets the process ID on the server hosting the TT User Setup server</summary>
            <value>Integer representing the operating system process ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.IpAddress">
            <summary>Gets the IP address of the TT User Setup server</summary>
            <value>
            	<see cref="T:System.String"/> containing the IP address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.ServerMode">
            <summary>Gets the server type of this TT User Setup server</summary>
            <value>
            	<see cref="T:TTUSAPI.ServerMode"/> enum indicating whether the server is a master or slave server</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.Version">
            <summary>Gets the software version of the TT User Setup server</summary>
            <value>
            	<see cref="T:System.Version"/> object identifying the software version</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.DatabasePath">
            <summary>Gets the location of the TT User Setup database</summary>
            <value>
            	<see cref="T:System.String"/> containing the path of the TT User Setup <strong>.mdb</strong> file.</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.ApplicationPath">
            <summary>Gets the location of the TT User Setup server executable</summary>
            <value>
            	<see cref="T:System.String"/> containing the path of the TT User Setup server <strong>.exe</strong> file.</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.StartDateTime">
            <summary>Gets the time the TT User Setup server started</summary>
            <value>
            	<see cref="T:System.String"/> containing the date and time</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ServerInfo.MultiBrokerMode">
            <summary>Gets whether TT User Setup is running in a multi-broker environment</summary>
            <value>
            	<strong>true</strong> for multi-broker environments; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ConcurrentLogins">
            <summary>Represents the number of times a single user can be logged in concurrently</summary>
            <remarks>
            	<para>This class contains the settings that correspond to the <strong>Concurrent Logins</strong> section of the <strong>General</strong> tab in the TT
            User Setup <strong>System Setting</strong> window.</para>
            </remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.ConcurrentLogins.Active">
            <summary>Gets whether to enforce the maximum number of concurrent logins</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ConcurrentLogins.ReLoginDelay">
            <summary>Gets the number of seconds to wait between successful login attempts</summary>
            <value>Number of seconds (0-100, inclusive) between login attempts</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ConcurrentLoginsProfile">
            <summary>Class for creating or modifying concurrent login settings</summary>
            <remarks>
            	<para>This class contains the settings that correspond to the <strong>Concurrent Logins</strong> section of the <strong>General</strong> tab in the TT User Setup
            <strong>System Setting</strong> window.</para>
            	<para>Administrators can limit the number of times a single user can be logged in concurrently (based on the number of IP addresses from which a user has logged
            in). If a user attempts to log in with a username that has already reached the assigned maximum number of logins, the login fails until that user ID closes a
            client connection and releases a license. TT SIM logins do not affect concurrent license counts.</para>
            </remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.ConcurrentLoginsProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.ConcurrentLoginsProfile"/> class</summary>
            <remarks>Use this constructor to create a new <see cref="T:TTUSAPI.DataObjects.ConcurrentLogins"/> object.</remarks>
            <returns>New <see cref="T:TTUSAPI.DataObjects.ConcurrentLoginsProfile"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.ConcurrentLoginsProfile.#ctor(TTUSAPI.DataObjects.ConcurrentLogins)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.ConcurrentLoginsProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.ConcurrentLogins"/> object</summary>
            <param name="concurrentLogins">
            	<see cref="T:TTUSAPI.DataObjects.ConcurrentLogins"/> object to modify</param>
            <remarks>Use this constructor to update an existing <see cref="T:TTUSAPI.DataObjects.ConcurrentLogins"/> object.</remarks>
            <returns>New <see cref="T:TTUSAPI.DataObjects.ConcurrentLoginsProfile"/> instance</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.ConcurrentLoginsProfile.Active">
            <summary>Gets or sets whether to enforce the maximum number of concurrent logins</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ConcurrentLoginsProfile.ReLoginDelay">
            <summary>Gets or sets the number of seconds to wait between successful login attempts</summary>
            <value>Number of seconds (0-100, inclusive) between login attempts</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.InvalidLoginSettings">
            <summary>Represents the settings that determine what happens after a failed login attempt</summary>
            <remarks>This class contains the settings that correspond to the <strong>Failed Login Rules</strong> section of the <strong>General</strong> tab in the TT User Setup
            <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettings.Active">
            <summary>Gets whether to enforce the invalid login settings</summary>
            <value>
            	<strong>true</strong> to enforce the settings; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettings.MaxInvalidLoginAttempts">
            <summary>Gets the maximum number of invalid loging attempts before the account is locked</summary>
            <value>Integer representing the maximum number of attempts (1-100)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettings.InactivityPeriod">
            <summary>Gets the number of days a user can be inactive before the account is locked</summary>
            <value>Integer representing the number of days (1-100)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettings.AdditionalInvalidMessageEnabled">
            <summary>Gets whether to send a custom message after a failed login attempt</summary>
            <remarks>If enabled, the API appends the standard system message with the content of the <see cref="P:TTUSAPI.DataObjects.InvalidLoginSettings.AdditionalInvalidMessage">InvalidLoginSettings.AdditionalInvalidMessage</see>
            property.</remarks>
            <value>
            	<strong>true</strong> to send a custom message; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettings.AdditionalInvalidMessage">
            <summary>Gets the custom message to include for invalid login attemtps</summary>
            <remarks>If a user login fails, you can configure a custom message that appears after the standard message.</remarks>
            <value>
            	<see cref="T:System.String"/> containing the custom message</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.InvalidLoginSettingsProfile">
            <summary>Class for creating or modifying invalid login settings</summary>
            <remarks>This class contains the settings that correspond to the <strong>Failed Login Rules</strong> section of the <strong>General</strong> tab in the TT User Setup
            <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.#ctor">
            <summary>Creates a new instance of the InvalidLogsSettingsProfile class</summary>
            <returns>New <see cref="T:InvalidLogsSettingsProfile"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.#ctor(TTUSAPI.DataObjects.InvalidLoginSettings)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.InvalidLoginSettingsProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.InvalidLoginSettings"/> object</summary>
            <param name="invalidLoginSettings">
            	<see cref="T:TTUSAPI.DataObjects.InvalidLoginSettings"/> object to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.InvalidLoginSettingsProfile"/> instance</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.Active">
            <summary>Gets or sets whether to enforce the invalid login settings</summary>
            <value>
            	<strong>true</strong> to enforce the settings; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.MaxInvalidLoginAttempts">
            <summary>Gets or sets the maximum number of invalid loging attempts before the account is locked</summary>
            <value>Integer representing the maximum number of attempts (1-100)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.InactivityPeriod">
            <summary>Gets or sets the number of days a user can be inactive before the account is locked</summary>
            <value>Integer representing the number of days (1-100)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.AdditionalInvalidMessageEnabled">
            <summary>Gets or sets whether to send a custom message after a failed login attempt</summary>
            <value>
            	<strong>true</strong> to send a custom message; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.InvalidLoginSettingsProfile.AdditionalInvalidMessage">
            <summary>Gets or sets the custom message to include for invalid login attemtps</summary>
            <value>
            	<see cref="T:System.String"/> containing the custom message</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.LoginRules">
            <summary>Represents the settings for handling user logins</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.LoginRules.ConcurrentLogins">
            <summary>Gets the concurrent login settings associated with this LoginRules object</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.ConcurrentLogins">ConcurrentLogins</see> object specifying the settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.LoginRules.InvalidLoginSettings">
            <summary>Gets the invalid login settings associated with this LoginRules object</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.InvalidLoginSettings">InvalidLoginSettings</see> object specifying the settings</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.LoginRulesProfile">
            <summary>Class for creating or modifying login rules</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.LoginRulesProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.LoginRulesProfile"/> class</summary>
            <returns>New <see cref="T:TTUSAPI.DataObjects.LoginRulesProfile"/> object</returns>
        </member>
        <member name="M:TTUSAPI.DataObjects.LoginRulesProfile.#ctor(TTUSAPI.DataObjects.LoginRules)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.LoginRulesProfile"/> class based on an existing LoginRules object</summary>
            <param name="loginRules">
            	<see cref="T:TTUSAPI.DataObjects.LoginRules"/> object to modify</param>
            <returns>New <see cref="T:TTUSAPI.DataObjects.LoginRulesProfile"/> object</returns>
        </member>
        <member name="P:TTUSAPI.DataObjects.LoginRulesProfile.ConcurrentLogins">
            <summary>Gets or sets the concurrent login settings associated with this object</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.ConcurrentLogins">ConcurrentLogins</see> object specifying the settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.LoginRulesProfile.InvalidLoginSettings">
            <summary>Gets or sets the invalid login settings associated with this object</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.InvalidLoginSettings">InvalidLoginSettings</see> object specifying the settings</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordComplexity">
            <summary>Encapsulates the password complexity rules</summary>
            <remarks>This class contains the settings that correspond to the <strong>Password Complexity</strong> section of the <strong>Password Rules</strong> tab of the TT User
            Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.Active">
            <summary>Gets whether to enforce the password complexity rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.MinimumLength">
            <summary>Gets the minimum number of characters required in a password</summary>
            <value>Integer indicating the mimimum length</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.MaximumLength">
            <summary>Gets the maximum number of characters allowed in a password</summary>
            <value>Integer indicating the maximum length</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.RequireLowerCase">
            <summary>Gets whether a password must contain at least one lowercase character</summary>
            <value>
            	<strong>true</strong> to require lowercase characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.RequireUpperCase">
            <summary>Gets whether a password must contain at least one uppercase character</summary>
            <value>
            	<strong>true</strong> to require uppercase characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.RequireNumeric">
            <summary>Gets whether a password must contain at least one digit</summary>
            <value>
            	<strong>true</strong> to require numbers; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexity.RequireNonAlphaNumeric">
            <summary>Gets whether a password must contain at least one special character</summary>
            <value>
            	<strong>true</strong> to require special characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordComplexityProfile">
            <summary>Class for creating or modifying password complexity settings</summary>
            <remarks>This class contains the settings that correspond to the <strong>Password Complexity</strong> section of the <strong>Password Rules</strong> tab of the TT User
            Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordComplexityProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordComplexityProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordComplexityProfile.#ctor(TTUSAPI.DataObjects.PasswordComplexity)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordComplexityProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.PasswordComplexity"/> object</summary>
            <param name="passwordComplexity">
            	<see cref="T:TTUSAPI.DataObjects.PasswordComplexity"/> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.Active">
            <summary>Gets whether to enforce the password complexity rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.MinimumLength">
            <summary>Gets the minimum number of characters required in a password</summary>
            <value>Integer indicating the mimimum length</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.MaximumLength">
            <summary>Gets or sets the maximum number of characters allowed in a password</summary>
            <value>Integer indicating the maximum length</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.RequireLowerCase">
            <summary>Gets whether a password must contain at least one lowercase character</summary>
            <value>
            	<strong>true</strong> to require lowercase characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.RequireUpperCase">
            <summary>Gets whether a password must contain at least one uppercase character</summary>
            <value>
            	<strong>true</strong> to require uppercase characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.RequireNumeric">
            <summary>Gets whether a password must contain at least one digit</summary>
            <value>
            	<strong>true</strong> to require numbers; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordComplexityProfile.RequireNonAlphaNumeric">
            <summary>Gets whether a password must contain at least one special character</summary>
            <value>
            	<strong>true</strong> to require special characters; <strong>false</strong>, otherwise</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordHistory">
            <remarks>This class contains the settings that correspond to the <strong>Password Reuse</strong> section of the <strong>Password Rules</strong> tab of the TT User
            Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordHistory.Active">
            <summary>Gets whether to enforce the password reuse rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordHistory.HistoryDepth">
            <summary>Gets the number of unique passwords</summary>
            <value>Integer representing the number of unique passwords required</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordHistoryProfile">
            <remarks>This class contains the settings that correspond to the <strong>Password Reuse</strong> section of the <strong>Password Rules</strong> tab of the TT User
            Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordHistoryProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordHistoryProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordHistoryProfile.#ctor(TTUSAPI.DataObjects.PasswordHistory)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordHistoryProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.PasswordHistory"/> object</summary>
            <param name="passwordHistory">
            	<see cref="T:TTUSAPI.DataObjects.PasswordHistory"/> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordHistoryProfile.Active">
            <summary>Gets or sets whether to enforce the password reuse rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordHistoryProfile.HistoryDepth">
            <summary>Gets or sets the number of unique passwords</summary>
            <value>Integer representing the number of unique passwords required</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordExpiration">
            <summary>Represents the rules for determining when a password expires</summary>
            <remarks>This class contains the settings that correspond to the <strong>Password Expiration</strong> section of the <strong>Password Rules</strong> tab of the TT
            User Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpiration.RequireInitialChange">
            <summary>Gets whether to require a user to change the password after an administrator updates the password</summary>
            <value>
            	<strong>true</strong> to require changing the password; <strong>false</strong>, otherwsie</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpiration.Active">
            <summary>Gets whether to enforce the password expiration rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpiration.DaysUntilExpiration">
            <summary>Gets the number of days until a password expires</summary>
            <value>Integer specifying the number of days</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpiration.DaysPriorStartWarning">
            <summary>Gets the number of days before password expiration to start sending expiration warnings</summary>
            <value>Integer specifying the number of days</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordExpirationProfile">
            <summary>Class for creating or modifying password expiration rules</summary>
            <remarks>This class contains the settings that correspond to the <strong>Password Expiration</strong> section of the <strong>Password Rules</strong> tab of the TT
            User Setup <strong>System Setting</strong> window.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordExpirationProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordExpirationProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordExpirationProfile.#ctor(TTUSAPI.DataObjects.PasswordExpiration)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordExpirationProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.PasswordExpiration"/> object</summary>
            <param name="passwordExpiration">
            	<see cref="T:TTUSAPI.DataObjects.PasswordExpiration"/> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpirationProfile.RequireInitialChange">
            <summary>Gets or sets whether to require a user to change the password after an administrator updates the password</summary>
            <value>
            	<strong>true</strong> to require changing the password; <strong>false</strong>, otherwsie</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpirationProfile.Active">
            <summary>Gets or sets whether to enforce the password expiration rules</summary>
            <value>
            	<strong>true</strong> to enforce; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpirationProfile.DaysUntilExpiration">
            <summary>Gets or sets the number of days until a password expires</summary>
            <value>Integer specifying the number of days (0-5)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordExpirationProfile.DaysPriorStartWarning">
            <summary>Gets or sets the number of days before password expiration to start sending expiration warnings</summary>
            <value>Integer specifying the number of days (1-365)</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordRules">
            <summary>Represents the collection of settings regarding user passwords</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRules.PasswordComplexity">
            <summary>Gets the password complexity settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRules.PasswordComplexity"/> object containing the complexity settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRules.PasswordHistory">
            <summary>Gets the password reuse settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRules.PasswordHistory"/> object containing the reuse settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRules.PasswordExpiration">
            <summary>Gets the password expiration settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRules.PasswordExpiration"/> object containing the expiration settings</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.PasswordRulesProfile">
            <summary>Class for creating the collection of settings regarding user passwords</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordRulesProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordRulesProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.PasswordRulesProfile.#ctor(TTUSAPI.DataObjects.PasswordRules)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.PasswordRulesProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.PasswordRules"/> object</summary>
            <param name="passwordRules">
            	<see cref="T:TTUSAPI.DataObjects.PasswordRules"/> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordComplexity">
            <summary>Gets or sets the password complexity settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordComplexity"/> object containing the complexity settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordHistory">
            <summary>Gets or sets the password reuse settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordHistory"/> object containing the reuse settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordExpiration">
            <summary>Gets or sets the password expiration settings for this password rules</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.PasswordRulesProfile.PasswordExpiration"/> object containing the expiration settings</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.EmailSettings">
            <summary>Represents the settings related to sending administrative emails to users</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.Active">
            <summary>Gets whether to enable the email settings foradministrators who need to email user passwords</summary>
            <value>
            	<strong>true</strong> to enable; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.Server">
            <summary>Gets the SMTP server host or IP address</summary>
            <value>String containing the hostname or IP address of the SMTP server</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.ServerPort">
            <summary>Gets the port used for sending email</summary>
            <value>Port number (typically, 25)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.UseSecureSocketLayer">
            <summary>Gets whether to enable SSL</summary>
            <value>
            	<strong>true</strong> to enable; <strong>false</strong> to disable</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.IsAuthenticationRequired">
            <summary>Gets whether to enable SMTP server authentication</summary>
            <value>
            	<strong>true</strong> to require authentication; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.SenderAddress">
            <summary>Gets the address included in the From field of set emails</summary>
            <value>String containing the email address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.Subject">
            <summary>Gets the subject that appears in the outgoing message header</summary>
            <value>String containing the email subject</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.Message">
            <summary>Gets the text of the email message</summary>
            <value>String containing the message body</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettings.IncludeUsernameWithMessage">
            <summary>Gets whether to include the email recipients username in the email</summary>
            <value>
            	<strong>true</strong> to inclue; <strong>false</strong> to omit</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.EmailSettingsProfile">
            <summary>Call for creating the settings related to sending administrative emails to users</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.Active">
            <summary>Gets or sets whether to enable the email settings for administrators who need to email user passwords</summary>
            <value>
            	<strong>true</strong> to enable; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.Server">
            <summary>Gets or sets the SMTP server host or IP address</summary>
            <value>String containing the hostname or IP address of the SMTP server</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.ServerPort">
            <summary>Gets or sets the port used for sending email</summary>
            <value>Port number (typically, 25)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.UseSecureSocketLayer">
            <summary>Gets or sets whether to enable SSL</summary>
            <value>
            	<strong>true</strong> to enable; <strong>false</strong> to disable</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.IsAuthenticationRequired">
            <summary>Gets or sets whether to enable SMTP server authentication</summary>
            <remarks>Enabling this setting that is only necessary if your email server requires authentication. When this option is enabled you must provide an SMTP server account
            name and password. Use SSL Enables SSL. This is an added security measure required by most servers.</remarks>
            <value>
            	<strong>true</strong> to require authentication; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.SenderAddress">
            <summary>Gets or sets the address included in the From field of set emails</summary>
            <value>String containing the email address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.Subject">
            <summary>Gets or sets the subject that appears in the outgoing message header</summary>
            <value>String containing the email subject</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.Message">
            <summary>Gets or sets the text of the email message</summary>
            <value>String containing the message body</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.EmailSettingsProfile.IncludeUsernameWithMessage">
            <summary>Gets or sets whether to include the email recipients username in the email</summary>
            <value>
            	<strong>true</strong> to inclue; <strong>false</strong> to omit</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyInfo">
            <summary>Represents connnections to available FMDS servers used by X_STUDY</summary>
            <remarks>X_STUDY uses the FMDS server to obtain historical data to display in a chart for a given contract. The X_ STUDY/FMDS settings available in TT User Setup allow
            you to designate or change the FMDS server to which one or more user's X_STUDY(s) connects. In addition, you can set up a secondary FMDS server to which X_
            STUDY connects should the primary server be down.<br/></remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfo.Primary">
            <summary>Gets whether this object represents the primary FMDS server connection</summary>
            <value>
            	<strong>true</strong> for primary; <strong>false</strong> for secondary</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfo.IpAddress">
            <summary>Gets the IP address of the FMDS server</summary>
            <value>String containing the IP address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfo.Port">
            <summary>Gets the port number for the FMDS server connection</summary>
            <value>Number of the port (1-65535)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfo.Service">
            <summary>Gets the service number associated with the FMDS server</summary>
            <remarks>The <strong>Service</strong> property is an additional qualifier used to differentiate multiple FMDS machines within a network. This value must match the
            X_STUDY workstations’ <strong>Communications</strong> setting. The default setting is 250.</remarks>
            <value>Service number (1-99999999)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfo.TimeOut">
            <summary>Gets the number of seconds to wait for a response when connecting to the FMDS server</summary>
            <value>Number of seconds to wait (1-300)</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyInfoProfile">
            <summary>Class for creating an FMDS server connection</summary>
            <remarks>
            	<para>X_STUDY uses the FMDS server to obtain historical data to display in a chart for a given contract. The X_ STUDY/FMDS settings available in TT User Setup
            allow you to designate or change the FMDS server to which one or more user's X_STUDY(s) connects. In addition, you can set up a secondary FMDS server to which
            X_ STUDY connects should the primary server be down.<br/></para>
            	<para>X_STUDY and FMDS must be enabled and configured at a system level before it can be enabled and configured at a user level.</para>
            </remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyInfoProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.XStudyInfoProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyInfoProfile.#ctor(TTUSAPI.DataObjects.XStudyInfo)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.XStudyInfoProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.XStudyInfo"/> object</summary>
            <param name="xStudyInfo">
            	<see cref="T:TTUSAPI.DataObjects.XStudyInfo"/> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfoProfile.Primary">
            <summary>Gets or sets whether this object represents the primary FMDS server connection</summary>
            <value>
            	<strong>true</strong> for primary; <strong>false</strong> for secondary</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfoProfile.IpAddress">
            <summary>Gets or sets the IP address of the FMDS server</summary>
            <value>String containing the IP address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfoProfile.Port">
            <summary>Gets or sets the port number for the FMDS server connection</summary>
            <value>Number of the port (1-65535)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfoProfile.Service">
            <summary>Gets or sets the service number associated with the FMDS server</summary>
            <remarks>The <strong>Service</strong> property is an additional qualifier used to differentiate multiple FMDS machines within a network. This value must match the
            X_STUDY workstations’ <strong>Communications</strong> setting. The default setting is 25</remarks>
            <value>Service number (1-99999999)</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyInfoProfile.TimeOut">
            <summary>Gets the number of seconds to wait for a response when connecting to the FMDS server</summary>
            <value>Number of seconds to wait (1-300)</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyConnection">
            <summary>Represents the settings for supporting X_STUDY and FMDS connections</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyConnection.XStudyAllowed">
            <summary>Gets whether allow access to historical data through X_STUDY and FMDS</summary>
            <value>
            	<strong>true</strong> to allow system-level access; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyConnection.XStudyConnectionInfo">
            <summary>Gets the collection of connection settings for available FMDS servers</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyConnectionProfile">
            <summary>Class for creating the settings to support X_STUDY and FMDS connections</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyConnectionProfile.#ctor">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.XStudyConnectionProfile"/> class</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyConnectionProfile.#ctor(TTUSAPI.DataObjects.XStudyConnection)">
            <summary>Creates a new instance of the <see cref="T:TTUSAPI.DataObjects.XStudyConnectionProfile"/> class based on an existing <see cref="T:TTUSAPI.DataObjects.XStudyConnection"/> object</summary>
            <param name="xStudyConnection">
            	<see cref="T:TTUSAPI.DataObjects.XStudyConnection"/> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyConnectionProfile.AddXStudyItem(TTUSAPI.DataObjects.XStudyInfo)">
            <summary>Adds an FMDS server connection</summary>
            <param name="xStudyInfo">
            	<see cref="T:TTUSAPI.DataObjects.XStudyInfo"/> object containing the connection information</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyConnectionProfile.XStudyAllowed">
            <summary>Gets or sets whether allow access to historical data through X_STUDY and FMDS</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.SystemSettings">
            <summary>Represents the collection of server properties</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.SystemSettings.LoginRules">
            <summary>Gets the settings for responding to user login attempts</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.SystemSettings.LoginRules"/> object containing the settings for concurrent and invalid login attempts</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.SystemSettings.PasswordRules">
            <summary>Gets the settings for password-related restrictions</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.SystemSettings.PasswordRules"/> object containing the complexity, expirtion, and reuse rules</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.SystemSettings.EmailSettings">
            <summary>Gets the administrative email settings</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.SystemSettings.XStudyConnectionSettings">
            <summary>Gets the settings for accessing historical data through X_STUDY and FMDS</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.XStudyConnection"/> object representing the server connections</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ContactInfo">
            <summary>Represents the contact information for the user</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.CountryID">
            <summary>Gets the ID of the country associated with the contact</summary>
            <value>Integer representing the country ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.Address">
            <summary>Gets the street address for the contact</summary>
            <value>String containing the address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.City">
            <summary>Gets the city for the contact</summary>
            <value>String containing the city name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.StateID">
            <summary>Gets the ID of the state or province of the contact address</summary>
            <value>Integer representing the state or province ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.PostalCode">
            <summary>Gets the postal code for the contact addresss</summary>
            <value>String containing the postal (or zip) code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.Email">
            <summary>Gets the email address for the contact</summary>
            <value>String containing the email address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.PhoneNumber">
            <summary>Gets the phone number for the contact</summary>
            <value>String containing the contact phone number</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfo.Organization">
            <summary>Gets the name of the organization associated with the contact</summary>
            <value>String containing the organization name</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ContactInfoProfile">
            <summary>Class for creating or modifying contact information for a user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ContactInfoProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ContactInfoProfile.#ctor(TTUSAPI.DataObjects.ContactInfo)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.ContactInfo">ContactInfo</see> object</summary>
            <param name="contactInfo"><see cref="T:TTUSAPI.DataObjects.ContactInfo">ContactInfo</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.CountryID">
            <summary>Gets or sets the ID of the country associated with the contact</summary>
            <value>Integer representing the country ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.Address">
            <summary>Gets or sets the street address for the contact</summary>
            <value>String containing the address</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.City">
            <summary>Gets the city for the contact</summary>
            <value>String containing the city name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.StateID">
            <summary>Gets or sets the ID of the state or province of the contact address</summary>
            <remarks>Required countries that use states or provinces, such as the United States and Canada.</remarks>
            <value>Integer representing the state or province ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.PostalCode">
            <summary>Gets or sets the postal code for the contact addresss</summary>
            <value>String containing the postal (or zip) code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.Email">
            <summary>Gets or sets the email address for the contact</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.PhoneNumber">
            <summary>Gets or sets the phone number for the contact</summary>
            <value>String containing the contact phone number</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ContactInfoProfile.Organization">
            <summary>Gets or sets the name of the organization associated with the contact</summary>
            <value>String containing the organization's anme</value>
            <remarks>You must supply a value if the ICE Product Groups report should list the product permissions per customer. Otherwise, the value is optional.</remarks>
        </member>
        <member name="T:TTUSAPI.DataObjects.CustomDataFields">
            <summary>Stores optional user-defined information</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField1">
            <summary>Gets the user-defined data for Field 1</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField2">
            <summary>Gets the user-defined data for Field 2</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField3">
            <summary>Gets the user-defined data for Field 3</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField4">
            <summary>Gets the user-defined data for Field 4</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField5">
            <summary>Gets the user-defined data for Field 5</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFields.CustomField6">
            <summary>Gets the user-defined data for Field 6</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.CustomDataFieldsProfile">
            <summary>Class for creating or modifying custom data fields</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CustomDataFieldsProfile.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CustomDataFieldsProfile.#ctor(TTUSAPI.DataObjects.CustomDataFields)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.CustomDataFields">CustomDataFields</see> object</summary>
            <param name="customDataFields"><see cref="T:TTUSAPI.DataObjects.CustomDataFields">CustomDataFields</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField1">
            <summary>Gets or sets the user-defined data for Field 1</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField2">
            <summary>Gets or sets the user-defined data for Field 2</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField3">
            <summary>Gets or sets the user-defined data for Field 3</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField4">
            <summary>Gets or sets the user-defined data for Field 4</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField5">
            <summary>Gets or sets the user-defined data for Field 5</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomDataFieldsProfile.CustomField6">
            <summary>Gets or sets the user-defined data for Field 6</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.OnBehalfOfCredentialProfile.#ctor(TTUSAPI.DataObjects.GatewayLogin,TTUSAPI.DataObjects.User,System.Int32)">
            <summary>Default constructor</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.CustomerDefaultEntry">
            <summary>Represents a pre-populated template to use when submitting orders</summary>
            <remarks>Customer defaults allow you you limit the amount of data the traders have to enter to place a trade, thereby making the trading process faster and easier
            for the traders. You can create multiple customer default templates for each trader, and you can prevent traders from changing their own customer defaults.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.Active">
            <summary>Gets whether this customer default is the active one</summary>
            <value>
            	<strong>true</strong> if active; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.IsAccountDefault">
            <summary>Gets whether this default entry represents an account default or customer default</summary>
            <value>
            	<strong>true</strong> for account default entry; <strong>false</strong>, for customer default entry</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.AccountDefaultPriority">
            <summary>Gets the priority assigned to this account default</summary>
            <value>Integer indicating the current priority</value>
            <remarks>Valid only when the <see cref="P:TTUSAPI.DataObjects.CustomerDefaultEntry.IsAccountDefault"/> property is <strong>true</strong></remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.CustomerKey">
            <summary>Gets the lookup key for retrieving the customer or account defaults entry</summary>
            <remarks>The value concatenates a prefix for the default type ("AD_" for account default, "CD_" for customer default) and the CustomerID.</remarks>
            <value>String containing the key</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.Customer">
            <summary>Gets the name of the customer defaults profile</summary>
            <value>String containing the customer name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.CustomerID">
            <summary>Gets the unique ID for the customer</summary>
            <value>Integer representing the customer ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.CompanyID">
            <summary>Gets the ID of the company associated with this customer default</summary>
            <remarks>You can use the CompanyID property to return the corresponding <see cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo</see> object</remarks>
            <value>Integer representing the company ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.MarketID">
            <summary>Gets the ID of the market for this entry</summary>
            <value>Integer representing the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.GatewayID">
            <summary>Gets the ID of the market flavor associated with this defaults entry</summary>
            <value>Integer representing the market flavor on which the user has permission to trade</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.AccountID">
            <summary>Gets the ID associated with the account</summary>
            <value>Integer identifying the account</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.Product">
            <summary>Gets the product associated with this entry</summary>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.ProductTypeID">
            <summary>Gets the ID of the product type associated with this entry</summary>
            <value>Integer corresponding to the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.AccountTypeID">
            <summary>Gets the unique ID for the account type</summary>
            <value>Integer representing the account type assoicated with this default</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.GiveUp">
            <summary>Gets the clearing member code</summary>
            <remarks>Used for Give-up trade accounts only.</remarks>
            <value>String containing the code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.FFT2">
            <summary>Gets the value of the user-defined FFT2 field</summary>
            <remarks>The FFT2 field is typically used for annotation purposes by the trader or back office (sub-account). The back office manager usually dictates how to use these
            free-form text fields.</remarks>
            <value>String containing the value</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.FFT3">
            <summary>Gets the value of the user-defined FFT3 field</summary>
            <remarks>The FFT3 field is typically used for annotation purposes by the trader or back office (sub-account). The back office manager usually dictates how to use these
            free-form text fields.</remarks>
            <value>String containing the value</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.OnBehalfOfCredential">
            <summary>Gets the credentials of the person associated with an on-hehalf-of oirder</summary>
            <value><see cref="T:TTUSAPI.DataObjects.OnBehalfOfCredential">OnBehalfOfCredential object containing the user's credentials</see></value>
            <remarks>Applicable only for customer default entries.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.UserGatewayCredential">
            <summary>Gets the name of the default gateway login assigned to this customer default entry</summary>
            <value>String containing the name of the default gateway login</value>
            <remarks>Applicable only for customer default entries.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntry.OrderTemplateID">
            <summary>Gets the ID for the order template associated with this entry</summary>
            <value>Integer identifying the template</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.CustomerDefaultEntryProfile">
            <summary>Class for creating or modifying a <see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry">CustomerDefaultEntry</see> object</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.#ctor(TTUSAPI.DataObjects.CustomerDefaultEntry)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry">CustomerDefaultEntry</see> object</summary>
            <param name="customerEntry"><see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry">CustomerDefaultEntry</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.Active">
            <summary>Gets or sets whether this customer default is the active one</summary>
            <value>
            	<strong>true</strong> if active; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.IsAccountDefault">
            <summary>Gets or sets whether this default entry represents an account default or customer default</summary>
            <value>
            	<strong>true</strong> for account default entry; <strong>false</strong>, for customer default entry</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.AccountDefaultPriority">
            <summary>Gets or sets the priority assigned to this account default</summary>
            <value>Integer indicating the desired priority</value>
            <remarks>Valid only when the <see cref="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.IsAccountDefault"/> property is <strong>true</strong></remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.Customer">
            <summary>Gets or sets the name of the customer defaults profile</summary>
            <value>String containing the customer name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.MarketID">
            <summary>Gets or sets the ID of the market for this entry</summary>
            <value>Integer representing the market</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.GatewayID">
            <summary>Gets or sets the ID of the market flavor associated with this defaults entry</summary>
            <value>Integer representing the market flavor on which the user has permission to trade</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.AccountID">
            <summary>Gets or sets the ID associated with the account</summary>
            <value>Integer identifying the account</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.Product">
            <summary>Gets or sets the product associated with this entry</summary>
            <value>String containing the product name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.ProductTypeID">
            <summary>Gets or sets the ID of the product type associated with this entry</summary>
            <value>Integer corresponding to the product type</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.AccountTypeID">
            <summary>Gets or sets the unique ID for the account type</summary>
            <value>Integer representing the account type assoicated with this default</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.GiveUp">
            <summary>Gets or sets the clearing member code</summary>
            <remarks>Used for Give-up trade accounts only.</remarks>
            <value>String containing the code</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.FFT2">
            <summary>Gets or sets the value of the user-defined FFT2 field</summary>
            <remarks>The FFT2 field is typically used for annotation purposes by the trader or back office (sub-account). The back office manager usually dictates how to use these
            free-form text fields.</remarks>
            <value>String containing the value</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.FFT3">
            <summary>Gets or sets the value of the user-defined FFT3 field</summary>
            <remarks>The FFT3 field is typically used for annotation purposes by the trader or back office (sub-account). The back office manager usually dictates how to use these
            free-form text fields.</remarks>
            <value>String containing the value</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.OnBehalfOfCredential">
            <summary>Gets or sets the credentials of the person associated with an on-hehalf-of oirder</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.OnBehalfOfCredential">OnBehalfOfCredential object containing the user's credentials</see></value>
            <remarks>Applicable only for customer default entries.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.CustomerDefaultEntryProfile.UserGatewayCredential">
            <summary>Gets or sets the name of the default gateway login for this customer default entry</summary>
            <value>
            	String containing the name of the default gateway login</value>
            <remarks>Applicable only for customer default entries.</remarks>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserAccountPermission">
            <summary>Represents the routing permissions for a user's account</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserAccountPermission.AccountID">
            <summary>Specifies the ID uniquely identifying the account</summary>
            <value>Integer corresponding to the ID</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserAccountPermissionProfile.AccountID">UserAccountPermissionProfile.AccountID Property</seealso>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserAccountPermission.OrderRoutingMode">
            <value>
            	<see cref="T:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode"/> enum value indicating the user's routing permissions for this account</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserAccountPermission.OrderRoutingMode">UserAccountPermission.OrderRoutingMode Property</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode">UserAccountPermission.eOrderRoutingMode Enum</seealso>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode">
            <summary>Values that represent the a user's account-based order routing permissions</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode.None">
            <summary>Prevents a user from routing orders through this account</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode.NonAlgoOrderRouting">
            <summary>Allows a user to route orders through this account, except orders originating from ADL algorithms</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode.OrderRouting">
            <summary>Allows a user to route orders through this account, including ADL orders</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserAccountPermissionProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserAccountPermissionProfile.#ctor(TTUSAPI.DataObjects.UserAccountPermission)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserAccountPermission">UserAccountPermission</see> object</summary>
            <param name="userAccountPermission"><see cref="T:TTUSAPI.DataObjects.UserAccountPermission">UserAccountPermission</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserAccountPermissionProfile.AccountID">
             <summary>Specifies the ID uniquely identifying the account</summary>
            
             <value>Integer corresponding to the ID</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.UserAccountPermission.AccountID">UserAccountPermission.AccountID Property</seealso>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserAccountPermissionProfile.OrderRoutingMode">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserAccountPermission.OrderRoutingMode" filter=""/>
            <seealso cref="P:TTUSAPI.DataObjects.UserAccountPermission.OrderRoutingMode">UserAccountPermission.OrderRoutingMode Property</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.UserAccountPermission.eOrderRoutingMode">UserAccountPermission.eOrderRoutingMode Enum</seealso>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccessRules">
            <summary>Represents the settings related to login attempts</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.Password">
            <summary>Gets the password associated with the user credentials</summary>
            <value>String containing the user's password</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.ForceLogoff">
            <summary>Gets whether the force logoff functionality is enabled for the user</summary>
            <remarks>This property allows you to shut down a user's running X_TRADER application to reclaim the X_TRADER license. The user cannot log back in until the
            <strong>ForceLogoff</strong> property is <strong>false</strong>.</remarks>
            <value>
            	<strong>true</strong> to lock out a user; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.ForcePasswordChange">
            <summary>Gets whether to force a user to update the password at the next login</summary>
            <value>
            	<strong>true</strong> to force a change; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.LastFailedLoginDateTime">
            <summary>Gets the timestamp for the last failed login attempt</summary>
            <value>String containing the timestamp</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.LastPasswordChangeDateTime">
            <summary>Gets the timestamp of the last password change</summary>
            <value>String containing the timestamp</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.FailedLoginCount">
            <summary>Gets the number of times the user supplied invalid login credentials</summary>
            <value>Integer representing the number of failed attemtps</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.PasswordNeverExpires">
            <summary>Gets whether the user's password never expires</summary>
            <value>
            	<strong>true</strong> if the user can use the same password indefinitely; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.LimitConcurrentLogins">
            <summary>Gets whether to limit the number of simultaneous logins for the user</summary>
            <remarks>This property determines whether restrict the number of times a single user's login can be in use simultaneously. You must also enforce the Concurrent Logins
            rules at the system level for this field to have affect.</remarks>
            <value>
            	<strong>true</strong> to restrict the number of concurrent logins; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.NeverLockedByInactivity">
            <summary>Gets whether to lock a user after a period of inactivity</summary>
            <value>
            	<strong>true</strong> to lock; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRules.NumberConcurrentLoginIPs">
            <summary>Gets the maximum number of concurrent logins for an IP address</summary>
            <remarks>The API uses this value only when the <see cref="P:TTUSAPI.DataObjects.AccessRules.LimitConcurrentLogins">AccessRules.LimitConcurrentLogins</see> property is <strong>true</strong>.</remarks>
            <value>Maximum allowable concurrent logins</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AccessRulesProfile">
            <summary>Class for creating or modifying login access rules</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccessRulesProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AccessRulesProfile.#ctor(TTUSAPI.DataObjects.AccessRules)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.AccessRules">AccessRules</see> object</summary>
            <param name="accessRules"><see cref="T:TTUSAPI.DataObjects.AccessRules">AccessRules</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.Password">
            <summary>Gets or sets the password associated with the user credentials</summary>
            <value>String containing the user's password</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.ForceLogoff">
            <summary>Gets or sets whether the force logoff functionality is enabled for the user</summary>
            <remarks>This property allows you to shut down a user's running X_TRADER application to reclaim the X_TRADER license. The user cannot log back in until the
            <strong>ForceLogoff</strong> property is <strong>false</strong>.</remarks>
            <value>
            	<strong>true</strong> to lock out a user; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.ForcePasswordChange">
            <summary>Gets or sets whether to force a user to update the password at the next login</summary>
            <value>
            	<strong>true</strong> to force a change; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.PasswordNeverExpires">
            <summary>Gets whether the user's password never expires</summary>
            <value>
            	<strong>true</strong> if the user can use the same password indefinitely; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.LimitConcurrentLogins">
            <summary>Gets or sets whether to limit the number of simultaneous logins for the</summary>
            <remarks>This property determines whether restrict the number of times a single user's login can be in use simultaneously. You must also enforce the Concurrent Logins
            rules at the system level for this field to have affect.</remarks>
            <value>
            	<strong>true</strong> to restrict the number of concurrent logins; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.NeverLockedByInactivity">
            <summary>Gets or sets whether to lock a user after a period of inactivity</summary>
            <value>
            	<strong>true</strong> to lock; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AccessRulesProfile.NumberConcurrentLoginIPs">
            <summary>Gets or sets the maximum number of concurrent logins for an IP address</summary>
            <remarks>The API uses this value only when the <see cref="P:TTUSAPI.DataObjects.AccessRulesProfile.LimitConcurrentLogins">AccessRules.LimitConcurrentLogins</see> property is <strong>true</strong>.</remarks>
            <value>Maximum allowable concurrent logins</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyUserConnection">
            <summary>Represents the server information for X_STUDY and FMDS connections</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyUserConnection.OverrideDefault">
            <summary>Gets whether the user X_STUDY connection settings differ from the system default settings</summary>
            <value>true for custom settings; false for default settings</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.XStudyUserConnectionProfile">
            <summary>Class for creating or modifying the server information for X_STUDY and FMDS connections</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyUserConnectionProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyUserConnectionProfile.#ctor(TTUSAPI.DataObjects.XStudyUserConnection)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.XStudyUserConnection">XStudyUserConnection</see> object</summary>
            <param name="xStudyUserConnection">
            	<see cref="T:TTUSAPI.DataObjects.XStudyUserConnection">XStudyUserConnection</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.XStudyUserConnectionProfile.AddXStudyItem(TTUSAPI.DataObjects.XStudyInfo)">
            <summary>Adds custom settings for the user's connection to X_STUDY</summary>
            <param name="xStudyInfo">
            	<see cref="T:TTUSAPI.DataObjects.XStudyInfo"/> object containing the connection details</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyUserConnectionProfile.OverrideDefault">
            <summary>Gets or sets whether the user X_STUDY connection settings differ from the system default settings</summary>
            <value>
            	<strong>true</strong> to use custom settings; <strong>false</strong> to use system default settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.XStudyUserConnectionProfile.XStudyAllowed">
            <summary>Gets or sets whether the user can connect to X_STUDY</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AlgoServerRule">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.DataObjects.AlgoServerRuleProfile">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.DataObjects.ApplicationProperties">
            <summary>Represents settings that control the interaction between the user and TT applications</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.XtraderModeID">
            <summary>Gets the ID representing the type of X_TRADER associated with the user</summary>
            <value>Integer representing the ID for the mode</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.CrossOrdersAllowed">
            <summary>Gets whether the user can cross an existing order</summary>
            <remarks>If you enable this property, the API takes the action specified in the <see cref="P:TTUSAPI.DataObjects.ApplicationProperties.CancelRestingIfCrossed"/> property.</remarks>
            <value>
            	<strong>true</strong> to allow cross orders; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.CancelRestingIfCrossed">
            <summary>Gets the action to take for crossed orders</summary>
            <remarks>The API uses the property only when the <see cref="P:TTUSAPI.DataObjects.ApplicationProperties.CrossOrdersAllowed"/> property is <strong>true</strong>.</remarks>
            <value>true to cancel the working order and submit the new order; false to reject the new order</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.QuotingAllowed">
            <summary>Gets whether the user can use quoting functionality</summary>
            <remarks>If the property is enabled, the user can turn the X_TRADER Quoting functionality on or off. Otherwise, the user cannot enable Quoting in X_TRADER.</remarks>
            <value>
            	<strong>true</strong> to allowing quoting; <strong>false</strong>; otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.SniperOrdersAllowed">
            <summary>Gets whether the user can use sniper orders functionality</summary>
            <remarks>If the property is enabled, the user can turn the X_TRADER Quoting functionality on or off. Otherwise, the user cannot enable Sniper orders in X_TRADER.</remarks>
            <value>
            	<strong>true</strong> to allowing sniper orders; <strong>false</strong>; otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.WholesaleTradesAllowed">
            <summary>Gets whether a user can submit wholesale orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderCreationAllowed">
            <summary>Gets whether the user can create staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderManagementAllowed">
            <summary>Gets whether the user can claim and work staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderClaimOwnAllowed">
            <summary>Gets whether the user can claim and own staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.DmaOrderCreationAllowed">
            <summary>Gets whether the user can submit direct market access (DMA) orders</summary>
            <value>
            	<strong>true</strong> to allow DMA orders; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.OnBehalfOfAllowed">
            <summary>Gets whether the user can submit orders on behalf of another user</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.MachineGunOrdersAllowed">
            <summary>Gets whether the user can submit machine gun orders</summary>
            <value>
            	<strong>true</strong> to allow machine gun orders; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.AlgoDeploymentAllowed">
            <summary>Gets whether the user is allowed to deploy algorithms to Algo SE servers</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.AlgoSharingAllowed">
            <summary>Gets whether the user can share algorithms with other users</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.EnvironmentLoginAccess">
            <summary>Gets the trading environments (live or TT SIM) the user is allowed to use</summary>
            <remarks>This property indicates whether the user can use a TT SIM login, a live market login, both, or neither.</remarks>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.ApplicationProperties.EnvironmentLoginAccess"/> enum indicating the level of access</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.PositionPublishingAllowed">
            <summary>Gets whether the user can publish manual fills and start-of-day (SOD) records in X_RISK</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.ContractSessionPricesAllowed">
            <summary>Gets whether the user can publish contract session prices in X_RISK</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.InstantMessagingAllowed">
            <summary>Gets whether the user can send instant messages in X_RISK</summary>
            <value>true to allow instant messaging; false, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.IsPositionPublishingRestricted">
            <summary>Gets whether to limit an administrator to publishing positions to accounts in specific user groups</summary>
            <remarks>If you enable this property, an administrator can publish manual fills and start-of-day (SOD) records only for account in the user groups specified in the
            <see cref="P:TTUSAPI.DataObjects.ApplicationProperties.PositionPublishingUserGroupIDs"/> property.</remarks>
            <value>
            	<strong>true</strong> to limit; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.PositionPublishingUserGroupIDs">
            <summary>Gets the user group IDs for which the X_RISK administrator can puplish position updates</summary>
            <remarks>If the <see cref="P:TTUSAPI.DataObjects.ApplicationProperties.IsPositionPublishingRestricted"/> property is enabled, the API restricts risk administrators to publishing manual fills and SODs to accounts
            within the set of user group in this property.</remarks>
            <value>Set of IDs representing the user groups</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.FixAdapterUser">
            <summary>Gets or sets whether this user can access the environment through a FIX client</summary>
            <value>
            	<strong>true</strong> to allow FIX client access; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.FixAdapterEnableOrderLogging">
            <summary>Gets whether to include Order Server debug messages to the log files</summary>
            <value>
            	<strong>true</strong> to include; <strong>false</strong> to exclude</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.FixAdapterEnablePriceLogging">
            <summary>Gets whether to include Price Server debug messages to the log files</summary>
            <value>
            	<strong>true</strong> to include; <strong>false</strong> to exclude</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.FixServerNames">
            <summary>Gets the list of FIX Servers associated with this FIX client user</summary>
            <value>Set of names of FIX Servers</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationProperties.TtapiAllowed">
            <summary>Gets whether the user is allowed to run TT API applications</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.ApplicationPropertiesProfile">
            <summary>Class for creating or modifying application-related settings</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.#ctor(TTUSAPI.DataObjects.ApplicationProperties)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.ApplicationProperties">ApplicationProperties</see> object</summary>
            <param name="applicationProperties"><see cref="T:TTUSAPI.DataObjects.ApplicationProperties">ApplicationProperties</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.AddPublishingPermission(TTUSAPI.DataObjects.UserGroup)">
            <summary>Adds a user group to which this user can publish postion updates</summary>
            <param name="userGroup">
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object representing the collection of users</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.ClearPublishingPermission">
            <summary>Removes all user groups to which the user can publish position updates</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.DeletePublishingPermission(TTUSAPI.DataObjects.UserGroup)">
            <summary>Deletes a user group to which this user can publish postion updates</summary>
            <param name="userGroup">
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object identifying the group to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.AddFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Adds a FIX Server to the list of available FIX Servers for this FIX Client user</summary>
            <param name="fixServer">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile"/> representing the FIX Server to add</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.ClearFixServers">
            <summary>Removes all FIX Servers from this FIX client user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.ApplicationPropertiesProfile.DeleteFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Removes a FIX Server from the list of available FIX Servers for this FIX Client user</summary>
            <param name="fixServer">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile"/> representing the FIX Server to delete</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.XtraderModeID">
            <summary>Gets or sets the ID representing the type of X_TRADER associated with the user</summary>
            <value>Integer representing the ID for the mode</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.XtraderModeID"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.CrossOrdersAllowed">
            <summary>Gets or sets whether the user can cross an existing order</summary>
            <remarks>If you enable this property, the API takes the action specified in the <see cref="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.CancelRestingIfCrossed"/> property.</remarks>
            <value>
            	<strong>true</strong> to allow cross orders; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.CrossOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.CancelRestingIfCrossed">
            <summary>Gets or sets the action to take for crossed orders</summary>
            <remarks>The API uses the property only when the <see cref="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.CrossOrdersAllowed"/> property is <strong>true</strong>.</remarks>
            <value>true to cancel the working order and submit the new order; false to reject the new order</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.CancelRestingIfCrossed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.QuotingAllowed">
            <summary>Gets or sets whether the user can use quoting functionality</summary>
            <remarks>If the property is enabled, the user can turn the X_TRADER Quoting functionality on or off. Otherwise, the user cannot enable Quoting in X_TRADER.</remarks>
            <value>
            	<strong>true</strong> to allowing quoting; <strong>false</strong>; otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.QuotingAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.SniperOrdersAllowed">
            <summary>Gets or sets whether the user can use sniper orders functionality</summary>
            <remarks>If the property is enabled, the user can turn the X_TRADER Sniper Orders functionality on or off. Otherwise, the user cannot enable Sniper Orders in X_TRADER.</remarks>
            <value>
            	<strong>true</strong> to allowing sniper orders; <strong>false</strong>; otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.SniperOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.WholesaleTradesAllowed">
            <summary>Gets or sets whether a user can submit wholesale orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.WholesaleTradesAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.StagedOrderCreationAllowed">
            <summary>Gets or sets whether the user can create staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderCreationAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.StagedOrderManagementAllowed">
            <summary>Gets or sets whether the user can claim and work staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderManagementAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.StagedOrderClaimOwnAllowed">
            <summary>Gets or sets whether the user can claim and own staged orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.StagedOrderClaimOwnAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.DmaOrderCreationAllowed">
            <summary>Gets or sets whether the user can submit direct market access (DMA) orders</summary>
            <value>
            	<strong>true</strong> to allow DMA orders; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.DmaOrderCreationAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.OnBehalfOfAllowed">
            <summary>Gets or sets whether the user can submit orders on behalf of another user</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.OnBehalfOfAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.AlgoDeploymentAllowed">
            <summary>Gets or sets whether the user is allowed to deploy algorithms to Algo SE servers</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.ApplicationProperties.AlgoDeploymentAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.AlgoSharingAllowed">
            <summary>Gets or sets whether the user can share algorithms with other users</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.EnvironmentLoginAccess">
            <summary>Gets or sets the trading environments (live or TT SIM) the user is allowed to use</summary>
            <remarks>This property indicates whether the user can use a TT SIM login, a live market login, both, or neither.</remarks>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.EnvironmentLoginAccess"/> enum indicating the level of access</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.MachineGunOrdersAllowed">
            <summary>Gets or sets whether the user can submit machine gun orders</summary>
            <value>
            	<strong>true</strong> to allow machine gun orders; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.PositionPublishingAllowed">
            <summary>Gets or sets whether the user can publish manual fills and start-of-day (SOD) records in X_RISK</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.ContractSessionPricesAllowed">
            <summary>Gets or sets whether the user can publish contract session prices in X_RISK</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.InstantMessagingAllowed">
            <summary>Gets or sets whether the suer can send instant messages in X_RISK</summary>
            <value>true to allow instant messaging; false, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.IsPositionPublishingRestricted">
            <summary>Gets or sets whether to limit the X_RISK administrator to publishing positions to accounts in specific user groups</summary>
            <remarks>If you enable this property, X_RISK administrator can publish manual fills and start-of-day (SOD) records only for the account in the user groups specified in the
            <see cref="P:ApplicationPropertiesProfile.PositionPublishingUserGroupIDs"/> property.</remarks>
            <value>
            	<strong>true</strong> to limit; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.FixAdapterUser">
            <summary>Gets or sets whether this user can access the environment through a FIX client</summary>
            <value>
            	<strong>true</strong> to allow FIX client access; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.FixAdapterEnableOrderLogging">
            <summary>Gets or sets whether to include Order Server debug messages to the log files</summary>
            <value>
            	<strong>true</strong> to include; <strong>false</strong> to exclude</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.FixAdapterEnablePriceLogging">
            <summary>Gets or sets whether to include Price Server debug messages to the log files</summary>
            <value>
            	<strong>true</strong> to include; <strong>false</strong> to exclude</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.ApplicationPropertiesProfile.TtapiAllowed">
            <summary>Gets or sets whether the user is allowed to run TT API applications</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong> to deny</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AdminLoginCredentials">
            <summary>Represents the base credentials to use when automatically generating administrative gateway logins</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentials.Active">
            <summary>Gets whether to automatically genereate gateway administrative logins</summary>
            <value>
            	<strong>true</strong> to generate; <strong>false</strong>, otherwise. Null indicates the property has not been set.</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentials.Member">
            <summary>Gets the Member ID portion of the MGT credentials</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentials.Group">
            <summary>Gets the Group ID portion of the MGT credentials</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentials.TraderCredentials">
            <summary>Gets the Trader ID portion of the MGT</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials.eTraderCredentials"/> enum specifying the Trader ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.AdminLoginCredentials.eTraderCredentials">
            <summary>Types of administrative Trader IDs</summary>
        </member>
        <member name="T:TTUSAPI.DataObjects.AdminLoginCredentialsProfile">
            <summary>Class for creating or modifying the base credentials to use for automatically-generated administrative gateway logins</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.#ctor(TTUSAPI.DataObjects.AdminLoginCredentials)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials">AdminLoginCredentials</see> object</summary>
            <param name="adminLoginCredentials"><see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials">AdminLoginCredentials</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.Active">
            <summary>Gets or sets whether to automatically genereate gateway administrative logins</summary>
            <value>
            	<strong>true</strong> to generate; <strong>false</strong>, otherwise. Null indicates the property has not been set.</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.Member">
            <summary>Gets or sets the Member ID portion of the MGT credentials</summary>
            <value>String containing the Member ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.Group">
            <summary>Gets or sets the Group ID portion of the MGT credentials</summary>
            <value>String containing the Group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.AdminLoginCredentialsProfile.TraderCredentials">
            <summary>Gets the Trader ID portion of the MGT</summary>
            <remarks>When creating a new set of credentials, you must specify either <strong>VIEW</strong> or <strong>MGR</strong> for this property. If you specify None, you will
            receive an error when trying to save the changes.</remarks>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials.eTraderCredentials"/> enum specifying the Trader ID</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserRiskSettings">
            <summary>Represents settings for managing risk for users in a non-MultiBroker environment</summary>
            <remarks>You can configure risk settings on a per-user basis in addition to the risk settings configured for individual gateway logins. This allows you to set overall
            credit and currency settings that apply to all the user's trades using any or all of the gateway logins. The gateway login's risk settings still apply, but the
            trader will have an additional overall credit restriction.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.UsePnlRiskAlgo">
            <summary>Gets whether to use the P&amp;L risk algorithm when calculating risk for the user</summary>
            <value>true to use the algorithm; false, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UsePnlRiskAlgo"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.GTCOrdersAllowed">
            <summary>Gets whether the user can submit Good Till Cancel and Good Till Date orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.GTCOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.EnforceOrderOffsetLimit">
            <summary>Gets whether to enforce the specified order offset limt</summary>
            <remarks>This property determines whether to enforce the value specified in the <see cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderOffsetLimit"/> property. You can use these two properties to prevent "fat-finger"
            mistakes, such as accidentally submitting an order far away from the market.</remarks>
            <value>true to enforce the limit; false to ignore the limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.EnforceOrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.OrderOffsetLimit">
            <summary>Gets the number of ticks away from the market the user can trade</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.IsPositiveOffsetOnly">
            <summary>Gets whether to limit the order offset to away from the market</summary>
            <value>true to allow orders only away from the market; false to allow orders in either direction</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IsPositiveOffsetOnly"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.EnforceOrderRate">
            <summary>Gets whether to enforce the order submission rate</summary>
            <remarks>This property determines whether to enforce the rate specified in the <see cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderRate"/> property.</remarks>
            <value>true to enforce the order rate; false to use no limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.EnforceOrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.OrderRate">
            <summary>Gets the maximum number of orders the user can submit per second, per gateway</summary>
            <value>Number of orders per second</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.OrderPersistanceMode">
            <summary>Gets which types of Eurex orders are persisted</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderPersistanceMode"/> enum indicating which orders to persist</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderPersistanceMode"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.UndefinedAccountsAllowed">
            <summary>Gets whether orders submitted by the user will be rejected if they use an account not defined in TT User Setup</summary>
            <value>true to accept or false to reject orders with undefined accounts</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UndefinedAccountsAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.WholesaleUndefinedAccountsAllowed">
            <summary>Determines whether the user can submit wholesale orders using any account or only accounts defined in TT User Setup</summary>
            <value><b>true</b> to allow any account; <b>false</b> to allow only accounts defined in TT User Setup</value>
            <remarks>If the value of the property is <b>false</b>, TT gateways reject orders that use accounts not defined in TT User Setup.</remarks>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UndefinedAccountsAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.AccountChangesAllowed">
            <summary>Gets whether the user can update the account number on a fill</summary>
            <remarks>If enabled, a user can change the account for a fill unless otherwise restricted. However, if disabled, a user cannot change the account even if otherwise
            allowed.</remarks>
            <value>
            	<strong>true</strong> if the user can be permitted to change the account; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.AccountChangesAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.IgnorePnl">
            <summary>Determines whether to ignore P&amp;L limits for the user</summary>
            <value><strong>true</strong> to ignore the limit; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IgnorePnl"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettings.IgnoreMargin">
            <summary>Determines whether to ignore margin limits for the user</summary>
            <value><strong>true</strong> to ignore the limit; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IgnoreMargin"/>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserRiskSettingsProfile">
            <summary>Class for creating or modifying risk settings for the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserRiskSettingsProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserRiskSettingsProfile.#ctor(TTUSAPI.DataObjects.UserRiskSettings)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserRiskSettings">UserRiskSettings</see> object</summary>
            <param name="riskSettings"><see cref="T:TTUSAPI.DataObjects.UserRiskSettings">UserRiskSettings</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.TradingAllowed">
            <summary>Gets or sets whether the user is allowed to submit orders</summary>
            <value>true if trading allowed, false otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.TradingAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.Credit">
            <summary>Gets or sets the amount of money available at the start of a trading session</summary>
            <value>Integer representing an credit amount in the user's currency; 0 or null indicates unlimited credit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.Credit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.Currency">
            <summary>Gets or sets the currency for the Credit property</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Currency"/> object identifying the credit currency</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.Currency"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UseSimulationCredit">
            <summary>Gets or sets whether to use the simulation credit for TT SIM trading</summary>
            <value>
            	<strong>true</strong> to use the value in the <see cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.SimulationCredit"/> property; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.UseSimulationCredit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.SimulationCredit">
            <summary>Gets or sets the credit limit for the user when using TT SIM</summary>
            <value>Integer representing an credit amount in the user's currency; 0 or null indicates unlimited credit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.SimulationCredit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UsePnlRiskAlgo">
            <summary>Gets or sets whether to use the P&amp;L risk algorithm when calculating risk for the user</summary>
            <value>true to use the algorithm; false, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.UsePnlRiskAlgo"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.GTCOrdersAllowed">
            <summary>Gets or sets whether the user can submit Good Till Cancel and Good Till Date orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.GTCOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.EnforceOrderOffsetLimit">
            <summary>Gets or sets whether to enforce the specified order offset limt</summary>
            <remarks>This property determines whether to enforce the rate specified in the <see cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderOffsetLimit"/> property. You can use these two properties to prevent "fat-finger"
            mistakes, such as accidentally submitting an order far away from the market.</remarks>
            <value>true to enforce the limit; false to ignore the limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.EnforceOrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderOffsetLimit">
            <summary>Gets or sets the number of ticks away from the market the user can trade</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IsPositiveOffsetOnly">
            <summary>Gets or sets whether to limit the order offset to away from the market</summary>
            <value>true to allow orders only away from the market; false to allow orders in either direction</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.IsPositiveOffsetOnly"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.EnforceOrderRate">
            <summary>Gets or sets whether to enforce the order submission rate</summary>
            <remarks>This property determines whether to enforce the rate specified in the <see cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderRate"/> property.</remarks>
            <value>true to enforce the order rate; false to use no limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.EnforceOrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderRate">
            <summary>Gets or sets the maximum number of orders the user can submit per second, per gateway</summary>
            <value>Number of orders per second</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderPersistanceMode">
            <summary>Gets or sets which types of Eurex orders are persisted</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.OrderPersistanceMode"/> enum indicating which orders to persist</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.OrderPersistanceMode"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.UndefinedAccountsAllowed">
            <summary>Gets or sets whether orders submitted by the user will be rejected if they use an account not defined in TT User Setup</summary>
            <value>true to accept or false to reject orders with undefined accounts</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.WholesaleUndefinedAccountsAllowed">
            <summary>Determines whether the user can submit wholesale orders using any account or only accounts defined in TT User Setup</summary>
            <value><b>true</b> to allow any account; <b>false</b> to allow only accounts defined in TT User Setup</value>
            <remarks>If the value of the property is <b>false</b>, TT gateways reject orders that use accounts not defined in TT User Setup.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.AccountChangesAllowed">
            <summary>Gets or sets whether the user can update the account number on a fill</summary>
            <remarks>If enabled, a user can change the account for a fill unless otherwise restricted. However, if disabled, a user cannot change the account even if otherwise
            allowed.</remarks>
            <value>
            	<strong>true</strong> if the user can be permitted to change the account; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.AccountChangesAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IgnorePnl">
            <summary>Determines whether to ignore P&amp;L limits for the user.</summary>
            <value><strong>true</strong> to ignore the limit; <strong>false</strong>, otherwise.</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.IgnorePnl"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserRiskSettingsProfile.IgnoreMargin">
            <summary>Determines whether to ignore margin limits for the user.</summary>
            <value><strong>true</strong> to ignore the limit; <strong>false</strong>, otherwise.</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserRiskSettings.IgnoreMargin"/>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserCompanyInfo">
            <summary>Represents settings for managing risk for users in a MultiBroker environment</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.UserCompanyInfoID">
            <summary>Gets the unique identifier for this user company info</summary>
            <value>Integer corresponding to the unique ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.CompanyID">
            <summary>Specifies the ID of the buy-side firm associated with this user</summary>
            <value>Integer identifying the company</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CompanyID"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.BillingField1">
            <summary>Specifies the first field of a user's billing information for those trading in a MultiBroker environment</summary>
            <value>String containing the billing information</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField1"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.BillingField2">
            <summary>Specifies the second field of a user's billing information for those trading in a MultiBroker environment</summary>
            <value>String containing the billing information</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField2"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.BillingField3">
            <summary>Specifies the third field of a user's billing information for those trading in a MultiBroker environment</summary>
            <value>String containing the billing information</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField3"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.ProhibitLocalCustomerDefaultEditing">
            <summary>Specifies whether the user can modify the customer defaults</summary>
            <value>true to allow; false to prohibit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalCustomerDefaultEditing"/>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile."/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.ProhibitLocalAccountDefaultEditing">
            <summary>Specifies whether the user can modify the account defaults</summary>
            <value>true to allow; false to prohibit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalAccountDefaultEditing"/>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile."/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.HonorAccountPermissions">
             <summary>Specifies whether the can only use the accounts contained in the user's <see cref="P:TTUSAPI.DataObjects.User.UserAccountPermissions">User.UserAccountPermissions</see> collection</summary>
            
             <value><strong>true</strong> to limit the accounts available to the user; <strong>false</strong>, otherwise</value>
             <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.HonorAccountPermissions"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.CrossOrdersAllowed">
            <summary>Indicates whether a user can submit orders that cross the market</summary>
            <value><strong>true</strong> to allow cross orders; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CrossOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.CancelRestingIfCrossed">
            <summary>Indicates which action to take for crossed orders</summary>
            <remarks>This property is checked only when the <see cref="P:TTUSAPI.DataObjects.UserCompanyInfo.CrossOrdersAllowed">CrossOrdersAllowed</see> property is <strong>true</strong>.</remarks>
            <value>
            	<strong>true</strong> to cancel the existing order and submit a new one; <strong>false</strong> to reject the new order</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CancelRestingIfCrossed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.WholesaleTradesAllowed">
            <summary>Determines whether a user can submit wholesale trades</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleTradesAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.DmaOrderCreationAllowed">
            <summary>Determines whether a user can submit direct market access (DMA) orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.DmaOrderCreationAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.GTCOrdersAllowed">
            <summary>Determines whether the user can submit Good til Cancel and Good til Date orders</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.GTCOrdersAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.EnforceOrderOffsetLimit">
            <summary>Gets whether to enforce the specified order offset limit</summary>
            <remarks>This property determines whether to enforce the value specified in the <see cref="P:TTUSAPI.DataObjects.UserCompanyInfo.OrderOffsetLimit"/> property. You can use these two properties to prevent "fat-finger"
            mistakes, such as accidentally submitting an order far away from the market.</remarks>
            <value>true to enforce the limit; false to ignore the limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.OrderOffsetLimit">
            <summary>Gets the number of ticks away from the market the user can trade</summary>
            <value>Integer representing the number of ticks on either side of the market</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderOffsetLimit"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.IsPositiveOffsetOnly">
            <summary>Specifies whether to limit the order offset to away from the market</summary>
            <value>
            	<strong>true</strong> to allow orders only away from the market; <strong>false</strong> to allow orders in either direction</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.IsPositiveOffsetOnly"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.EnforceOrderRate">
            <summary>Gets whether to enforce the specified order rate limit</summary>
            <remarks>This property determines whether to enforce the value specified in the <see cref="P:TTUSAPI.DataObjects.UserCompanyInfo.OrderRate"/> property.</remarks>
            <value>true to enforce the limit; false to ignore the limit</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.OrderRate">
            <summary>Specifies the maximum number of orders per second a user can submit</summary>
            <remarks>This value is used only when the <see cref="P:TTUSAPI.DataObjects.UserCompanyInfo.EnforceOrderRate"/> property is <strong>true</strong>.</remarks>
            <value>Integer representing the number of orders</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderRate"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.OrderPersistanceMode">
            <summary>Determines whether Eurex orders are automatically set to persist (i.e., written to the exchange database and saved during an exchange outage) or user-controlled (i.e., based on the user’s credentials from the exchange).</summary>
            <value><see cref="T:TTUSAPI.OrderPersistanceMode">OrderPersistanceMode</see> object indicating how to handle the orders</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderPersistanceMode"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.TradingAllowed">
            <summary>Specifies whether a user is allowed to trade</summary>
            <value>
            	<strong>true</strong> to allow trading; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TradingAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.UndefinedAccountsAllowed">
            <summary>Determines whether the user can submit orders using any account or only accounts defined in TT User Setup</summary>
            <value><b>true</b> to allow any account; <b>false</b> to allow only accounts defined in TT User Setup</value>
            <remarks>If the value of the property is <b>false</b>, TT gateways reject orders that use accounts not defined in TT User Setup.</remarks>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.UndefinedAccountsAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.WholesaleUndefinedAccountsAllowed">
            <summary>Determines whether the user can submit wholesale orders using any account or only accounts defined in TT User Setup</summary>
            <value><b>true</b> to allow any account; <b>false</b> to allow only accounts defined in TT User Setup</value>
            <remarks>If the value of the property is <b>false</b>, TT gateways reject orders that use accounts not defined in TT User Setup.</remarks>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleUndefinedAccountsAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.AccountChangesAllowed">
            <summary>Indicates whether the user can update the account number on a fill</summary>
            <remarks>Enabling this property allows users with X_TRADER 7.17 or later to modify the account on a fill. The update is processed as a part of
            account-based risk on the gateways. Note that no risk check actually takes place if a user modifies the account; therefore changing the account could cause an
            account to go over its limits. However, any subsequent orders will be risk checked based on the modified fills.</remarks>
            <value>
            	<strong>true</strong> to allow the user to update the account number; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.AccountChangesAllowed"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfo.TtapiAllowed">
            <summary>Indicates whether the user can run TT API applications</summary>
            <value>
            	<strong>true</strong> to allow; <strong>false</strong>, otherwise</value>
            <seealso cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TtapiAllowed"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserCompanyInfoProfile.#ctor">
            <summary>Default constructor  </summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserCompanyInfoProfile.#ctor(TTUSAPI.DataObjects.UserCompanyInfo)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.UserCompanyInfo">UserCompanyInfo</see> object</summary>
            <param name="userCompanyInfo"><see cref="T:TTUSAPI.DataObjects.UserCompanyInfo">UserCompanyInfo</see> object to modify</param>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField1">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField1" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField2">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField2" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField3">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.BillingField3" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalCustomerDefaultEditing">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalCustomerDefaultEditing" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalAccountDefaultEditing">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.ProhibitLocalAccountDefaultEditing" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.HonorAccountPermissions">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.HonorAccountPermissions" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CrossOrdersAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CrossOrdersAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CancelRestingIfCrossed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.CancelRestingIfCrossed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleTradesAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleTradesAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.DmaOrderCreationAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.DmaOrderCreationAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderPersistanceMode">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderPersistanceMode" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.GTCOrdersAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.GTCOrdersAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderOffsetLimit">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderOffsetLimit" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderOffsetLimit">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderOffsetLimit" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.IsPositiveOffsetOnly">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.IsPositiveOffsetOnly" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderRate">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.EnforceOrderRate" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderRate">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.OrderRate" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.Organization">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.Organization" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.PositionPublishingAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.PositionPublishingAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TradingAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TradingAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.UndefinedAccountsAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.UndefinedAccountsAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleUndefinedAccountsAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.WholesaleUndefinedAccountsAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.AccountChangesAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.AccountChangesAllowed" filter=""/>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TtapiAllowed">
            <contentfrom cref="P:TTUSAPI.DataObjects.UserCompanyInfoProfile.TtapiAllowed" filter=""/>
        </member>
        <member name="T:TTUSAPI.DataObjects.User">
            <summary>Represents a single user in the TT system</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.Active">
            <summary>Gets whether the user login is enabled</summary>
            <remarks>If this property value is <strong>false</strong>, the user is considered "inactive". Inactive users cannot log in.</remarks>
            <value>
            	<strong>true</strong> if active; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserID">
            <summary>Gets the ID that uniquely identifies this user</summary>
            <value>Integer represening the user ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserName">
            <summary>Gets the user's Universal Login ID</summary>
            <value>String containing the login ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.DisplayName">
            <summary>Gets the identifer to display for this user</summary>
            <value>String containing the display name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserGroupID">
            <summary>Gets the ID that uniquely identifies the user group of which this user is a member</summary>
            <value>Integer representing the user group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.LockedOut">
            <summary>Gets whether the user is currently locked out</summary>
            <value>
            	<strong>true</strong> if locked out; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.LastLoggedIn">
            <summary>Gets the time for the most recent login</summary>
            <value>String containing the timestamp for the user login</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.ProhibitLocalCustomerDefaultEditing">
            <summary>Gets whether the user can modify Customer Defaults settings</summary>
            <value>
            	<strong>true</strong> to prohibit; <strong>false</strong> to allow</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.ProhibitLocalAccountDefaultEditing">
            <summary>Gets whether the user can modify Account Defaults settings</summary>
            <value>true to prohibit; false to allow</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.SystemAccessMode">
            <summary>Gets the level of access granted to the user</summary>
            <value>
            	<see cref="T:TTUSAPI.SystemAccessMode"/> enum identifying the access level</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.CustomerDefaults">
            <summary>Gets the set of Customer and Account Defaults associated with the user</summary>
            <value>Dictionary of name and <see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry"/> pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserAccountPermissions">
             <summary>Gets the collection of account permissions associated with the user</summary>
            
             <value>Dictionary of <see cref="T:TTUSAPI.DataObjects.UserAccountPermission">UserAccountPermission</see> objects containing the account permissions for the user</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.ExcludedProductGroups">
            <summary>Gets the product groups prohibited to the user</summary>
            <value>Dictionary of name and <see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/> object pairs identifying the excluded product groups</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserGatewayLogins">
            <summary>Gets the gateway logins this user can manage</summary>
            <value>Dictionary of name and <see cref="T:TTUSAPI.DataObjects.UserGatewayLogin"/> object pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.PermissionedUserGroupIDs">
            <summary>Gets the user groups managed by the user</summary>
            <value>Collection of user group IDs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserCompanyInfo">
            <summary>Gets the company information assoicated with the user</summary>
            <value>Dictionary of ID and <see cref="P:TTUSAPI.DataObjects.User.UserCompanyInfo"/> object pairs</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.UserRiskSettings">
            <summary>Gets the user-level risk settings for this user</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.User.UserRiskSettings"/> object containing the risk settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.ContactInfo">
            <summary>Gets the contact information associated with the user</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.User.ContactInfo"/> object containing the contact information</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.AccessRules">
            <summary>Gets the settings for handling the user's login attempts</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.User.AccessRules"/> object representing the settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.ApplicationProperties">
            <summary>Gets the settings controlling the user's interacation with TT applications</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.User.ApplicationProperties"/> object containing the properties</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.GeneratedAdminLoginCredentials">
            <summary>Gets the base credentials for an admin user</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials"/> object containing the admin credentials</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.User.CustomDataFields">
            <summary>Gets the collection of user-defined fields</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.User.CustomDataFields"/> object containing the fields</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.UserProfile">
            <summary>Class for creating or modifying a user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.#ctor(TTUSAPI.DataObjects.User)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.User">User</see> object</summary>
            <param name="user"><see cref="T:TTUSAPI.DataObjects.User">User</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddCustomerDefault(TTUSAPI.DataObjects.CustomerDefaultEntry)">
            <summary>Adds a Customer or Account Defaults entry to the user</summary>
            <param name="customerDefaultEntry">
            	<see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry"/> object representing the Customer or Account Default entry to add</param>
            <seealso cref="M:TTUSAPI.DataObjects.User.AddCustomerDefault(CustomerDefaultEntry)"></seealso>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddExcludedMarketProductGroup(TTUSAPI.DataObjects.ExcludedMarketProductGroup)">
            <summary>Prohibits the user from trading a specified product group</summary>
            <param name="excludedMarketProductGroup">
            	<see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/> object representing the product group to exclude</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Adds a set of gateway login credentials for this user</summary>
            <param name="gatewayLogin">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile"/> object</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.UpdateUserGatewayLogin(TTUSAPI.DataObjects.UserGatewayLoginProfile)">
            <summary>Updates the information in a single gateway login</summary>
            <param name="userGatewayLogin">
            	<see cref="T:TTUSAPI.DataObjects.UserGatewayLoginProfile"/> object containing the updated information</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.RestoreUserGatewayLogins(TTUSAPI.DataObjects.User)">
            <summary>Restores the gateway logins to the most-recently saved state</summary>
            <param name="user">
            	<see cref="T:TTUSAPI.DataObjects.User"/> object identifying the user</param>
            <remarks>The <see cref="T:TTUSAPI.DataObjects.User"/> object you pass must match the <see cref="T:TTUSAPI.DataObjects.User"/> object from which you created the profile.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddPermissionedUserGroup(TTUSAPI.DataObjects.UserGroup)">
            <summary>Adds a user group for this admin user to manage</summary>
            <param name="userGroup">
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object identifying the user group</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddUserCompanyInfo(TTUSAPI.DataObjects.UserCompanyInfoProfile)">
            <summary>Adds company information for the user</summary>
            <param name="userCompanyInfo">
            	<see cref="T:TTUSAPI.DataObjects.UserCompanyInfoProfile"/> object identifying the company details</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearGatewayLogins">
            <summary>Removes all gateway logins from the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearPermissionedUserGroups">
            <summary>Removes all managed user groups from the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearUserCompanyInfo">
            <summary>Removes all companies associated with the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearCustomerDefaults">
            <summary>Removes all Customer and Account Defaults associated with the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearExcludedProductGroups">
            <summary>Removes all excluded product groups from the user</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeleteCustomerDefault(TTUSAPI.DataObjects.CustomerDefaultEntry)">
            <summary>Removes a single Customer or Account Defaults entry from the user</summary>
            <param name="customerDefaultEntry">
            	<see cref="T:TTUSAPI.DataObjects.CustomerDefaultEntry"/> object identifying the entry to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeleteExcludedMarketProductGroup(TTUSAPI.DataObjects.ExcludedMarketProductGroup)">
            <summary>Removes a single excluded product group from the user</summary>
            <param name="marketProductGroup">
            	<see cref="T:TTUSAPI.DataObjects.ExcludedMarketProductGroup"/> object to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeleteGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Removes a single gateway login from the user</summary>
            <param name="gatewayLogin">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile"/> object to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeletePermissionedUserGroup(TTUSAPI.DataObjects.UserGroup)">
            <summary>Removes a single user group managed by the user</summary>
            <param name="userGroup">
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object identifying the group to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeleteUserCompanyInfo(TTUSAPI.DataObjects.UserCompanyInfoProfile)">
            <summary>Removes a company from the user</summary>
            <param name="userCompanyInfo">
            	<see cref="T:TTUSAPI.DataObjects.UserCompanyInfoProfile"/> object identifying the company to remove</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.AddAccountPermission(TTUSAPI.DataObjects.UserAccountPermissionProfile)">
            <summary>Adds an account permission to the user</summary>
            <param name="userAccountPermission">
            	<see cref="T:TTUSAPI.DataObjects.UserAccountPermission"/> object containing the permissions</param>
            <seealso cref="P:TTUSAPI.DataObjects.User.UserAccountPermissions">User.UserAccountPermisssions</seealso> Property
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.ClearAccountPermission">
            <summary>Removes all account permissions from the user</summary>
            <seealso cref="P:TTUSAPI.DataObjects.User.UserAccountPermissions">User.UserAccountPermisssions</seealso> Property
        </member>
        <member name="M:TTUSAPI.DataObjects.UserProfile.DeleteAccountPermission(TTUSAPI.DataObjects.UserAccountPermissionProfile)">
            <summary>Removes an account permission from the user</summary>
            <param name="userAccountPermission">
            	<see cref="T:TTUSAPI.DataObjects.UserAccountPermission"/> object identifying the permission to remove</param>
            <seealso cref="P:TTUSAPI.DataObjects.User.UserAccountPermissions">User.UserAccountPermisssions</seealso> Property
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.Active">
            <summary>Gets or sets whether the user login is enabled</summary>
            <remarks>If this property value is <strong>false</strong>, the user is considered "inactive". Inactive users cannot log in.</remarks>
            <value>
            	<strong>true</strong> if active; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.UserName">
            <summary>Gets or sets the user's Universal Login ID</summary>
            <value>String containing the login ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.DisplayName">
            <summary>Gets or sets the identifer to display for this user</summary>
            <value>String containing the display name</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.LockedOut">
            <summary>Gets or sets whether the user is currently locked out</summary>
            <value>
            	<strong>true</strong> if locked out; <strong>false</strong>, otherwise</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.UserGroupID">
            <summary>Gets or sets the ID that uniquely identifies the user group of which this user is a member</summary>
            <value>Integer representing the user group ID</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.ProhibitLocalCustomerDefaultEditing">
            <summary>Gets or sets whether the user can modify Customer Defaults settings</summary>
            <value>
            	<strong>true</strong> to prohibit; <strong>false</strong> to allow</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.ProhibitLocalAccountDefaultEditing">
            <summary>Gets or sets whether the user can modify Account Defaults settings</summary>
            <value>true to prohibit; false to allow</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.SystemAccessMode">
            <summary>Gets or sets the level of access granted to the user</summary>
            <value>
            	<see cref="T:TTUSAPI.SystemAccessMode"/> enum identifying the access level</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.ApplicationProperties">
            <summary>Gets or sets the settings controlling the user's interacation with TT applications</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.UserProfile.ApplicationProperties"/> object containing the properties</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.UserRiskSettings">
            <summary>Gets or sets the user-level risk settings for this user</summary>
            <value>
            	<see cref="P:TTUSAPI.DataObjects.UserProfile.UserRiskSettings"/> object containing the risk settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.ContactInfo">
            <summary>Gets or sets the contact information associated with the user</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.ContactInfoProfile"/> object containing the contact information</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.AccessRules">
            <summary>Gets or sets the settings for handling the user's login attempts</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AccessRulesProfile"/> object representing the settings</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.GeneratedAdminLoginCredentials">
            <summary>Gets or sets the base credentials for an admin user</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AdminLoginCredentials"/> object containing the admin credentials</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.UserProfile.CustomDataFields">
            <summary>Gets or sets the collection of user-defined fields</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.CustomDataFieldsProfile"/> object containing the fields</value>
        </member>
        <member name="T:TTUSAPI.DataObjects.FixServer">
            <summary>Represents a FIX Adapter server</summary>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.Active">
             <summary>Gets whether the FIX Adapter is an active user</summary>
            
             <value>true if active, false, otherwise</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.Active"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.ServerID">
             <summary>Gets the ID of this server</summary>
            
             <value>Integer identifying this server</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.ServerName">
             <summary>Gets the Universal Login ID of the FIX Adapter server</summary>
            
             <value>String containing the universal login</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.ServerName"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.DisplayName">
             <summary>Gets the name that allows you to recognize the FIX Adapter server</summary>
            
             <value>String containing the name</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.DisplayName"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.LockedOut">
             <summary>Gets whether the FIX Adapter locked out</summary>
            
             <value>true if locked out, false, otherwise</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.LockedOut"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.UserGroupID">
             <summary>Gets the ID of the user group identifying which administrators can manage the FIX Adapter server</summary>
            
             <value>Integer represening the ID of the user group</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.UserGroupID"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.LastLoggedIn">
             <summary>Gets the date and time of the last time the server logged in</summary>
            
             <value>String containing the login date and time</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.ServerMode">
             <summary>Gets whether this server represents an order-routing or droop-copy FIX Adapter</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.FixServer.eFixServerMode">eFixServerMode</see> enum indicating the purpose of this FIX server</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.ServerMode"/>
             <seealso cref="T:TTUSAPI.DataObjects.FixServer.eFixServerMode"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.UserNames">
             <summary>Gets a list of usernames for FIX client users permissioned to access this server</summary>
            
             <value>Hash set of user names</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.UserGatewayLogins">
             <summary>Gets the gateway logins associated with the FIX Adapter server</summary>
            
             <value>Dictionary of name and UserGatewayLogin object pairs identifying the gateway logins</value>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.ContactInfo">
             <summary>Gets the contact details for this FIX server</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.ContactInfo">ContactInfo</see> object containing the contact information</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.ContactInfo"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.AccessRules">
             <summary>Gets the login attempts rules for the FIX Adapter server</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.AccessRules">AccessRules</see> object containing the rules for the server</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.AccessRules"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServer.CustomDataFields">
             <summary>Gets the user-defined data for the server</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.CustomDataFields">CustomDataFields</see> object containing the custom data</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServerProfile.CustomDataFields"/>
        </member>
        <member name="T:TTUSAPI.DataObjects.FixServer.eFixServerMode">
            <summary>Values that represent the purpose of a FIX adapter server</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.FixServer.eFixServerMode.OrderRouting">
            <summary>The FIX Adapter routes orders on behalf of FIX clients.</summary>
        </member>
        <member name="F:TTUSAPI.DataObjects.FixServer.eFixServerMode.DropCopy">
            <summary>The FIX Adapter receives filles and order acknowledgments.</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.#ctor(TTUSAPI.DataObjects.FixServer)">
            <summary>Constructor based on an existing <see cref="T:TTUSAPI.DataObjects.FixServer">FixServer</see> object</summary>
            <param name="fixServer"><see cref="T:TTUSAPI.DataObjects.FixServer">FixServer</see> object to modify</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.AddUser(TTUSAPI.DataObjects.UserProfile)">
             <summary>Adds a user authorized to use this FIX Adapter</summary>
            
             <param name="user"><see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see> object identifying the user to add</param>
             <remarks>The specified <i>user</i> must already exist in TT User Setup.</remarks>
             <seealso cref="T:TTUSAPI.DataObjects.UserProfile"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.ClearUsers">
             <summary>Removes all user relationships from this FIX Adapter server</summary>
            
             <seealso cref="M:TTUSAPI.DataObjects.FixServer.ClearUsers()"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.DeleteUser(TTUSAPI.DataObjects.UserProfile)">
             <summary>Removes the relationship of a user with this FIX Adapter server</summary>
            
             <param name="user">
             <see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see>
             object identifying the user to remove
             </param>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.AddGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
             <summary>Adds a gateway login authorized to use this FIX Adapter</summary>
            
             <param name="gatewayLogin"><see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object identifying the gateway login to add</param>
             <remarks>The specified <i>gatewayLogin</i> must already exist in TT User Setup.
                      <para>Note: FIX Adapters 7.17 or later use dynamic connections, so you do not need to add gateway logins manually for FIX servers.</para>
                      </remarks>
             <seealso cref="T:TTUSAPI.DataObjects.UserProfile"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.UpdateUserGatewayLogin(TTUSAPI.DataObjects.UserGatewayLoginProfile)">
            <summary>Updates the information in a single gateway login</summary>
            <param name="userGatewayLogin">
            	<see cref="T:TTUSAPI.DataObjects.UserGatewayLoginProfile"/> object containing the updated information</param>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.RestoreUserGatewayLogins(TTUSAPI.DataObjects.FixServer)">
            <summary>Restores the gateway logins to the most-recently saved state</summary>
            <param name="fixServer">
            	<see cref="T:TTUSAPI.DataObjects.FixServer"/> object identifying the user</param>
            <remarks>The <see cref="T:TTUSAPI.DataObjects.FixServer"/> object you pass must match the <see cref="T:TTUSAPI.DataObjects.FixServer"/> object from which you created the profile.</remarks>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.ClearGatewayLogins">
             <summary>Removes all gateway logins from the FIX server</summary>
            
             <seealso cref="M:TTUSAPI.DataObjects.FixServer.ClearGatewayLogins()"/>
        </member>
        <member name="M:TTUSAPI.DataObjects.FixServerProfile.DeleteGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Removes a single gateway login from the FIX server</summary>
            <param name="gatewayLogin">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile"/> object to remove</param>
            <remarks>The <see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile"/> object you pass must match the <see cref="T:TTUSAPI.DataObjects.GatewayLogin"/> object from which you created the profile.</remarks>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.Active">
             <summary>Gets or sets a value indicating whether the FIX Adapter is an active user</summary>
            
             <value>true if active, false, otherwise</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.Active"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.ServerName">
             <summary>Gets or sets the Universal Login ID of the FIX Adapter server</summary>
            
             <value>String containing the universal login</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.ServerName"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.DisplayName">
             <summary>Gets or sets the name that allows you to recognize the FIX Adapter server</summary>
            
             <value>String containing the name</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.DisplayName">FixServer.DisplayName</seealso> Property
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.LockedOut">
             <summary>Gets or sets whether the FIX Adapter locked out</summary>
            
             <value>true if locked out; false, otherwise</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.LockedOut">FixServer.LockedOut</seealso> Property
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.UserGroupID">
             <summary>Gets or sets the ID of the user group identifying which administrators can manage the FIX Adapter server</summary>
            
             <value>Integer represening the ID of the user group</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.UserGroupID">FixServer.UserGroupID</seealso> Property
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.ServerMode">
             <summary>Gets or sets whether this server represents an order-routing or droop-copy FIX Adapter</summary>
            
             <value><see cref="T:DataObjects.FixServer.eFixServerMode">eFixServerMode</see> enum indicating the purpose of this FIX server</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.ServerMode"/> Property
             <seealso cref="T:TTUSAPI.DataObjects.FixServer.eFixServerMode"/> Property
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.ContactInfo">
             <summary>Gets or sets the contact details for this FIX server</summary>
            
             <value><see cref="T:DataObjects.ContactInfoProfile">ContactInfoProfile</see> object containing the contact information</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.ContactInfo"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.AccessRules">
             <summary>Gets or sets the login attempts rules for the FIX Adapter server</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.AccessRulesProfile">AccessRulesProfile</see> object containing the rules for the server</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.AccessRules"/>
        </member>
        <member name="P:TTUSAPI.DataObjects.FixServerProfile.CustomDataFields">
             <summary>Gets or sets the user-defined data for the server</summary>
            
             <value><see cref="T:DataObjects.CustomDataFieldsProfile">CustomDataFieldsProfile</see> object containing the custom data</value>
            
             <seealso cref="P:TTUSAPI.DataObjects.FixServer.CustomDataFields"/>
        </member>
        <member name="T:TTUSAPI.ResultType">
            <summary>Possible types results for requests sent to the server</summary>
        </member>
        <member name="T:TTUSAPI.ResultStatus">
            <summary>Possible statuses from server requests</summary>
        </member>
        <member name="P:TTUSAPI.ResultStatus.ErrorMessage">
            <summary>Gets the text of the error message</summary>
            <value>String containing the error message</value>
        </member>
        <member name="P:TTUSAPI.ResultStatus.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.ResultStatus.Result">
            <summary>Gets the result from sending the request</summary>
            <value><see cref="T:TTUSAPI.ResultType">ResultType</see> enum value indicating the status</value>
        </member>
        <member name="T:TTUSAPI.UpdateType">
            <summary>Possible types of updates for a server request</summary>
        </member>
        <member name="F:TTUSAPI.UpdateType.Download">
            <summary>Download data from the server.</summary>
        </member>
        <member name="F:TTUSAPI.UpdateType.Added">
            <summary>Add a new item to the server.</summary>
        </member>
        <member name="F:TTUSAPI.UpdateType.Changed">
            <summary>Modify an existing item on the server.</summary>
        </member>
        <member name="F:TTUSAPI.UpdateType.Deleted">
            <summary>Delete an item from the server.</summary>
        </member>
        <member name="F:TTUSAPI.UpdateType.Relationship">
            <summary>Change the relationship between items.</summary>
        </member>
        <member name="T:TTUSAPI.ConnectivityStatusType">
            <summary>Values that represent the status of the server connection</summary>
        </member>
        <member name="T:TTUSAPI.MarketType">
            <summary>Possible market types</summary>
        </member>
        <member name="T:TTUSAPI.EnvironmentLoginAccess">
            <summary>Possible restrictions for which environments a user can connect</summary>
        </member>
        <member name="F:TTUSAPI.EnvironmentLoginAccess.NoAccess">
            <summary>Cannot log in to any environment</summary>
        </member>
        <member name="F:TTUSAPI.EnvironmentLoginAccess.TTSIMOnly">
            <summary>Can log in only to TTSIM markets</summary>
        </member>
        <member name="F:TTUSAPI.EnvironmentLoginAccess.LiveOnly">
            <summary>Can log in only to live markets</summary>
        </member>
        <member name="F:TTUSAPI.EnvironmentLoginAccess.BothEnvironments">
            <summary>Can log in to either a live or TTSIM market</summary>
        </member>
        <member name="T:TTUSAPI.ConstraintOperand">
            <summary>Possible comparisons for version rule checks</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.EqualTo">
            <summary>Requires the application version to match the specified version</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.LessThan">
            <summary>Accepts only application versions less than the specified version</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.GreaterThan">
            <summary>Accepts only application versions greater than the specified version</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.LessThanOrEqualTo">
            <summary>Accepts only application versions less than or equal to the specified version</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.GreatThanOrEqualTo">
            <summary>Accepts only application versions greater than or equal to the specified version</summary>
        </member>
        <member name="F:TTUSAPI.ConstraintOperand.Between">
            <summary>Accepts only application versions greater than or equal to the specified version and less than or equal to the version upper field</summary>
        </member>
        <member name="T:TTUSAPI.VersionFailedAction">
            <summary>Possible actions to take when the version rule check fails</summary>
        </member>
        <member name="F:TTUSAPI.VersionFailedAction.WarnUser">
            <summary>Sends a warning message to the user</summary>
        </member>
        <member name="F:TTUSAPI.VersionFailedAction.RejectLogin">
            <summary>Rejects the login attempt</summary>
        </member>
        <member name="T:TTUSAPI.SystemAccessMode">
            <summary>Available levels of system access</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.SuperAdmin">
            <summary>Admin with complete access to TT User Setup functionality</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupSuperAdmin">
            <summary>Group admin that manages gateway logins and create direct traders</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupAdminNoDirectTraderMgmt">
            <summary>Group admin that manages gateway logins, but cannot create direct traders</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupAdminNoGatewayLoginMgmt">
            <summary>Group admin that doesn't manage any gateway logins (in multi-broker mode, hedge fund admin)</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.SuperAdminPasswordOnly">
            <summary>Password admin for all groups</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupAdminPasswordOnly">
            <summary>Password admin for only selected groups</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.SuperAdminGatewayLoginOnly">
            <summary>Super Administrator for gateway maintenance only</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupAdminGatewayLoginOnly">
            <summary>Group Administrator for gateway maintenance only</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.SuperAdminViewOnly">
            <summary>View-only admin for all groups</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.GroupAdminViewOnly">
            <summary>View-only admin for only selected groups</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BrokerAdmin">
            <summary>Admin that manages direct trader logins and gateway logins</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.CollectLogFilesOnly">
            <summary>Admin with permission to collect any log files in the trading environment</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BrokerAdminViewOnly">
            <summary>View-only admin for direct traders and gateway logins</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BrokerAdminPasswordOnly">
            <summary>Password admin for direct traders</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BuySideAdmin">
            <summary>Admin that manages a buy-side firm's direct trader logins</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BuySideAdminViewOnly">
            <summary>View-only admin for a buy-side firm's direct trader logins</summary>
        </member>
        <member name="F:TTUSAPI.SystemAccessMode.BuySideAdminPasswordOnly">
            <summary>Admin that manages passwords for a buy-side firm's direct trader logins</summary>
        </member>
        <member name="T:TTUSAPI.LoginResultCode">
            <summary>Possible results from login attempts</summary>
            <remarks>For more information about these results, refer to the <i>TT User Setup Help</i>.</remarks>
        </member>
        <member name="T:TTUSAPI.LoginStatusEventArgs">
             <summary>Represents the information returned in a %TTUSAPI.OnLoginStatusUpdate:OnLoginStatusUpdate% callback</summary>
            
             <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.LoginResultCode">
             <summary>Gets the result of the login attempt</summary>
            
             <value><see cref="T:TTUSApi.LoginResultCode">LoginResultCode</see> enum value indicating the result</value>
             <remarks>If the <see cref="P:TTUSApi.LoginStatusEventArgs.IsSuccess">IsSuccess</see> property returns <b>false</b>, you can check the value of this property to determine the reason for the failure.</remarks>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.SystemAccessMode">
             <summary>Gets the level of system access requested by the login attempt</summary>
            
             <value><see cref="P:TTUSAPI.LoginStatusEventArgs.SystemAccessMode">SystemAccessMode</see> enum value identifying the requested access level</value>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.UserGroupID">
            <summary>Gets the ID of the user group associated the the user login</summary>
            <value>Integer identifying the <see cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup</see>, or -1 if the login attempt failed</value>
            <seealso cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup Class</seealso>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.CompanyID">
            <summary>Gets the ID of the company associated the the user login</summary>
            <value>Integer identifying the <see cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo</see>, or -1 if the login attempt failed</value>
            <seealso cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo Class</seealso>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.Message">
            <summary>Gets the message describing the status of the attempt</summary>
            <value>String containing the message text</value>
        </member>
        <member name="P:TTUSAPI.LoginStatusEventArgs.IsSuccess">
            <summary>Gets whether the login attempt succeeded</summary>
            <value>true if successful; false, otherwise</value>
            <remarks>If the property returns <b>false</b>, you can check the value of the <see cref="P:LoginStatusEventArgs.LoginResultCode">LoginResultCode</see> property to determine the reason for the failure.</remarks>
        </member>
        <member name="T:TTUSAPI.InitializeCompleteEventArgs">
            <summary>Represents the information returned in an OnInitializeComplete callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnInitializeComplete">OnInitializeComplete Event</seealso>
        </member>
        <member name="P:TTUSAPI.InitializeCompleteEventArgs.UsersDownloadCount">
            <summary>Gets the number of users retrieved from the server</summary>
            <value>Number of users downloaded</value>
        </member>
        <member name="P:TTUSAPI.InitializeCompleteEventArgs.FixServersDownloadCount">
            <summary>Gets the number of FIX Servers retrieved from the server</summary>
            <value>Number of FIX Server users downloaded</value>
        </member>
        <member name="P:TTUSAPI.InitializeCompleteEventArgs.GatewayLoginsDownloadCount">
            <summary>Gets the number of gateway logins retrieved from the server</summary>
            <value>Number of gateway logins downloaded</value>
        </member>
        <member name="P:TTUSAPI.InitializeCompleteEventArgs.AccountsDownloadCount">
            <summary>Gets the number of accounts retrieved from the server</summary>
            <value>Number of accounts downloaded</value>
        </member>
        <member name="T:TTUSAPI.UserGroupUpdateEventArgs">
            <summary>Represents information returned in an OnUserGroupUpdate callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnUserGroupUpdate">OnUserGroupUpdate Event</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup Class</seealso>
        </member>
        <member name="P:TTUSAPI.UserGroupUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.UserGroupUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value><see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.UserGroupUpdateEventArgs.UserGroups">
            <summary>Gets the user groups updated included in this update</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup</see> object pairs representing the updated user groups</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.UserGroup.UserGroupID">UserGroupID</see> property of each <see cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.UserUpdateEventArgs">
            <summary>Represents information returned in an OnUserUpdate callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnUserUpdate">OnUserUpdate Event</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.User">User Class</seealso>
        </member>
        <member name="P:TTUSAPI.UserUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.UserUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.UserUpdateEventArgs.Users">
            <summary>Gets the users updated as part of this event</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.User">User</see> object pairs representing the updated users</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.User.UserID">UserID</see> property of each <see cref="T:TTUSAPI.DataObjects.User">User</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.FixServerUpdateEventArgs">
            <summary>Represents information returned in an OnFixServerUpdate callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnFixServerUpdate">OnFixServerUpdate Event</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.FixServer">FixServer Class</seealso>
        </member>
        <member name="P:TTUSAPI.FixServerUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.FixServerUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.FixServerUpdateEventArgs.FixServers">
            <summary>Gets the FIX Servers updated by the server</summary>
            <value>Dictionary of server ID and
            	<see cref="T:DataObjects.FixServer">FixServer</see> object pairs representing the updated FIX Servers</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.FixServer.ServerID">ServerID</see> property of each <see cref="T:TTUSAPI.DataObjects.FixServer">FixServer</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.GatewayLoginUpdateEventArgs">
            <summary>Represents information returned in an OnGatewayLoginUpdate callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnGatewayLoginUpdate">OnGatewayLoginUpdate Event</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin Class</seealso>
        </member>
        <member name="P:TTUSAPI.GatewayLoginUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.GatewayLoginUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.GatewayLoginUpdateEventArgs.GatewayLogins">
            <summary>Gets the gateway logins updated by the server</summary>
            <value>Dictionary of gateway ID and
            	<see cref="T:DataObjects.GatewayLogin">GatewayLogin</see> object pairs representing the updated gateway logins</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.GatewayLogin.GatewayLoginID">GatewayLoginID</see> property of each <see cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.AccountUpdateEventArgs">
            <summary>Represents the information returned in an TTUSAPI.OnAccountUpdate callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.AccountUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.AccountUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.AccountUpdateEventArgs.Accounts">
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see> objects</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.AccountInfo.AccountID">AccountID</see> property of each <see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.AccountGroupUpdateEventArgs">
            <summary>Represents the information returned in a <see cref="E:TTUSAPI.TTUSApi.OnAccountGroupUpdate">OnAccountGroupUpdate</see> callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.AccountGroupUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.AccountGroupUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.AccountGroupUpdateEventArgs.AccountGroups">
            <summary>Gets the account groups updated</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.AccountGroup"/> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.AccountGroup.AccountAccountGroupID">AccountGroupID</see> property of each <see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.ProductUpdateEventArgs">
            <summary>Represents the information returned in a <see cref="E:TTUSApi.OnProductUpdate"/> callback</summary>
            <seealso cref="E:TTUSApi.OnProductUpdate">OnProductUpdate Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog Class</seealso>
        </member>
        <member name="P:TTUSAPI.ProductUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.ProductUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.ProductUpdateEventArgs.MarketProductCatalogs">
            <summary>Gets the updated market catalogs</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.MarketProductCatalog.Market.MarketID">Market.MarketID</see> property of each <see cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.VersionRuleUpdateEventArgs">
            <summary>Represents the information returned in a <see cref="E:TTUSApi.OnVersionRuleUpdate"/> callback</summary>
            <seealso cref="E:TTUSApi.OnVersionRuleUpdate">OnVersionRuleUpdate Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule Class</seealso>
        </member>
        <member name="P:TTUSAPI.VersionRuleUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.VersionRuleUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.VersionRuleUpdateEventArgs.VersionRules">
            <summary>Gets the updated version rules</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.VersionRule.VersionRuleID">VersionRuleID</see> property of each <see cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.AuditTrailEventArgs">
            <summary>Represents the information returned in an OnAuditTrail callback</summary>
            <seealso cref="E:DataObjects.Reports.OnAuditTrail">OnAuditTrail Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AuditTrail">AuditTrail Class</seealso>
        </member>
        <member name="P:TTUSAPI.AuditTrailEventArgs.AuditTrails">
            <summary>Gets a list of audit trail files</summary>
            <value>Dictionary of file date and <see cref="E:TTUSAPI.Reports.AuditTrail">AuditTrail</see> object pairs</value>
        </member>
        <member name="T:TTUSAPI.AuditTrailDetailEventArgs">
            <summary>Represents the information returned in an OnAuditTrailDetail callback</summary>
            <seealso cref="E:DataObjects.DataObjects.Reports.OnAuditTrailDetail">OnAuditTrailDetail Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AuditTrailDetails">AuditTrailDetails Class</seealso>
        </member>
        <member name="P:TTUSAPI.AuditTrailDetailEventArgs.FileDate">
            <summary>Gets the date and time the audit trail was last modified</summary>
            <value>String containing the timestamp</value>
        </member>
        <member name="P:TTUSAPI.AuditTrailDetailEventArgs.AuditTrailDetails">
            <summary>Gets the list of entries in the audit trail</summary>
            <value>List of <see cref="T:TTUSAPI.DataObjects.Reports.AuditTrailDetails"/> objects for each of the entries in the audit trail</value>
        </member>
        <member name="T:TTUSAPI.UserReportsEventArgs">
            <summary>Represents the information returned in an OnUserReports callback</summary>
            <seealso cref="E:Reports.OnUserReports">Reports.OnUserReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.UserReports">UserReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.UserReportsEventArgs.UserReports">
            <summary>Gets the user reports returned in the event</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Reports.UserReports">UserReports</see> object containing the reports</value>
        </member>
        <member name="T:TTUSAPI.ServerReportsEventArgs">
            <summary>Represents the information returned in an OnServerReports callback</summary>
            <seealso cref="E:DataObjects.Reports.OnServerReports">OnServerReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.ServerReportsEventArgs.ServerReports">
             <summary>Gets the server reports</summary>
            
             <value>List of the system report names visible to the user</value>
        </member>
        <member name="T:TTUSAPI.XTVersionReportsEventArgs">
            <summary>Represents the information returned in an OnXTVersionReports callback</summary>
            <seealso cref="E:DataObjects.Reports.OnXTVersionReports">OnXTVersionReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.XTraderVersionReports">XTraderVersionReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.XTVersionReportsEventArgs.XTVersionReports">
            <summary>Gets the version reports for users' X_TRADER applications</summary>
            <value>HashSet of <see cref="T:DataObjects.Reports.XTraderVersionReports">XTVersionReports</see> objects</value>
        </member>
        <member name="P:TTUSAPI.XTVersionReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.TTProductUsageEventArgs">
            <summary>Represents the information returned in an OnTTProductUsage callback</summary>
            <seealso cref="E:DataObjects.Reports.OnTTProductUsageReports">OnTTProductUsageReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.TTProductUsageReports">TTProductUsageReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.TTProductUsageEventArgs.TTProductUsageReports">
            <summary>Gets the usage reports for the TT products</summary>
            <value>HashSet of <see cref="T:DataObjects.Reports.TTProductUsageReports">TTProductUsageReports</see> objects</value>
        </member>
        <member name="P:TTUSAPI.TTProductUsageEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.GatewayVersionReportsEventArgs">
            <summary>Represents the information returned in an OnGatewayVersionReports callback</summary>
            <seealso cref="E:DataObjects.Reports.OnGatewayVersionReports">OnGatewayVersionReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.GatewayVerionReports">GatewayVersionReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.GatewayVersionReportsEventArgs.GatewayVersionReports">
            <summary>Gets the version reports for visible TT gateways</summary>
            <value>HashSet of <see cref="T:DataObjects.Reports.GatewayVersionReports">GatewayVersionReports</see> objects</value>
        </member>
        <member name="P:TTUSAPI.GatewayVersionReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.UsersGatewayLoginReportEventArgs">
            <summary>Represents the information returned in an OnUsersGatewayLoginReports callback</summary>
            <seealso cref="E:DataObjects.Reports.OnUsersGatewayLoginReports">OnUsersGatewayLoginReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.UsersGatewayLoginReports">UsersGatewayLoginReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.UsersGatewayLoginReportEventArgs.UsersGatewayLoginReports">
            <summary>Gets the gateway logins for each user</summary>
            <value>HashSet of <see cref="T:DataObjects.Reports.UsersGatewayLoginReport">UsersGatewayLoginReport</see> objects</value>
        </member>
        <member name="P:TTUSAPI.UsersGatewayLoginReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.UsersGatewayLoginCountReportsEventArgs">
            <summary>Represents the information returned in an OnUsersGatewayLoginCountReports callback</summary>
            <seealso cref="E:DataObjects.Reports.OnUsersGatewayLoginCountReports">OnUsersGatewayLoginCountReports Event</seealso>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.UsersGatewayLoginCountReportsEventArgs.UsersGatewayLoginCountReports">
            <summary>Gets a collection of the number of gateway logins for each user</summary>
            <value>HashSet of <see cref="T:DataObjects.Reports.UsersGatewayLoginLoginReports">UsersGatewayLoginCountReports</see> objects</value>
        </member>
        <member name="P:TTUSAPI.UsersGatewayLoginCountReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.UsersRiskParamsColReportEventArgs">
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Reports.UsersRiskParamsColReport">UsersRiskParamsColReports Class</seealso>
        </member>
        <member name="P:TTUSAPI.UsersRiskParamsColReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.UsersRiskParamsExpReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.UsersAccountReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.UsersAccountProductLimitsReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.CMEProductGroupReportEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.ProductLimitCountReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.MismatchedCreditReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.MismatchedProductLimitReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.FixAdaptersReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="P:TTUSAPI.UserProductLimitReportsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.CompanyUpdateEventArgs">
            <summary>Represents the information returned in an OnCompanyUpdate callback</summary>
            <see cref="E:TTUSApi.OnCompanyUpdate"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Gateway">Gateway Class</seealso>
        </member>
        <member name="P:TTUSAPI.CompanyUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CompanyUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CompanyUpdateEventArgs.Companies">
            <summary>Gets the companies that were updated on the server</summary>
            <value>Dictionary of company ID and <see cref="T:CompanyInfo:TTUSAPI.DataObjetcts.CompanyInfo">CompanyInfo</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.CompanyInfo.CompanyID">CompanyID</see> property of each <see cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo</see>.</remarks>
        </member>
        <member name="P:TTUSAPI.ICEProductGroupsEventArgs.ReportName">
            <summary>Gets the name of the report</summary>
            <value>String containing the report name</value>
        </member>
        <member name="T:TTUSAPI.SystemSettingsUpdateEventArgs">
             <summary>Represents the information returned in an OnSystemSettingsUpdate callback</summary>
            
             <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
             <seealso cref="E:TTUSAPI.TTUSAPI.OnSystemSettingsUpdate"/>
             <seealso cref="T:TTUSAPI.DataObjects.SystemSettings"/>
        </member>
        <member name="P:TTUSAPI.SystemSettingsUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.SystemSettingsUpdateEventArgs.SystemSettings">
             <summary>Gets the system settings from the server</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.SystemSettings">SystemSettings</see> object containing the updated settings</value>
        </member>
        <member name="T:TTUSAPI.CountryDownloadEventArgs">
            <summary>Represents information returned in an OnCountryDownload callback</summary>
            <see cref="E:TTUSApi.OnCountryDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Country"></seealso>
            <requirements>The API fires this event only once when initializing your application.</requirements>
        </member>
        <member name="P:TTUSAPI.CountryDownloadEventArgs.Countries">
            <summary>Gets the countries downloaded from the server</summary>
            <value>Dictionary of country ID and <see cref="T:TTUSAPI.DataObjects.Country">Country</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.Country.CountryID">CountryID</see> property of each <see cref="T:TTUSAPI.DataObjects.Country">Country</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.XTraderModeDownloadEventArgs">
            <summary>Represents information returned in an OnXTraderModeDownload callback</summary>
            <see cref="E:TTUSApi.OnXTradeModeDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.XTraderMode">XTraderMode Class</seealso>
            <requirements>The API fires this event only once when initializing your application.</requirements>
        </member>
        <member name="P:TTUSAPI.XTraderModeDownloadEventArgs.XTraderModes">
            <summary>Gets the supported X_TRADER modes from the server</summary>
            <value>Dictionary of IDs and <see cref="T:TTUSAPI.DataObjects.XTraderMode">XTraderMode</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.XTraderMode.XTraderModeID">XTraderModeID</see> property of each <see cref="T:TTUSAPI.DataObjects.XTraderMode">XTraderMode</see>.</remarks>
        </member>
        <member name="P:TTUSAPI.TTApplicationsDownloadEventArgs.TTApplications">
            <summary>Gets the supported TT client applications</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.TTApplication">TTApplication</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.TTApplication.ApplicationID">ApplicationID</see> property of each <see cref="T:TTUSAPI.DataObjects.TTApplication">TTApplication</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.MarketDownloadEventArgs">
            <summary>Represents information returned in an OnMarketsDownload callback</summary>
            <see cref="E:TTUSApi.OnMarketsDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Market">Market Class</seealso>
            <requirements>The API fires this event only once when initializing your application.</requirements>
        </member>
        <member name="P:TTUSAPI.MarketDownloadEventArgs.Markets">
            <summary>Gets the available markets from the server</summary>
            <value>Dictionary of IDs and <see cref="T:TTUSAPI.DataObjects.Market">Market</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.Market.MarketID">MarketID</see> property of each <see cref="T:TTUSAPI.DataObjects.Market">Market</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.GatewayUpdateEventArgs">
            <summary>Represents information returned in an OnGatewayssDownload callback</summary>
            <see cref="E:TTUSApi.OnGatewaysDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <requirements>The API fires this event only once when initializing your application.</requirements>
        </member>
        <member name="P:TTUSAPI.GatewayUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.GatewayUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.GatewayUpdateEventArgs.Gateways">
            <summary>Gets the available gateways from the server</summary>
            <value>Dictionary of IDs and <see cref="T:TTUSAPI.DataObjects.Gateway">Gateway</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.Gateway.GatewayID">GatewayID</see> property of each <see cref="T:TTUSAPI.DataObjects.Gateway">Gateway</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.GatewayRejectEventArgs">
            <summary>Represents the information returned in a OnGatewayReject callback</summary>
            <see cref="E:TTUSApi.OnGatewayReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.User">User Class</seealso>
        </member>
        <member name="P:TTUSAPI.GatewayRejectEventArgs.Gateway">
            <summary>Gets the gateway whose update request the server rejected</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.Gateway"/> object rejected by the server</value>
        </member>
        <member name="P:TTUSAPI.GatewayRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.GatewayRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.GatewayRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.ProductGroupsDownloadEventArgs">
            <summary>Represents the information returned in an OnProductGroupsDownload callback</summary>
            <see cref="E:TTUSApi.OnProductGroupsDownload "/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.MarketProductGroup">MarketProductGroup Class</seealso>
        </member>
        <member name="P:TTUSAPI.ProductGroupsDownloadEventArgs.ProductGroups">
            <summary>Gets the available product groups from the server</summary>
            <value>Dictionary of IDs and <see cref="T:TTUSAPI.DataObjects.MarketProductGroup">MarketProductGroup</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.MarketProductGroup.ProductGroupID">ProductGroupID</see> property of each <see cref="T:TTUSAPI.DataObjects.MarketProductGroup">MarketProductGroup</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.CurrencyUpdateEventArgs">
            <summary>Represents the information returned in an OnCurrencyUpdate callback</summary>
            <see cref="E:TTUSApi.OnCurrencyUpdate"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Currency">Currency Class</seealso>
        </member>
        <member name="P:TTUSAPI.CurrencyUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CurrencyUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CurrencyUpdateEventArgs.Currencies">
            <value>Dictionary of currency ID and <see cref="T:TTUSAPI.DataObjects.Currency">Currency</see> object pairs for each updated currency</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.Currency.CurrencyID">CurrencyID</see> property of each <see cref="T:TTUSAPI.DataObjects.Currency">Currency</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.CurrencyRejectEventArgs">
            <summary>Represents the information returned in an OnCurrencyReject callback</summary>
            <see cref="E:TTUSApi.OnCurrencyReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.Currency">Currency Class</seealso>
        </member>
        <member name="P:TTUSAPI.CurrencyRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CurrencyRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CurrencyRejectEventArgs.Currency">
            <summary>Gets the currency rejected by the server.</summary>
            <value><see cref="T:TTUSAPI.DataObjects.Currency">Currency</see> object containing the rejected information</value>
        </member>
        <member name="P:TTUSAPI.CurrencyRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.CurrencyExchangeRateUpdateEventArgs">
            <summary>Represents the information returned in an OnCurrencyExchangeRateUpdate callback</summary>
            <see cref="E:TTUSApi.OnCurrencyExchangeRateUpdate"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate Class</seealso>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateUpdateEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateUpdateEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateUpdateEventArgs.CurrencyExchangeRates">
            <value>Dictionary of exchange ID and <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate</see> object pairs</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.CurrencyExchangeRate.Name">Name</see> property of each <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.AccountTypeDownloadEventArgs">
            <summary>Represents the information returned in an OnAccountTypeDownload callback</summary>
            <see cref="E:TTUSApi.OnAccountTypeDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.AccountTypeDownloadEventArgs.AccountTypes">
            <summary>Gets the account types downloaded from the server</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.AccountType">AccountType</see> objects</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.AccountType.AccountTypeID">AccountTypeID</see> property of each <see cref="T:TTUSAPI.DataObjects.AccountType">AccountType</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.ProductTypeDownloadEventArgs">
            <summary>Represents the information returned in an OnProductTypeDownload callback</summary>
            <see cref="E:TTUSApi.OnProductTypeDownload"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.ProductType">ProductType Class</seealso>
        </member>
        <member name="P:TTUSAPI.ProductTypeDownloadEventArgs.ProductTypes">
            <summary>Gets the product types downloaded from the server</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.ProductType">ProductType</see> objects</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.ProductType.ProductTypeID">ProductGroupID</see> property of each <see cref="T:TTUSAPI.DataObjects.ProductType">ProductType</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.ServerStatusUpdateEventArgs">
            <summary>Represents the information returned in an OnServerStatusUpdate callback</summary>
            <see cref="E:TTUSApi.OnServiceStatusUpdate"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.ServerStatus">ServerStatus Class</seealso>
        </member>
        <member name="P:TTUSAPI.ServerStatusUpdateEventArgs.IsUpdated">
            <summary>Gets the flag indicating the Server collection was updated</summary>
            <value>true if updated, false no change</value>
        </member>
        <member name="P:TTUSAPI.ServerStatusUpdateEventArgs.Servers">
            <summary>Gets the status of the servers of the gateway</summary>
            <value>Dictionary of gateway name and <see cref="T:TTUSAPI.DataObjects.ServerStatus">ServerStatus</see> ServerStatus</value>
            <remarks>Each name corresponds to the <see cref="P:DataObjects.ServerStatus.Name">Name</see> property of each <see cref="T:TTUSAPI.DataObjects.ServerStatus">ServerStatus</see>.</remarks>
        </member>
        <member name="T:TTUSAPI.AccountRejectEventArgs">
            <summary>Represents the information returned in an OnAccountReject callback</summary>
            <see cref="E:TTUSApi.OnAccountReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.AccountRejectEventArgs.AccountInfo">
            <summary>Gets the account rejected by the server</summary>
        </member>
        <member name="P:TTUSAPI.AccountRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.AccountRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.AccountRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.AccountGroupRejectEventArgs">
            <summary>Represents the information returned in a OnAccountGroupReject callback</summary>
            <see cref="E:TTUSApi.OnAccountGroupReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
        </member>
        <member name="P:TTUSAPI.AccountGroupRejectEventArgs.AccountGroup">
            <summary>Gets the rejected account group</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.AccountGroup"/> object representing the group</value>
        </member>
        <member name="P:TTUSAPI.AccountGroupRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.AccountGroupRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.AccountGroupRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.ProductRejectEventArgs">
            <summary>Represents the information returned in a OnProductReject callback</summary>
            <see cref="E:TTUSApi.OnProductReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog Class</seealso>
        </member>
        <member name="P:TTUSAPI.ProductRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.ProductRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.ProductRejectEventArgs.MarketProductCatalogs">
            <summary>Gets the products rejected by the server</summary>
            <value>Dictionary of ID and <see cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog</see> objects</value>
            <remarks>Each ID corresponds to the <see cref="P:DataObjects.MarketProductCatalog.Market.MarketID">Market.MarketID</see> property of each <see cref="T:TTUSAPI.DataObjects.MarketProductCatalog">MarketProductCatalog</see>.</remarks>
        </member>
        <member name="P:TTUSAPI.ProductRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.UserGroupRejectEventArgs">
            <summary>Represents the information returned in a OnUserGroupReject callback</summary>
            <see cref="E:TTUSApi.OnUserGroupReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.UserGroup">UserGroup Class</seealso>
        </member>
        <member name="P:TTUSAPI.UserGroupRejectEventArgs.UserGroup">
            <summary>Gets the user group whose update request the server rejected</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.UserGroup"/> object rejected by the server</value>
        </member>
        <member name="P:TTUSAPI.UserGroupRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.UserGroupRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.UserGroupRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.UserRejectEventArgs">
            <summary>Represents the information returned in a OnUserReject callback</summary>
            <see cref="E:TTUSApi.OnUserReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.User">User Class</seealso>
        </member>
        <member name="P:TTUSAPI.UserRejectEventArgs.User">
            <summary>Gets the user whose update request the server rejected</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.User"/> object rejected by the server</value>
        </member>
        <member name="P:TTUSAPI.UserRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.UserRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.UserRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.FixServerRejectEventArgs">
            <summary>Represents information returned in an OnFixServerReject callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSAPI.OnFixServerReject">OnFixServerReject Event</seealso>
        </member>
        <member name="P:TTUSAPI.FixServerRejectEventArgs.FixServer">
            <summary>Gets the FIX Server rejected by the server</summary>
            <value>
            	<see cref="T:DataObjects.FixServer">FixServer</see> object identifying the rejected FIX Server</value>
        </member>
        <member name="P:TTUSAPI.FixServerRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType">UpdateType</see> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.FixServerRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.FixServerRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.GatewayLoginRejectEventArgs">
             <summary>Represents information returned in an OnGatewayLoginReject callback.</summary>
            
             <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
             <seealso cref="E:TTUSAPI.OnGatewayLoginReject>">OnGatewayLoginReject Event</seealso>
        </member>
        <member name="P:TTUSAPI.GatewayLoginRejectEventArgs.GatewayLogin">
            <summary>Gets the gateway login rejected by the server</summary>
            <value>
            	<see cref="T:DataObjects.GatewayLogin">GatewayLogin</see> object identifying the rejected gateway login</value>
        </member>
        <member name="P:TTUSAPI.GatewayLoginRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.GatewayLoginRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.GatewayLoginRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.SystemSettingsRejectEventArgs">
            <summary>Represents the information returned in an OnSystemSettingsReject callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.SystemSettings">SystemSettings Class</seealso>
            <seealso cref="E:TTUSApi.OnSystemSettingsReject">OnSystemSettingsReject Event</seealso>
        </member>
        <member name="P:TTUSAPI.SystemSettingsRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.SystemSettingsRejectEventArgs.SystemSettings">
            <summary>Gets the system settings rejected by the server</summary>
            <value>
            	<see cref="T:TTUSAPI.DataObjects.SystemSettings"/> object containing the rejected settings</value>
        </member>
        <member name="P:TTUSAPI.SystemSettingsRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.CurrencyExchangeRateRejectEventArgs">
            <summary>Represents the information returned in an OnCurrencyExchangeRateReject callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate Class</seealso>
            <seealso cref="E:TTUSApi.OnCurrencyExchangeRate">TTUSAPI.OnCurrencyExchangeRate Event</seealso>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateRejectEventArgs.CurrencyExchangeRates">
            <summary>Gets the rejected currency exchange rates</summary>
            <value>Dictionary of exchange rate name and <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate</see> object pairs</value>
            <remarks>Each name corresponds to the <see cref="P:DataObjects.CurrencyExchangeRate.Name">Name</see> property of each <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRate">CurrencyExchangeRate</see>.</remarks>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CurrencyExchangeRateRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.ConnectivityStatusEventArgs">
             <summary>Represents information returned in an OnConnectivityStatus callback</summary>
            
             <seealso cref="T:System.EventArgs">System.EventArgs class</seealso>
             <seealso cref="T:TTUSAPI.DataObjects.ServerInfo">ServerInfo Class</seealso>
             <seealso cref="T:TTUSAPI.OnConnectivityStatus">OnConnectivityStatus Event</seealso>
        </member>
        <member name="P:TTUSAPI.ConnectivityStatusEventArgs.ConnectivityStatus">
             <summary>Gets the status of the server connection</summary>
            
             <value><see cref="T:TTUSAPI.ConnectivityStatusType"/> enum indicating the status of the connection</value>
        </member>
        <member name="P:TTUSAPI.ConnectivityStatusEventArgs.ServerInfo">
             <summary>Gets the server whose connectivity status changed</summary>
            
             <value><see cref="T:TTUSAPI.DataObjects.ServerInfo"/> object representing the server associated with the event</value>
        </member>
        <member name="T:TTUSAPI.VersionRuleRejectEventArgs">
            <summary>Represents the information returned in a OnVersionRuleReject callback</summary>
            <see cref="E:TTUSApi.OnVersionRuleReject"/>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule Class</seealso>
        </member>
        <member name="P:TTUSAPI.VersionRuleRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.VersionRuleRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.VersionRuleRejectEventArgs.VersionRule">
            <summary>Gets the version rule rejected by the server</summary>
            <value>
            	<see cref="T:DataObjects.VersionRule">VersionRule</see> object rejected by the server</value>
        </member>
        <member name="P:TTUSAPI.VersionRuleRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.CompanyRejectEventArgs">
            <summary>Represents the information returned in an OnCompanyReject callback</summary>
            <seealso cref="T:System.EventArgs">System.EventArgs Class</seealso>
            <seealso cref="E:TTUSApi.OnCompanyReject">OnCompanyReject Event</seealso>
        </member>
        <member name="P:TTUSAPI.CompanyRejectEventArgs.TransactionID">
            <summary>Gets the ID of the request that generated the callback</summary>
            <value>Integer identifying the transaction</value>
        </member>
        <member name="P:TTUSAPI.CompanyRejectEventArgs.Type">
            <summary>Gets the type of update requested</summary>
            <value>
            	<see cref="T:TTUSAPI.UpdateType"/> enum identifying the type of update requested</value>
        </member>
        <member name="P:TTUSAPI.CompanyRejectEventArgs.CompanyInfo">
            <summary>Gets the details for the company rejected by the server</summary>
            <value>
            	<see cref="T:CompanyInfo:TTUSAPI.DataObjects.CompanyInfo"/> object containing the company details
            </value>
        </member>
        <member name="P:TTUSAPI.CompanyRejectEventArgs.RejectMessage">
            <summary>Gets the message sent by the server</summary>
            <value>String containing the rejection message</value>
        </member>
        <member name="T:TTUSAPI.TTUSApi">
            <summary>Represents an instance of the TT User Setup API</summary>
        </member>
        <member name="M:TTUSAPI.TTUSApi.#ctor(TTUSAPI.TTUSApi.StartupMode)">
            <summary>Instantiates an instance of the TTUSAPI class</summary>
            <param name="startupMode">
            	<see cref="T:StartupMode">StartupMode</see> enum indicating the type of application</param>
            <returns>New <see cref="N:TTUSAPI"/> instance</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.WriteLog(System.String)">
            <summary>(For Internal TT Use Only) Writes a message to the system log file</summary>
        </member>
        <member name="M:TTUSAPI.TTUSApi.Login(System.String,System.String)">
            <summary>Logs in to the TT User Setup server with specified credentials</summary>
            <param name="userName">String containing the TT Universal Login name for the TT User Setup account</param>
            <param name="password">String containing the corresponding password</param>
        </member>
        <member name="M:TTUSAPI.TTUSApi.Logoff">
            <summary>Logs out of the TT User Setup server</summary>
        </member>
        <member name="M:TTUSAPI.TTUSApi.SendEmail(TTUSAPI.DataObjects.EmailSettings,System.Collections.Generic.HashSet{System.String})">
            <summary>Sends an administrative email to a set of recipients</summary>
            <param name="emailSettings">
            	<see cref="T:TTUSAPI.DataObjects.EmailSettings">EmailSettings</see> object containing the message</param>
            <param name="ToEmailAddresses">Email addresses of the intended recipients</param>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddUserGroup(TTUSAPI.DataObjects.UserGroupProfile)">
            <summary>Adds a user group to the server</summary>
            <param name="userGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserGroupProfile">UserGroupProfile</see> object containing information about the new user group</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateUserGroup(TTUSAPI.DataObjects.UserGroupProfile)">
            <summary>Saves changes to an existing user group on the server</summary>
            <param name="userGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserGroupProfile">UserGroupProfile</see> object containing information about the new user group</param>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteUserGroup(TTUSAPI.DataObjects.UserGroupProfile)">
            <summary>Removes a user group from the server</summary>
            <param name="userGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserGroupProfile">UserGroupProfile</see> object identifying the user group to delete</param>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddUser(TTUSAPI.DataObjects.UserProfile)">
            <summary>Adds a user to the server</summary>
            <param name="userProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see> object containing the information about the new user</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateUser(TTUSAPI.DataObjects.UserProfile)">
            <summary>Saves changes to an existing user on the server</summary>
            <param name="userProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see> object containing the information about the new user</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteUser(TTUSAPI.DataObjects.UserProfile)">
            <summary>Removes a user from the server</summary>
            <param name="userProfile">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see> object identifying the user to delete</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.User,TTUSAPI.DataObjects.UserProfile)">
            <summary>Gets whether a UserProfile object contains different data than its corresonding User object</summary>
            <param name="userOriginal">
            	<see cref="T:TTUSAPI.DataObjects.User">User</see> object retrieved from the server</param>
            <param name="userModified">
            	<see cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile</see> object derived from the object specified in the <em>userOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.User">User Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.UserProfile">UserProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Adds a FIX server</summary>
            <param name="fixServerProfile">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile">FixServerProfile</see> object containing the server details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Saves changes to an existing FIX server</summary>
            <param name="fixServerProfile">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile">FixServerProfile</see> object containing the server details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteFixServer(TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Removes a FIX server from the TTUS server</summary>
            <param name="fixServerProfile">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile">FixServerProfile</see> object containing the server details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.FixServer,TTUSAPI.DataObjects.FixServerProfile)">
            <summary>Gets whether a FixServerProfile object contains different data than its corresonding FixServer object</summary>
            <param name="fixServerOriginal">
            	<see cref="T:TTUSAPI.DataObjects.FixServer">FixServer</see> object retrieved from the server</param>
            <param name="fixServerModified">
            	<see cref="T:TTUSAPI.DataObjects.FixServerProfile">FixServerProfile</see> object derived from the object specified in the <em>fixServerOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="T:TTUSAPI.DataObjects.FixServer">FixServer Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.FixServerProfile">FixServerProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Adds a gateway login to the server</summary>
            <param name="gatewayLoginProfile">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object containing the login details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile,System.Boolean)">
            <summary>Saves changes to an existing gateway login on the server</summary>
            <param name="gatewayLoginProfile">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object containing the login details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteGatewayLogin(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Removes a gateway login from the server</summary>
            <param name="gatewayLoginProfile">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object containing the login details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.GatewayLogin,TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Gets whether a GatewayLoginProfile object contains different data than its corresonding GatewayLogin object</summary>
            <param name="gatewayLoginOriginal">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin</see> object retrieved from the server</param>
            <param name="gatewayLoginModified">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object derived from the object specified in the <em>gatewayLoginOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.GatewayLogin">GatewayLogin Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.ClearPassword(TTUSAPI.DataObjects.GatewayLoginProfile)">
            <summary>Removes the password from the gateway login on the server</summary>
            <param name="gatewayLoginProfile">
            	<see cref="T:TTUSAPI.DataObjects.GatewayLoginProfile">GatewayLoginProfile</see> object to clear</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateGateway(TTUSAPI.DataObjects.GatewayProfile)">
            <summary>Saves changes to an existing gateway on the server</summary>
            <param name="gatewayProfile">
            	<see cref="T:TTUSAPI.DataObjects.GatewayProfile">GatewayProfile</see> object containing the login details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddAccount(TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Adds an account to the server</summary>
            <param name="accountInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object containing the account details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateAccount(TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Saves changes made to an account on the server</summary>
            <param name="accountInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object containing the account details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteAccount(TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Removes an account from the server</summary>
            <param name="accountInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object containing the account details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.AccountInfo,TTUSAPI.DataObjects.AccountInfoProfile)">
            <summary>Gets whether a AccountInfoProfile object contains different data than its corresonding AccountInfo object</summary>
            <param name="accountInfoOriginal">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo</see> object retrieved from the server</param>
            <param name="accountInfoModified">
            	<see cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile</see> object derived from the object specified in the <em>accountInfoOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AccountInfo">AccountInfo Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AccountInfoProfile">AccountInfoProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddAccountGroup(TTUSAPI.DataObjects.AccountGroupProfile)">
            <summary>Adds an account group to the server</summary>
            <param name="accountGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile</see> object containing the account group details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateAccountGroup(TTUSAPI.DataObjects.AccountGroupProfile,System.Boolean)">
            <summary>Saves changes made to an existing account group on the server</summary>
            <param name="accountGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile</see> object containing the account group details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteAccountGroup(TTUSAPI.DataObjects.AccountGroupProfile)">
            <summary>Deletes an account group from the server</summary>
            <param name="accountGroupProfile">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile</see> object containing the account group details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.AccountGroup,TTUSAPI.DataObjects.AccountGroupProfile)">
            <summary>Gets whether a AccountGroupProfile object contains different data than its corresonding AccountGroup object</summary>
            <param name="accountGroupOriginal">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup</see> object retrieved from the server</param>
            <param name="accountGroupModified">
            	<see cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile</see> object derived from the object specified in the <em>accountGroupOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AccountGroup">AccountGroup Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.AccountGroupProfile">AccountGroupProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateSystemSettings(TTUSAPI.DataObjects.SystemSettingsProfile)">
            <summary>Saves changes made in the system settings to the server</summary>
            <param name="systemSettingsProfile">
            	<see cref="T:TTUSAPI.DataObjects.SystemSettingsProfile">SystemSettingsProfile</see> object containing the updated settings</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddCurrency(TTUSAPI.DataObjects.CurrencyProfile)">
            <summary>Adds a tradable currency to the server</summary>
            <param name="currencyProfile">
            	<see cref="T:TTUSAPI.DataObjects.CurrencyProfile">CurrencyProfile</see> object representing the new currency</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteCurrency(TTUSAPI.DataObjects.CurrencyProfile)">
            <param name="currencyProfile">
            	<see cref="T:TTUSAPI.DataObjects.CurrencyProfile">CurrencyProfile</see> object representing the currency</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdatePrimaryCurrency(TTUSAPI.DataObjects.CurrencyProfile)">
            <summary>Sets the new primary currency</summary>
            <param name="currencyProfile">
            	<see cref="T:TTUSAPI.DataObjects.CurrencyProfile">CurrencyProfile</see> object representing the new primary currency</param>
            <remarks>After calling this method, the API sets the <see cref="P:TTUSAPI.DataObjects.Currency.IsPrimaryCurrency">IsPrimaryCurrency</see> property to <strong>true</strong> for the
            specified currency and automatically sets it to <strong>false</strong> for the prior primary currency.</remarks>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateCurrencyExchangeRates(System.Collections.Generic.HashSet{TTUSAPI.DataObjects.CurrencyExchangeRateProfile})">
            <summary>Saves changes made to currency exchange rates to the server</summary>
            <param name="currencyExchangeRateProfiles">Hash set of <see cref="T:TTUSAPI.DataObjects.CurrencyExchangeRateProfile">CurrencyExchangeRateProfile</see> objects containing the updated data</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateProducts(System.Collections.Generic.HashSet{TTUSAPI.DataObjects.ProductProfile})">
            <summary>Saves changes made to one or more products to the server</summary>
            <param name="productProfiles">Hash set of <see cref="T:TTUSAPI.DataObjects.ProductProfile">ProductProfile</see> objects containing the updated data</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.GetProducts">
            <summary>Sends a request to the server for its list of products</summary>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddVersionRule(TTUSAPI.DataObjects.VersionRuleProfile)">
            <summary>Adds a new version rule to the server</summary>
            <param name="versionRuleProfile">
            	<see cref="T:TTUSAPI.DataObjects.VersionRuleProfile">VersionRuleProfile</see> object defining the new rule</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateVersionRule(TTUSAPI.DataObjects.VersionRuleProfile)">
            <summary>Saves changes to an existing version rule on the server</summary>
            <param name="versionRuleProfile">
            	<see cref="T:TTUSAPI.DataObjects.VersionRuleProfile">VersionRuleProfile</see> object defining the updated rule</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteVersionRule(TTUSAPI.DataObjects.VersionRuleProfile)">
            <summary>Deletes a version rule from the server</summary>
            <param name="versionRuleProfile">
            	<see cref="T:TTUSAPI.DataObjects.VersionRuleProfile">VersionRuleProfile</see> object identifying the rule to delete</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.VersionRule,TTUSAPI.DataObjects.VersionRuleProfile)">
            <summary>Gets whether a VersionRuleProfile object contains different data than its corresonding VersionRule object</summary>
            <param name="versionRuleOriginal">
            	<see cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule</see> object retrieved from the server</param>
            <param name="versionRuleModified">
            	<see cref="T:TTUSAPI.DataObjects.VersionRuleProfile">VersionRuleProfile</see> object derived from the object specified in the <em>versionRuleOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.VersionRule">VersionRule Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.VersionRuleProfile">VersionRuleProfile Class</seealso>
        </member>
        <member name="M:TTUSAPI.TTUSApi.AddCompany(TTUSAPI.DataObjects.CompanyInfoProfile)">
            <summary>Adds a company to the server</summary>
            <param name="companyInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.CompanyInfoProfile">CompanyInfoProfile</see> object containing the company details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.UpdateCompany(TTUSAPI.DataObjects.CompanyInfoProfile)">
            <summary>Saves changes made to an existing company on the server</summary>
            <param name="companyInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.CompanyInfoProfile">CompanyInfoProfile</see> object containing the company details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.DeleteCompany(TTUSAPI.DataObjects.CompanyInfoProfile)">
            <summary>Removes an existing company from the server</summary>
            <param name="companyInfoProfile">
            	<see cref="T:TTUSAPI.DataObjects.CompanyInfoProfile">CompanyInfoProfile</see> object containing the company details</param>
            <returns>
            	<see cref="T:TTUSAPI.ResultStatus">TTUSAPI.ResultStatus</see> object indicating the status of the server request</returns>
        </member>
        <member name="M:TTUSAPI.TTUSApi.IsModified(TTUSAPI.DataObjects.CompanyInfo,TTUSAPI.DataObjects.CompanyInfoProfile)">
            <summary>Gets whether a CompanyInfoProfile object contains different data than its corresonding CompanyInfo object</summary>
            <param name="companyInfoOriginal">
            	<see cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo</see> object retrieved from the server</param>
            <param name="companyInfoModified">
            	<see cref="T:TTUSAPI.DataObjects.CompanyInfoProfile">CompanyInfoProfile</see> object derived from the object specified in the <em>companyInfoOriginal</em> parameter</param>
            <returns>
            	<strong>true</strong> if the value of one or more properties differs between the two objects; <strong>false</strong> if no values differ or if either parameter
            is null</returns>
            <seealso cref="N:TTUSAPI"></seealso>
            <seealso cref="T:TTUSAPI.DataObjects.CompanyInfo">CompanyInfo Class</seealso>
            <seealso cref="T:TTUSAPI.DataObjects.CompanyInfoProfile">CompanyInfoProfile Class</seealso>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnSystemSettingsUpdate">
            <summary>Event queue for all listeners interested in OnSystemSettingsUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnSystemSettingsReject">
            <summary>Event queue for all listeners interested in OnSystemSettingsReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCountriesDownload">
            <summary>Event queue for all listeners interested in OnCountriesDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnXTraderModesDownload">
            <summary>Event queue for all listeners interested in OnXTraderModesDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnTTApplicationsDownload">
            <summary>Event queue for all listeners interested in OnTTApplicationsDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnMarketsDownload">
            <summary>Event queue for all listeners interested in OnMarketsDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnGatewayUpdate">
            <summary>Event queue for all listeners interested in OnGatewaysDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnGatewayReject">
            <summary>Event queue for all listeners interested in OnGatewayReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnProductGroupsDownload">
            <summary>Event queue for all listeners interested in OnProductGroupsDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCurrencyUpdate">
            <summary>Event queue for all listeners interested in OnCurrencyUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCurrencyReject">
            <summary>Event queue for all listeners interested in OnCurrencyReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnAccountTypesDownload">
            <summary>Event queue for all listeners interested in OnAccountTypesDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnProductTypesDownload">
            <summary>Event queue for all listeners interested in OnProductTypesDownload events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCompanyUpdate">
            <summary>Event queue for all listeners interested in OnCompanyUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCompanyReject">
            <summary>Event queue for all listeners interested in OnCompanyReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnServerStatusUpdate">
            <summary>Event queue for all listeners interested in OnServerStatusUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnLoginStatusUpdate">
            <summary>Event queue for all listeners interested in OnLoginStatusUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnConnectivityStatusUpdate">
            <summary>Event queue for all listeners interested in OnConnectivityStatusUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnInitializeComplete">
            <summary>Event queue for all listeners interested in OnInitializeComplete events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnUserGroupUpdate">
            <summary>Event queue for all listeners interested in OnUserGroupUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnUserGroupReject">
            <summary>Event queue for all listeners interested in OnUserGroupReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnUserUpdate">
            <summary>Event queue for all listeners interested in OnUserUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnUserReject">
            <summary>Event queue for all listeners interested in OnUserReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnFixServerUpdate">
            <summary>Event queue for all listeners interested in OnFixServerUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnFixServerReject">
            <summary>Event queue for all listeners interested in OnFixServerReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnGatewayLoginUpdate">
            <summary>Event queue for all listeners interested in OnGatewayLoginUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnGatewayLoginReject">
            <summary>Event queue for all listeners interested in OnGatewayLoginReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnAccountGroupUpdate">
            <summary>Event queue for all listeners interested in OnAccountGroupUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnAccountGroupReject">
            <summary>Event queue for all listeners interested in OnAccountGroupReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnAccountUpdate">
            <summary>Event queue for all listeners interested in OnAccountUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnAccountReject">
            <summary>Event queue for all listeners interested in OnAccountReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCurrencyExchangeRateUpdate">
            <summary>Event queue for all listeners interested in OnCurrencyExchangeRateUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnCurrencyExchangeRateReject">
            <summary>Event queue for all listeners interested in OnCurrencyExchangeRateReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnProductUpdate">
            <summary>Event queue for all listeners interested in OnProductUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnProductReject">
            <summary>Event queue for all listeners interested in OnProductReject events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnVersionRuleUpdate">
            <summary>Event queue for all listeners interested in OnVersionRuleUpdate events</summary>
        </member>
        <member name="E:TTUSAPI.TTUSApi.OnVersionRuleReject">
            <summary>Event queue for all listeners interested in OnVersionRuleReject events</summary>
        </member>
        <member name="P:TTUSAPI.TTUSApi.EnableServerStatusCallbacks">
            <summary>Gets or sets whether to send callbacks when the server status changes</summary>
            <value>
            	<strong>true</strong> to enable; <strong>false</strong> to disable</value>
        </member>
        <member name="T:TTUSAPI.TTUSApi.StartupMode">
            <summary>Possible applications modes</summary>
        </member>
        <member name="F:TTUSAPI.TTUSApi.StartupMode.Normal">
            <summary>Runs as a Windows Forms or WPF application</summary>
        </member>
        <member name="F:TTUSAPI.TTUSApi.StartupMode.Console">
            <summary>Runs as a console application</summary>
        </member>
        <member name="F:TTUSAPI.TTUSApi.StartupMode.Service">
            <summary>Runs as a Windows service</summary>
        </member>
        <member name="T:TTUSAPI.TTUSApi.SystemSettingsUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnSystemSettingsUpdate">OnSystemSettingsUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.SystemSettingsUpdateEventArgs">SystemSettingsUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.SystemSettingsRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnSystemSettingsReject">OnSystemSettingsReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.SystemSettingsRejectEventArgs">SystemSettingsRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CountryDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCountriesDownload">OnCountriesDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CountryDownloadEventArgs">CountryDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.XTraderModeDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnXTraderModesDownload">OnXTraderModesDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.XTraderModeDownloadEventArgs">XTraderModeDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.TTApplicationsDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnTTApplicationsDownload">OnTTApplicationsDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.TTApplicationsDownloadEventArgs">TTApplicationsDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.MarketsDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnMarketsDownload">OnMarketsDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.MarketDownloadEventArgs">MarketDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.GatewayUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnGatewayUpdate">OnGatewayUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.GatewayUpdateEventArgs">GatewayUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.GatewayRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnGatewayReject">OnGatewayReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.GatewayRejectEventArgs">GatewayRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ProductGroupsDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnProductGroupsDownload">OnProductGroupsDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ProductGroupsDownloadEventArgs">ProductGroupsDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CurrencyUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCurrencyUpdate">OnCurrencyUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CurrencyUpdateEventArgs">CurrencyUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CurrencyRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCurrencyReject">OnCurrencyReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CurrencyRejectEventArgs">CurrencyRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AccountTypeDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnAccountTypesDownload">OnAccountTypesDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CurrencyRejectEventArgs">CurrencyRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ProductTypeDownloadHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnProductTypesDownload">OnProductTypesDownload</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ProductTypeDownloadEventArgs">ProductTypeDownloadEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CompanyUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCompanyUpdate">OnCompanyUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CompanyUpdateEventArgs">CompanyUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CompanyRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCompanyReject">OnCompanyReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CompanyRejectEventArgs">CompanyRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ServerStatusUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnServerStatusUpdate">OnServerStatusUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ServerStatusUpdateEventArgs">ServerStatusUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.LoginStatusHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnLoginStatusUpdate">OnLoginStatusUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.LoginStatusEventArgs">LoginStatusEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ConnectivityStatusUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnConnectivityStatusUpdate">OnConnectivityStatusUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ConnectivityStatusEventArgs">ConnectivityStatusEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.InitializeCompleteHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnInitializeComplete">OnInitializeComplete</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.InitializeCompleteEventArgs">InitializeCompleteEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.UserGroupUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnUserGroupUpdate">OnUserGroupUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.UserGroupUpdateEventArgs">UserGroupUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.UserGroupRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnUserGroupUpdate">OnUserGroupUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.UserGroupRejectEventArgs">UserGroupRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.UserUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnUserUpdate">OnUserUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.UserUpdateEventArgs">UserUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.UserRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnUserReject">OnUserReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.UserRejectEventArgs">UserRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.FixServerUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnFixServerUpdate">OnFixServerUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.FixServerUpdateEventArgs">FixServerUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.FixServerRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnFixServerReject">OnFixServerReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.FixServerRejectEventArgs">FixServerRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.GatewayLoginUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnGatewayLoginUpdate">OnGatewayLoginUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.GatewayLoginUpdateEventArgs">GatewayLoginUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.GatewayLoginRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnGatewayLoginReject">OnGatewayLoginReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.GatewayLoginRejectEventArgs">GatewayLoginRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AccountGroupUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnAccountGroupUpdate">OnAccountGrouUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.AccountGroupUpdateEventArgs">AccountGroupUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AccountGroupRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnAccountGroupReject">OnAccountGroupReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.AccountGroupRejectEventArgs">AccountGroupRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AccountUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnAccountUpdate">OnAccountUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.AccountUpdateEventArgs">AccountUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AccountRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnAccountReject">OnAccountReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.AccountGroupRejectEventArgs">AccountRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CurrencyExchangeRateUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCurrencyExchangeRateUpdate">OnCurrencyExchangeRateUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CurrencyExchangeRateUpdateEventArgs">CurrencyExchangeRateUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.CurrencyExchangeRateRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnCurrencyExchangeRateReject">OnCurrencyExchangeRateReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.CurrencyExchangeRateRejectEventArgs">CurrencyExchangeRateRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ProductUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnProductUpdate">OnProductUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ProductUpdateEventArgs">ProductUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ProductRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnProductReject">OnProductReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.ProductRejectEventArgs">ProductRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.VersionRuleUpdateHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnVersionRuleUpdate">OnVersionRuleUpdate</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.VersionRuleUpdateEventArgs">VersionRuleUpdateEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.VersionRuleRejectHandler">
            <summary>Delegate matching the <see cref="E:TTUSAPI.TTUSApi.OnVersionRuleReject">OnVersionRuleReject</see> event</summary>
            <param name="sender">Event sender</param>
            <param name="e">
            	<see cref="T:TTUSAPI.VersionRuleRejectEventArgs">VersionRuleRejectEventArgs</see> object containing the event data</param>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AuditTrailListCallbacks">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.AuditTrailContentCallbacks">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.LoggedInUsersCallback">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.SendInstantMessageCallback">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.RunServerReportCallback">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ServersCallback">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.StartupDownloadCallback">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.GatewayLoginsCallbacks">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.ProductCallbacks">
            <buildflag>Exclude from Online</buildflag>
        </member>
        <member name="T:TTUSAPI.TTUSApi.PendingAction">
            <buildflag>Exclude from Online</buildflag>
        </member>
    </members>
</doc>
